// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`PageGoalShow.vue matches previous html snapshots when there is a goal with multiple tasks 1`] = `
VueWrapper {
  "__app": Object {
    "_component": Object {
      "name": "VTU_ROOT",
      "render": [Function],
    },
    "_container": <div
      data-v-app=""
    >
      <div
        class="list-group-item"
      >
        <div
          class="list-group-item-heading"
        >
          <div
            class="d-flex w-100 justify-content-between align-items-center"
          >
            <h2
              class="mb-1 mr-auto p-2"
              id="goal-name"
            >
              Goal #2
            </h2>
            <div
              class="flex-column text-right"
            >
              <div>
                <button
                  class="badge badge-pill"
                  id="edit-goal"
                >
                  <font-awesome-icon
                    icon="user-pen"
                  />
                </button>
                <button
                  class="badge badge-pill text-danger"
                  id="remove-goal"
                >
                  <font-awesome-icon
                    icon="trash"
                  />
                </button>
              </div>
              <button
                class="badge badge-warning badge-pill"
                id="toggle-goal-completion-in-progress"
              >
                 In Progress 
              </button>
            </div>
          </div>
          <div
            class="align-items-end d-flex w-100 justify-content-between"
          >
            <p
              class="p-2 my-2 list-group-item-light list-group-item-secondary"
              id="goal-description"
            >
              Description #2
            </p>
            <appdate
              class="badge badge-light badge-pill pull-right"
              timestamp="2022-04-15T07:25:23.269770Z"
            />
          </div>
        </div>
        <div
          class="pt-3 container list-group"
        >
          <div>
            <h3
              class="text-muted"
              id="tasks-header"
            >
              Tasks
            </h3>
            <task-list-stub
              tasks="[object Promise]"
            />
            <task-list-stub
              tasks="[object Promise]"
            />
          </div>
          <task-add-stub />
        </div>
      </div>
    </div>,
    "_context": Object {
      "app": [Circular],
      "components": Object {
        "transition": Object {
          "name": "transition",
        },
        "transition-group": Object {
          "name": "transition-group",
        },
      },
      "config": Object {
        "compilerOptions": Object {},
        "errorHandler": undefined,
        "globalProperties": Object {},
        "isNativeTag": [Function],
        "optionMergeStrategies": Object {},
        "performance": false,
        "warnHandler": undefined,
      },
      "directives": Object {},
      "emitsCache": WeakMap {},
      "mixins": Array [
        Object {
          "beforeCreate": [Function],
        },
      ],
      "optionsCache": WeakMap {},
      "propsCache": WeakMap {},
      "provides": Object {},
      "reload": [Function],
    },
    "_instance": Object {
      "a": null,
      "accessCache": Object {},
      "appContext": Object {
        "app": [Circular],
        "components": Object {
          "transition": Object {
            "name": "transition",
          },
          "transition-group": Object {
            "name": "transition-group",
          },
        },
        "config": Object {
          "compilerOptions": Object {},
          "errorHandler": undefined,
          "globalProperties": Object {},
          "isNativeTag": [Function],
          "optionMergeStrategies": Object {},
          "performance": false,
          "warnHandler": undefined,
        },
        "directives": Object {},
        "emitsCache": WeakMap {},
        "mixins": Array [
          Object {
            "beforeCreate": [Function],
          },
        ],
        "optionsCache": WeakMap {},
        "propsCache": WeakMap {},
        "provides": Object {},
        "reload": [Function],
      },
      "asyncDep": null,
      "asyncResolved": false,
      "attrs": Object {},
      "bc": null,
      "bm": null,
      "bu": null,
      "bum": null,
      "c": null,
      "components": null,
      "ctx": Object {
        "$store": Object {
          "dispatch": [MockFunction] {
            "calls": Array [
              Array [
                "fetchGoalTasks",
                Object {
                  "goalId": "2",
                },
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "getters": Object {
            "activeCompletedGoalTasks": [MockFunction] {
              "calls": Array [
                Array [
                  Promise {},
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Promise {},
                },
              ],
            },
            "activeGoalTasks": [MockFunction] {
              "calls": Array [
                Array [
                  [MockFunction],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Promise {},
                },
              ],
            },
            "activeInProgressGoalTasks": [MockFunction] {
              "calls": Array [
                Array [
                  Promise {},
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Promise {},
                },
              ],
            },
            "goal": [MockFunction],
            "goalTasks": [MockFunction],
          },
        },
      },
      "da": null,
      "data": Object {},
      "directives": null,
      "ec": null,
      "effect": ReactiveEffect {
        "active": true,
        "allowRecurse": true,
        "deps": Array [
          Set {
            [Circular],
          },
          Set {
            [Circular],
          },
          Set {
            [Circular],
          },
        ],
        "fn": [Function],
        "onTrack": undefined,
        "onTrigger": undefined,
        "parent": undefined,
        "scheduler": [Function],
      },
      "emit": [Function],
      "emitsOptions": null,
      "emitted": null,
      "exposeProxy": null,
      "exposed": null,
      "inheritAttrs": undefined,
      "isDeactivated": false,
      "isMounted": true,
      "isUnmounted": false,
      "m": null,
      "next": null,
      "parent": null,
      "props": Object {},
      "propsDefaults": Object {},
      "propsOptions": Array [
        Object {},
        Array [],
      ],
      "provides": Object {},
      "proxy": Object {
        "$store": Object {
          "dispatch": [MockFunction] {
            "calls": Array [
              Array [
                "fetchGoalTasks",
                Object {
                  "goalId": "2",
                },
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "getters": Object {
            "activeCompletedGoalTasks": [MockFunction] {
              "calls": Array [
                Array [
                  Promise {},
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Promise {},
                },
              ],
            },
            "activeGoalTasks": [MockFunction] {
              "calls": Array [
                Array [
                  [MockFunction],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Promise {},
                },
              ],
            },
            "activeInProgressGoalTasks": [MockFunction] {
              "calls": Array [
                Array [
                  Promise {},
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Promise {},
                },
              ],
            },
            "goal": [MockFunction],
            "goalTasks": [MockFunction],
          },
        },
      },
      "refs": Object {
        "VTU_COMPONENT": Object {
          "$store": Object {
            "dispatch": [MockFunction] {
              "calls": Array [
                Array [
                  "fetchGoalTasks",
                  Object {
                    "goalId": "2",
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            },
            "getters": Object {
              "activeCompletedGoalTasks": [MockFunction] {
                "calls": Array [
                  Array [
                    Promise {},
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": Promise {},
                  },
                ],
              },
              "activeGoalTasks": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": Promise {},
                  },
                ],
              },
              "activeInProgressGoalTasks": [MockFunction] {
                "calls": Array [
                  Array [
                    Promise {},
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": Promise {},
                  },
                ],
              },
              "goal": [MockFunction],
              "goalTasks": [MockFunction],
            },
          },
          "activeCompletedGoalTasks": Promise {},
          "activeGoalTasks": Promise {},
          "activeInProgressGoalTasks": Promise {},
          "addTask": [Function],
          "editGoal": [Function],
          "editingGoal": false,
          "finishEditingGoal": [Function],
          "goal": Object {
            "completed": false,
            "description": "Description #2",
            "id": 2,
            "name": "Goal #2",
            "removed": false,
            "timestamp": "2022-04-15T06:58:03.382281Z",
            "updated": "2022-04-15T07:25:23.269770Z",
            "user": 6,
          },
          "goalId": "2",
          "goalTasks": [MockFunction],
          "hasOwnProperty": [Function],
          "removeGoal": [Function],
          "saveEditedGoal": [Function],
          "saveEditedTask": [Function],
          "toggleGoalCompletion": [Function],
        },
      },
      "render": [Function],
      "renderCache": Array [],
      "root": [Circular],
      "rtc": null,
      "rtg": null,
      "scope": EffectScope {
        "active": true,
        "cleanups": Array [],
        "effects": Array [
          ReactiveEffect {
            "active": true,
            "allowRecurse": true,
            "deps": Array [
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
            ],
            "fn": [Function],
            "onTrack": undefined,
            "onTrigger": undefined,
            "parent": undefined,
            "scheduler": [Function],
          },
        ],
      },
      "setupContext": null,
      "setupState": Object {},
      "slots": Object {},
      "sp": null,
      "subTree": Object {
        "__v_isVNode": true,
        "__v_skip": true,
        "anchor": null,
        "appContext": null,
        "children": null,
        "component": Object {
          "a": null,
          "accessCache": Object {
            "$store": 4,
            "@@__IMMUTABLE_ITERABLE__@@": 0,
            "@@__IMMUTABLE_RECORD__@@": 0,
            "_isMockFunction": 0,
            "activeCompletedGoalTasks": 4,
            "activeGoalTasks": 4,
            "activeInProgressGoalTasks": 4,
            "addTask": 4,
            "constructor": 0,
            "editGoal": 4,
            "editingGoal": 2,
            "finishEditingGoal": 4,
            "goal": 2,
            "goalId": 3,
            "goalTasks": 4,
            "hasOwnProperty": 4,
            "isVueInstance": 0,
            "removeGoal": 4,
            "saveEditedGoal": 4,
            "saveEditedTask": 4,
            "toJSON": 0,
            "toggleGoalCompletion": 4,
            Symbol(Symbol.toStringTag): 0,
          },
          "appContext": Object {
            "app": [Circular],
            "components": Object {
              "transition": Object {
                "name": "transition",
              },
              "transition-group": Object {
                "name": "transition-group",
              },
            },
            "config": Object {
              "compilerOptions": Object {},
              "errorHandler": undefined,
              "globalProperties": Object {},
              "isNativeTag": [Function],
              "optionMergeStrategies": Object {},
              "performance": false,
              "warnHandler": undefined,
            },
            "directives": Object {},
            "emitsCache": WeakMap {},
            "mixins": Array [
              Object {
                "beforeCreate": [Function],
              },
            ],
            "optionsCache": WeakMap {},
            "propsCache": WeakMap {},
            "provides": Object {},
            "reload": [Function],
          },
          "asyncDep": null,
          "asyncResolved": false,
          "attrs": Object {},
          "bc": null,
          "bm": null,
          "bu": null,
          "bum": null,
          "c": null,
          "components": Object {
            "GoalEditor": Object {
              "data": [Function],
              "emits": Array [
                "saveEditedGoal",
                "finishEditingGoal",
              ],
              "methods": Object {
                "cancelEdit": [Function],
                "saveGoal": [Function],
              },
              "props": Object {
                "goal": Object {
                  "required": true,
                  "type": [Function],
                },
              },
              "render": [Function],
            },
            "TaskAdd": Object {
              "data": [Function],
              "methods": Object {
                "saveTask": [Function],
              },
              "render": [Function],
            },
            "TaskList": Object {
              "components": Object {
                "TaskCompleted": Object {
                  "emits": Array [
                    "editTask",
                    "removeTask",
                    "toggleTaskCompletion",
                  ],
                  "methods": Object {
                    "editTask": [Function],
                    "removeTask": [Function],
                    "toggleTaskCompletion": [Function],
                  },
                  "props": Object {
                    "task": Object {
                      "required": true,
                      "type": [Function],
                    },
                  },
                  "render": [Function],
                },
                "TaskEditor": Object {
                  "data": [Function],
                  "emits": Array [
                    "saveEditedTask",
                    "finishEditingTask",
                  ],
                  "methods": Object {
                    "cancelEdit": [Function],
                    "saveTask": [Function],
                  },
                  "props": Object {
                    "task": Object {
                      "required": true,
                      "type": [Function],
                    },
                  },
                  "render": [Function],
                },
                "TaskInProgress": Object {
                  "emits": Array [
                    "editTask",
                    "removeTask",
                    "toggleTaskCompletion",
                  ],
                  "methods": Object {
                    "editTask": [Function],
                    "removeTask": [Function],
                    "toggleTaskCompletion": [Function],
                  },
                  "props": Object {
                    "task": Object {
                      "required": true,
                      "type": [Function],
                    },
                  },
                  "render": [Function],
                },
              },
              "data": [Function],
              "emits": Array [
                "saveEditedTask",
              ],
              "methods": Object {
                "editTask": [Function],
                "editingThisTask": [Function],
                "finishEditingTask": [Function],
                "removeTask": [Function],
                "saveEditedTask": [Function],
                "toggleTaskCompletion": [Function],
              },
              "props": Object {
                "tasks": Object {
                  "0": false,
                  "1": true,
                  "requred": true,
                  "type": [Function],
                },
              },
              "render": [Function],
            },
          },
          "ctx": Object {
            "$store": Object {
              "dispatch": [MockFunction] {
                "calls": Array [
                  Array [
                    "fetchGoalTasks",
                    Object {
                      "goalId": "2",
                    },
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
              "getters": Object {
                "activeCompletedGoalTasks": [MockFunction] {
                  "calls": Array [
                    Array [
                      Promise {},
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": Promise {},
                    },
                  ],
                },
                "activeGoalTasks": [MockFunction] {
                  "calls": Array [
                    Array [
                      [MockFunction],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": Promise {},
                    },
                  ],
                },
                "activeInProgressGoalTasks": [MockFunction] {
                  "calls": Array [
                    Array [
                      Promise {},
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": Promise {},
                    },
                  ],
                },
                "goal": [MockFunction],
                "goalTasks": [MockFunction],
              },
            },
            "activeCompletedGoalTasks": Promise {},
            "activeGoalTasks": Promise {},
            "activeInProgressGoalTasks": Promise {},
            "addTask": [Function],
            "editGoal": [Function],
            "editingGoal": false,
            "finishEditingGoal": [Function],
            "goal": Promise {},
            "goalId": "2",
            "goalTasks": [MockFunction],
            "hasOwnProperty": [Function],
            "removeGoal": [Function],
            "saveEditedGoal": [Function],
            "saveEditedTask": [Function],
            "toggleGoalCompletion": [Function],
          },
          "da": null,
          "data": Object {
            "editingGoal": false,
            "goal": Object {
              "completed": false,
              "description": "Description #2",
              "id": 2,
              "name": "Goal #2",
              "removed": false,
              "timestamp": "2022-04-15T06:58:03.382281Z",
              "updated": "2022-04-15T07:25:23.269770Z",
              "user": 6,
            },
          },
          "directives": null,
          "ec": null,
          "effect": ReactiveEffect {
            "active": true,
            "allowRecurse": true,
            "deps": Array [
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
              Set {
                [Circular],
                ReactiveEffect {
                  "active": true,
                  "computed": ComputedRefImpl {
                    "__v_isReadonly": false,
                    "__v_isRef": true,
                    "_cacheable": true,
                    "_dirty": false,
                    "_setter": [Function],
                    "_value": Promise {},
                    "dep": Set {
                      [Circular],
                    },
                    "effect": [Circular],
                  },
                  "deps": Array [
                    [Circular],
                  ],
                  "fn": [Function],
                  "parent": undefined,
                  "scheduler": [Function],
                },
                ReactiveEffect {
                  "active": true,
                  "computed": ComputedRefImpl {
                    "__v_isReadonly": false,
                    "__v_isRef": true,
                    "_cacheable": true,
                    "_dirty": false,
                    "_setter": [Function],
                    "_value": Promise {},
                    "dep": Set {
                      [Circular],
                    },
                    "effect": [Circular],
                  },
                  "deps": Array [
                    [Circular],
                  ],
                  "fn": [Function],
                  "parent": undefined,
                  "scheduler": [Function],
                },
              },
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
            ],
            "fn": [Function],
            "onTrack": undefined,
            "onTrigger": undefined,
            "parent": undefined,
            "scheduler": [Function],
          },
          "emit": [Function],
          "emitsOptions": null,
          "emitted": null,
          "exposeProxy": null,
          "exposed": null,
          "inheritAttrs": undefined,
          "isDeactivated": false,
          "isMounted": true,
          "isUnmounted": false,
          "m": null,
          "next": null,
          "parent": [Circular],
          "props": Object {
            "goalId": "2",
          },
          "propsDefaults": Object {},
          "propsOptions": Array [
            Object {
              "goalId": Object {
                "0": false,
                "1": true,
                "required": true,
                "type": [Function],
              },
            },
            Array [],
          ],
          "provides": Object {},
          "proxy": Object {
            "$store": Object {
              "dispatch": [MockFunction] {
                "calls": Array [
                  Array [
                    "fetchGoalTasks",
                    Object {
                      "goalId": "2",
                    },
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
              "getters": Object {
                "activeCompletedGoalTasks": [MockFunction] {
                  "calls": Array [
                    Array [
                      Promise {},
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": Promise {},
                    },
                  ],
                },
                "activeGoalTasks": [MockFunction] {
                  "calls": Array [
                    Array [
                      [MockFunction],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": Promise {},
                    },
                  ],
                },
                "activeInProgressGoalTasks": [MockFunction] {
                  "calls": Array [
                    Array [
                      Promise {},
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": Promise {},
                    },
                  ],
                },
                "goal": [MockFunction] {
                  "calls": Array [
                    Array [
                      "2",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": Promise {},
                    },
                  ],
                },
                "goalTasks": [MockFunction],
              },
            },
            "activeCompletedGoalTasks": Promise {},
            "activeGoalTasks": Promise {},
            "activeInProgressGoalTasks": Promise {},
            "addTask": [Function],
            "editGoal": [Function],
            "editingGoal": false,
            "finishEditingGoal": [Function],
            "goal": Object {
              "completed": false,
              "description": "Description #2",
              "id": 2,
              "name": "Goal #2",
              "removed": false,
              "timestamp": "2022-04-15T06:58:03.382281Z",
              "updated": "2022-04-15T07:25:23.269770Z",
              "user": 6,
            },
            "goalId": "2",
            "goalTasks": [MockFunction],
            "hasOwnProperty": [Function],
            "removeGoal": [Function],
            "saveEditedGoal": [Function],
            "saveEditedTask": [Function],
            "toggleGoalCompletion": [Function],
          },
          "refs": Object {},
          "render": [Function],
          "renderCache": Array [
            [Function],
            [Function],
            ,
            [Function],
          ],
          "root": [Circular],
          "rtc": null,
          "rtg": null,
          "scope": EffectScope {
            "active": true,
            "cleanups": Array [],
            "effects": Array [
              ReactiveEffect {
                "active": true,
                "computed": ComputedRefImpl {
                  "__v_isReadonly": false,
                  "__v_isRef": true,
                  "_cacheable": true,
                  "_dirty": false,
                  "_setter": [Function],
                  "_value": Promise {},
                  "dep": undefined,
                  "effect": [Circular],
                },
                "deps": Array [
                  Set {
                    [Circular],
                  },
                ],
                "fn": [Function],
                "parent": undefined,
                "scheduler": [Function],
              },
              ReactiveEffect {
                "active": true,
                "computed": ComputedRefImpl {
                  "__v_isReadonly": false,
                  "__v_isRef": true,
                  "_cacheable": true,
                  "_dirty": false,
                  "_setter": [Function],
                  "_value": [MockFunction],
                  "dep": Set {
                    ReactiveEffect {
                      "active": true,
                      "computed": ComputedRefImpl {
                        "__v_isReadonly": false,
                        "__v_isRef": true,
                        "_cacheable": true,
                        "_dirty": false,
                        "_setter": [Function],
                        "_value": Promise {},
                        "dep": Set {
                          ReactiveEffect {
                            "active": true,
                            "allowRecurse": true,
                            "deps": Array [
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              [Circular],
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                            ],
                            "fn": [Function],
                            "onTrack": undefined,
                            "onTrigger": undefined,
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                          ReactiveEffect {
                            "active": true,
                            "computed": ComputedRefImpl {
                              "__v_isReadonly": false,
                              "__v_isRef": true,
                              "_cacheable": true,
                              "_dirty": false,
                              "_setter": [Function],
                              "_value": Promise {},
                              "dep": Set {
                                ReactiveEffect {
                                  "active": true,
                                  "allowRecurse": true,
                                  "deps": Array [
                                    Set {
                                      [Circular],
                                    },
                                    Set {
                                      [Circular],
                                    },
                                    Set {
                                      [Circular],
                                    },
                                    Set {
                                      [Circular],
                                    },
                                    Set {
                                      [Circular],
                                    },
                                    Set {
                                      [Circular],
                                    },
                                    [Circular],
                                    [Circular],
                                    Set {
                                      [Circular],
                                    },
                                  ],
                                  "fn": [Function],
                                  "onTrack": undefined,
                                  "onTrigger": undefined,
                                  "parent": undefined,
                                  "scheduler": [Function],
                                },
                              },
                              "effect": [Circular],
                            },
                            "deps": Array [
                              [Circular],
                            ],
                            "fn": [Function],
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                          ReactiveEffect {
                            "active": true,
                            "computed": ComputedRefImpl {
                              "__v_isReadonly": false,
                              "__v_isRef": true,
                              "_cacheable": true,
                              "_dirty": false,
                              "_setter": [Function],
                              "_value": Promise {},
                              "dep": Set {
                                ReactiveEffect {
                                  "active": true,
                                  "allowRecurse": true,
                                  "deps": Array [
                                    Set {
                                      [Circular],
                                    },
                                    Set {
                                      [Circular],
                                    },
                                    Set {
                                      [Circular],
                                    },
                                    Set {
                                      [Circular],
                                    },
                                    Set {
                                      [Circular],
                                    },
                                    Set {
                                      [Circular],
                                    },
                                    [Circular],
                                    Set {
                                      [Circular],
                                    },
                                    [Circular],
                                  ],
                                  "fn": [Function],
                                  "onTrack": undefined,
                                  "onTrigger": undefined,
                                  "parent": undefined,
                                  "scheduler": [Function],
                                },
                              },
                              "effect": [Circular],
                            },
                            "deps": Array [
                              [Circular],
                            ],
                            "fn": [Function],
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                        },
                        "effect": [Circular],
                      },
                      "deps": Array [
                        [Circular],
                      ],
                      "fn": [Function],
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                  },
                  "effect": [Circular],
                },
                "deps": Array [],
                "fn": [Function],
                "parent": undefined,
                "scheduler": [Function],
              },
              ReactiveEffect {
                "active": true,
                "computed": ComputedRefImpl {
                  "__v_isReadonly": false,
                  "__v_isRef": true,
                  "_cacheable": true,
                  "_dirty": false,
                  "_setter": [Function],
                  "_value": Promise {},
                  "dep": Set {
                    ReactiveEffect {
                      "active": true,
                      "allowRecurse": true,
                      "deps": Array [
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        [Circular],
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                      ],
                      "fn": [Function],
                      "onTrack": undefined,
                      "onTrigger": undefined,
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                    ReactiveEffect {
                      "active": true,
                      "computed": ComputedRefImpl {
                        "__v_isReadonly": false,
                        "__v_isRef": true,
                        "_cacheable": true,
                        "_dirty": false,
                        "_setter": [Function],
                        "_value": Promise {},
                        "dep": Set {
                          ReactiveEffect {
                            "active": true,
                            "allowRecurse": true,
                            "deps": Array [
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              [Circular],
                              [Circular],
                              Set {
                                [Circular],
                              },
                            ],
                            "fn": [Function],
                            "onTrack": undefined,
                            "onTrigger": undefined,
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                        },
                        "effect": [Circular],
                      },
                      "deps": Array [
                        [Circular],
                      ],
                      "fn": [Function],
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                    ReactiveEffect {
                      "active": true,
                      "computed": ComputedRefImpl {
                        "__v_isReadonly": false,
                        "__v_isRef": true,
                        "_cacheable": true,
                        "_dirty": false,
                        "_setter": [Function],
                        "_value": Promise {},
                        "dep": Set {
                          ReactiveEffect {
                            "active": true,
                            "allowRecurse": true,
                            "deps": Array [
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              [Circular],
                              Set {
                                [Circular],
                              },
                              [Circular],
                            ],
                            "fn": [Function],
                            "onTrack": undefined,
                            "onTrigger": undefined,
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                        },
                        "effect": [Circular],
                      },
                      "deps": Array [
                        [Circular],
                      ],
                      "fn": [Function],
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                  },
                  "effect": [Circular],
                },
                "deps": Array [
                  Set {
                    [Circular],
                  },
                ],
                "fn": [Function],
                "parent": undefined,
                "scheduler": [Function],
              },
              ReactiveEffect {
                "active": true,
                "computed": ComputedRefImpl {
                  "__v_isReadonly": false,
                  "__v_isRef": true,
                  "_cacheable": true,
                  "_dirty": false,
                  "_setter": [Function],
                  "_value": Promise {},
                  "dep": Set {
                    ReactiveEffect {
                      "active": true,
                      "allowRecurse": true,
                      "deps": Array [
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                          ReactiveEffect {
                            "active": true,
                            "computed": ComputedRefImpl {
                              "__v_isReadonly": false,
                              "__v_isRef": true,
                              "_cacheable": true,
                              "_dirty": false,
                              "_setter": [Function],
                              "_value": Promise {},
                              "dep": Set {
                                [Circular],
                              },
                              "effect": [Circular],
                            },
                            "deps": Array [
                              [Circular],
                            ],
                            "fn": [Function],
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        [Circular],
                      ],
                      "fn": [Function],
                      "onTrack": undefined,
                      "onTrigger": undefined,
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                  },
                  "effect": [Circular],
                },
                "deps": Array [
                  Set {
                    ReactiveEffect {
                      "active": true,
                      "allowRecurse": true,
                      "deps": Array [
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        [Circular],
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                      ],
                      "fn": [Function],
                      "onTrack": undefined,
                      "onTrigger": undefined,
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                    ReactiveEffect {
                      "active": true,
                      "computed": ComputedRefImpl {
                        "__v_isReadonly": false,
                        "__v_isRef": true,
                        "_cacheable": true,
                        "_dirty": false,
                        "_setter": [Function],
                        "_value": Promise {},
                        "dep": Set {
                          ReactiveEffect {
                            "active": true,
                            "allowRecurse": true,
                            "deps": Array [
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              [Circular],
                              [Circular],
                              Set {
                                [Circular],
                              },
                            ],
                            "fn": [Function],
                            "onTrack": undefined,
                            "onTrigger": undefined,
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                        },
                        "effect": [Circular],
                      },
                      "deps": Array [
                        [Circular],
                      ],
                      "fn": [Function],
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                    [Circular],
                  },
                ],
                "fn": [Function],
                "parent": undefined,
                "scheduler": [Function],
              },
              ReactiveEffect {
                "active": true,
                "computed": ComputedRefImpl {
                  "__v_isReadonly": false,
                  "__v_isRef": true,
                  "_cacheable": true,
                  "_dirty": false,
                  "_setter": [Function],
                  "_value": Promise {},
                  "dep": Set {
                    ReactiveEffect {
                      "active": true,
                      "allowRecurse": true,
                      "deps": Array [
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                          [Circular],
                          ReactiveEffect {
                            "active": true,
                            "computed": ComputedRefImpl {
                              "__v_isReadonly": false,
                              "__v_isRef": true,
                              "_cacheable": true,
                              "_dirty": false,
                              "_setter": [Function],
                              "_value": Promise {},
                              "dep": Set {
                                [Circular],
                              },
                              "effect": [Circular],
                            },
                            "deps": Array [
                              [Circular],
                            ],
                            "fn": [Function],
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                        },
                        [Circular],
                        Set {
                          [Circular],
                        },
                      ],
                      "fn": [Function],
                      "onTrack": undefined,
                      "onTrigger": undefined,
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                  },
                  "effect": [Circular],
                },
                "deps": Array [
                  Set {
                    ReactiveEffect {
                      "active": true,
                      "allowRecurse": true,
                      "deps": Array [
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        [Circular],
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                      ],
                      "fn": [Function],
                      "onTrack": undefined,
                      "onTrigger": undefined,
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                    [Circular],
                    ReactiveEffect {
                      "active": true,
                      "computed": ComputedRefImpl {
                        "__v_isReadonly": false,
                        "__v_isRef": true,
                        "_cacheable": true,
                        "_dirty": false,
                        "_setter": [Function],
                        "_value": Promise {},
                        "dep": Set {
                          ReactiveEffect {
                            "active": true,
                            "allowRecurse": true,
                            "deps": Array [
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              [Circular],
                              Set {
                                [Circular],
                              },
                              [Circular],
                            ],
                            "fn": [Function],
                            "onTrack": undefined,
                            "onTrigger": undefined,
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                        },
                        "effect": [Circular],
                      },
                      "deps": Array [
                        [Circular],
                      ],
                      "fn": [Function],
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                  },
                ],
                "fn": [Function],
                "parent": undefined,
                "scheduler": [Function],
              },
              ReactiveEffect {
                "active": true,
                "allowRecurse": true,
                "deps": Array [
                  Set {
                    [Circular],
                  },
                  Set {
                    [Circular],
                  },
                  Set {
                    [Circular],
                  },
                  Set {
                    [Circular],
                  },
                  Set {
                    [Circular],
                  },
                  Set {
                    [Circular],
                  },
                  Set {
                    [Circular],
                    ReactiveEffect {
                      "active": true,
                      "computed": ComputedRefImpl {
                        "__v_isReadonly": false,
                        "__v_isRef": true,
                        "_cacheable": true,
                        "_dirty": false,
                        "_setter": [Function],
                        "_value": Promise {},
                        "dep": Set {
                          [Circular],
                        },
                        "effect": [Circular],
                      },
                      "deps": Array [
                        [Circular],
                      ],
                      "fn": [Function],
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                    ReactiveEffect {
                      "active": true,
                      "computed": ComputedRefImpl {
                        "__v_isReadonly": false,
                        "__v_isRef": true,
                        "_cacheable": true,
                        "_dirty": false,
                        "_setter": [Function],
                        "_value": Promise {},
                        "dep": Set {
                          [Circular],
                        },
                        "effect": [Circular],
                      },
                      "deps": Array [
                        [Circular],
                      ],
                      "fn": [Function],
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                  },
                  Set {
                    [Circular],
                  },
                  Set {
                    [Circular],
                  },
                ],
                "fn": [Function],
                "onTrack": undefined,
                "onTrigger": undefined,
                "parent": undefined,
                "scheduler": [Function],
              },
            ],
          },
          "setupContext": null,
          "setupState": Object {},
          "slots": Object {},
          "sp": null,
          "subTree": Object {
            "__v_isVNode": true,
            "__v_skip": true,
            "anchor": null,
            "appContext": null,
            "children": Array [
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": Array [
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": Array [
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": "Goal #2",
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <h2
                          class="mb-1 mr-auto p-2"
                          id="goal-name"
                        >
                          Goal #2
                        </h2>,
                        "key": null,
                        "patchFlag": 3,
                        "props": Object {
                          "class": "mb-1 mr-auto p-2",
                          "id": "goal-name",
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 9,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "h2",
                      },
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": Array [
                          Object {
                            "__v_isVNode": true,
                            "__v_skip": true,
                            "anchor": null,
                            "appContext": null,
                            "children": Array [
                              Object {
                                "__v_isVNode": true,
                                "__v_skip": true,
                                "anchor": null,
                                "appContext": null,
                                "children": Array [
                                  Object {
                                    "__v_isVNode": true,
                                    "__v_skip": true,
                                    "anchor": null,
                                    "appContext": null,
                                    "children": null,
                                    "component": null,
                                    "dirs": null,
                                    "dynamicChildren": null,
                                    "dynamicProps": null,
                                    "el": <font-awesome-icon
                                      icon="user-pen"
                                    />,
                                    "key": null,
                                    "patchFlag": 0,
                                    "props": Object {
                                      "icon": "user-pen",
                                    },
                                    "ref": null,
                                    "scopeId": null,
                                    "shapeFlag": 1,
                                    "slotScopeIds": null,
                                    "ssContent": null,
                                    "ssFallback": null,
                                    "staticCount": 0,
                                    "suspense": null,
                                    "target": null,
                                    "targetAnchor": null,
                                    "transition": null,
                                    "type": "font-awesome-icon",
                                  },
                                ],
                                "component": null,
                                "dirs": null,
                                "dynamicChildren": null,
                                "dynamicProps": null,
                                "el": <button
                                  class="badge badge-pill"
                                  id="edit-goal"
                                >
                                  <font-awesome-icon
                                    icon="user-pen"
                                  />
                                </button>,
                                "key": null,
                                "patchFlag": 0,
                                "props": Object {
                                  "class": "badge badge-pill",
                                  "id": "edit-goal",
                                  "onClick": [Function],
                                },
                                "ref": null,
                                "scopeId": null,
                                "shapeFlag": 17,
                                "slotScopeIds": null,
                                "ssContent": null,
                                "ssFallback": null,
                                "staticCount": 0,
                                "suspense": null,
                                "target": null,
                                "targetAnchor": null,
                                "transition": null,
                                "type": "button",
                              },
                              Object {
                                "__v_isVNode": true,
                                "__v_skip": true,
                                "anchor": null,
                                "appContext": null,
                                "children": Array [
                                  Object {
                                    "__v_isVNode": true,
                                    "__v_skip": true,
                                    "anchor": null,
                                    "appContext": null,
                                    "children": null,
                                    "component": null,
                                    "dirs": null,
                                    "dynamicChildren": null,
                                    "dynamicProps": null,
                                    "el": <font-awesome-icon
                                      icon="trash"
                                    />,
                                    "key": null,
                                    "patchFlag": 0,
                                    "props": Object {
                                      "icon": "trash",
                                    },
                                    "ref": null,
                                    "scopeId": null,
                                    "shapeFlag": 1,
                                    "slotScopeIds": null,
                                    "ssContent": null,
                                    "ssFallback": null,
                                    "staticCount": 0,
                                    "suspense": null,
                                    "target": null,
                                    "targetAnchor": null,
                                    "transition": null,
                                    "type": "font-awesome-icon",
                                  },
                                ],
                                "component": null,
                                "dirs": null,
                                "dynamicChildren": null,
                                "dynamicProps": null,
                                "el": <button
                                  class="badge badge-pill text-danger"
                                  id="remove-goal"
                                >
                                  <font-awesome-icon
                                    icon="trash"
                                  />
                                </button>,
                                "key": null,
                                "patchFlag": 0,
                                "props": Object {
                                  "class": "badge badge-pill text-danger",
                                  "id": "remove-goal",
                                  "onClick": [Function],
                                },
                                "ref": null,
                                "scopeId": null,
                                "shapeFlag": 17,
                                "slotScopeIds": null,
                                "ssContent": null,
                                "ssFallback": null,
                                "staticCount": 0,
                                "suspense": null,
                                "target": null,
                                "targetAnchor": null,
                                "transition": null,
                                "type": "button",
                              },
                            ],
                            "component": null,
                            "dirs": null,
                            "dynamicChildren": null,
                            "dynamicProps": null,
                            "el": <div>
                              <button
                                class="badge badge-pill"
                                id="edit-goal"
                              >
                                <font-awesome-icon
                                  icon="user-pen"
                                />
                              </button>
                              <button
                                class="badge badge-pill text-danger"
                                id="remove-goal"
                              >
                                <font-awesome-icon
                                  icon="trash"
                                />
                              </button>
                            </div>,
                            "key": null,
                            "patchFlag": 0,
                            "props": null,
                            "ref": null,
                            "scopeId": null,
                            "shapeFlag": 17,
                            "slotScopeIds": null,
                            "ssContent": null,
                            "ssFallback": null,
                            "staticCount": 0,
                            "suspense": null,
                            "target": null,
                            "targetAnchor": null,
                            "transition": null,
                            "type": "div",
                          },
                          Object {
                            "__v_isVNode": true,
                            "__v_skip": true,
                            "anchor": null,
                            "appContext": null,
                            "children": " In Progress ",
                            "component": null,
                            "dirs": null,
                            "dynamicChildren": Array [],
                            "dynamicProps": null,
                            "el": <button
                              class="badge badge-warning badge-pill"
                              id="toggle-goal-completion-in-progress"
                            >
                               In Progress 
                            </button>,
                            "key": 1,
                            "patchFlag": 0,
                            "props": Object {
                              "class": "badge badge-warning badge-pill",
                              "id": "toggle-goal-completion-in-progress",
                              "key": 1,
                              "onClick": [Function],
                            },
                            "ref": null,
                            "scopeId": null,
                            "shapeFlag": 9,
                            "slotScopeIds": null,
                            "ssContent": null,
                            "ssFallback": null,
                            "staticCount": 0,
                            "suspense": null,
                            "target": null,
                            "targetAnchor": null,
                            "transition": null,
                            "type": "button",
                          },
                        ],
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <div
                          class="flex-column text-right"
                        >
                          <div>
                            <button
                              class="badge badge-pill"
                              id="edit-goal"
                            >
                              <font-awesome-icon
                                icon="user-pen"
                              />
                            </button>
                            <button
                              class="badge badge-pill text-danger"
                              id="remove-goal"
                            >
                              <font-awesome-icon
                                icon="trash"
                              />
                            </button>
                          </div>
                          <button
                            class="badge badge-warning badge-pill"
                            id="toggle-goal-completion-in-progress"
                          >
                             In Progress 
                          </button>
                        </div>,
                        "key": null,
                        "patchFlag": 0,
                        "props": Object {
                          "class": "flex-column text-right",
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 17,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "div",
                      },
                    ],
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <div
                      class="d-flex w-100 justify-content-between align-items-center"
                    >
                      <h2
                        class="mb-1 mr-auto p-2"
                        id="goal-name"
                      >
                        Goal #2
                      </h2>
                      <div
                        class="flex-column text-right"
                      >
                        <div>
                          <button
                            class="badge badge-pill"
                            id="edit-goal"
                          >
                            <font-awesome-icon
                              icon="user-pen"
                            />
                          </button>
                          <button
                            class="badge badge-pill text-danger"
                            id="remove-goal"
                          >
                            <font-awesome-icon
                              icon="trash"
                            />
                          </button>
                        </div>
                        <button
                          class="badge badge-warning badge-pill"
                          id="toggle-goal-completion-in-progress"
                        >
                           In Progress 
                        </button>
                      </div>
                    </div>,
                    "key": null,
                    "patchFlag": 0,
                    "props": Object {
                      "class": "d-flex w-100 justify-content-between align-items-center",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 17,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "div",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": Array [
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": "Description #2",
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <p
                          class="p-2 my-2 list-group-item-light list-group-item-secondary"
                          id="goal-description"
                        >
                          Description #2
                        </p>,
                        "key": null,
                        "patchFlag": 1,
                        "props": Object {
                          "class": "p-2 my-2 list-group-item-light list-group-item-secondary",
                          "id": "goal-description",
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 9,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "p",
                      },
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": null,
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": Array [
                          "timestamp",
                        ],
                        "el": <appdate
                          class="badge badge-light badge-pill pull-right"
                          timestamp="2022-04-15T07:25:23.269770Z"
                        />,
                        "key": null,
                        "patchFlag": 8,
                        "props": Object {
                          "class": "badge badge-light badge-pill pull-right",
                          "timestamp": "2022-04-15T07:25:23.269770Z",
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 1,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "AppDate",
                      },
                    ],
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <div
                      class="align-items-end d-flex w-100 justify-content-between"
                    >
                      <p
                        class="p-2 my-2 list-group-item-light list-group-item-secondary"
                        id="goal-description"
                      >
                        Description #2
                      </p>
                      <appdate
                        class="badge badge-light badge-pill pull-right"
                        timestamp="2022-04-15T07:25:23.269770Z"
                      />
                    </div>,
                    "key": null,
                    "patchFlag": 0,
                    "props": Object {
                      "class": "align-items-end d-flex w-100 justify-content-between",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 17,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "div",
                  },
                ],
                "component": null,
                "dirs": null,
                "dynamicChildren": Array [
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": "Goal #2",
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <h2
                      class="mb-1 mr-auto p-2"
                      id="goal-name"
                    >
                      Goal #2
                    </h2>,
                    "key": null,
                    "patchFlag": 3,
                    "props": Object {
                      "class": "mb-1 mr-auto p-2",
                      "id": "goal-name",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 9,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "h2",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": " In Progress ",
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": Array [],
                    "dynamicProps": null,
                    "el": <button
                      class="badge badge-warning badge-pill"
                      id="toggle-goal-completion-in-progress"
                    >
                       In Progress 
                    </button>,
                    "key": 1,
                    "patchFlag": 0,
                    "props": Object {
                      "class": "badge badge-warning badge-pill",
                      "id": "toggle-goal-completion-in-progress",
                      "key": 1,
                      "onClick": [Function],
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 9,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "button",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": "Description #2",
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <p
                      class="p-2 my-2 list-group-item-light list-group-item-secondary"
                      id="goal-description"
                    >
                      Description #2
                    </p>,
                    "key": null,
                    "patchFlag": 1,
                    "props": Object {
                      "class": "p-2 my-2 list-group-item-light list-group-item-secondary",
                      "id": "goal-description",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 9,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "p",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": null,
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": Array [
                      "timestamp",
                    ],
                    "el": <appdate
                      class="badge badge-light badge-pill pull-right"
                      timestamp="2022-04-15T07:25:23.269770Z"
                    />,
                    "key": null,
                    "patchFlag": 8,
                    "props": Object {
                      "class": "badge badge-light badge-pill pull-right",
                      "timestamp": "2022-04-15T07:25:23.269770Z",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 1,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "AppDate",
                  },
                ],
                "dynamicProps": null,
                "el": <div
                  class="list-group-item-heading"
                >
                  <div
                    class="d-flex w-100 justify-content-between align-items-center"
                  >
                    <h2
                      class="mb-1 mr-auto p-2"
                      id="goal-name"
                    >
                      Goal #2
                    </h2>
                    <div
                      class="flex-column text-right"
                    >
                      <div>
                        <button
                          class="badge badge-pill"
                          id="edit-goal"
                        >
                          <font-awesome-icon
                            icon="user-pen"
                          />
                        </button>
                        <button
                          class="badge badge-pill text-danger"
                          id="remove-goal"
                        >
                          <font-awesome-icon
                            icon="trash"
                          />
                        </button>
                      </div>
                      <button
                        class="badge badge-warning badge-pill"
                        id="toggle-goal-completion-in-progress"
                      >
                         In Progress 
                      </button>
                    </div>
                  </div>
                  <div
                    class="align-items-end d-flex w-100 justify-content-between"
                  >
                    <p
                      class="p-2 my-2 list-group-item-light list-group-item-secondary"
                      id="goal-description"
                    >
                      Description #2
                    </p>
                    <appdate
                      class="badge badge-light badge-pill pull-right"
                      timestamp="2022-04-15T07:25:23.269770Z"
                    />
                  </div>
                </div>,
                "key": 0,
                "patchFlag": 0,
                "props": Object {
                  "class": "list-group-item-heading",
                  "key": 0,
                },
                "ref": null,
                "scopeId": null,
                "shapeFlag": 17,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": "div",
              },
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": Array [
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": Array [
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": "Tasks",
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <h3
                          class="text-muted"
                          id="tasks-header"
                        >
                          Tasks
                        </h3>,
                        "key": null,
                        "patchFlag": -1,
                        "props": Object {
                          "class": "text-muted",
                          "id": "tasks-header",
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 9,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "h3",
                      },
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": null,
                        "component": Object {
                          "a": null,
                          "accessCache": Object {},
                          "appContext": Object {
                            "app": [Circular],
                            "components": Object {
                              "transition": Object {
                                "name": "transition",
                              },
                              "transition-group": Object {
                                "name": "transition-group",
                              },
                            },
                            "config": Object {
                              "compilerOptions": Object {},
                              "errorHandler": undefined,
                              "globalProperties": Object {},
                              "isNativeTag": [Function],
                              "optionMergeStrategies": Object {},
                              "performance": false,
                              "warnHandler": undefined,
                            },
                            "directives": Object {},
                            "emitsCache": WeakMap {},
                            "mixins": Array [
                              Object {
                                "beforeCreate": [Function],
                              },
                            ],
                            "optionsCache": WeakMap {},
                            "propsCache": WeakMap {},
                            "provides": Object {},
                            "reload": [Function],
                          },
                          "asyncDep": null,
                          "asyncResolved": false,
                          "attrs": Object {
                            "onSaveEditedTask": [Function],
                          },
                          "bc": null,
                          "bm": null,
                          "bu": null,
                          "bum": null,
                          "c": null,
                          "components": null,
                          "ctx": Object {
                            "$store": Object {
                              "dispatch": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "fetchGoalTasks",
                                    Object {
                                      "goalId": "2",
                                    },
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getters": Object {
                                "activeCompletedGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      Promise {},
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "activeGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      [MockFunction],
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "activeInProgressGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      Promise {},
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "goal": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "2",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "goalTasks": [MockFunction],
                              },
                            },
                            "tasks": Promise {},
                          },
                          "da": null,
                          "data": Object {},
                          "directives": null,
                          "ec": null,
                          "effect": ReactiveEffect {
                            "active": true,
                            "allowRecurse": true,
                            "deps": Array [
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                            ],
                            "fn": [Function],
                            "onTrack": undefined,
                            "onTrigger": undefined,
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                          "emit": [Function],
                          "emitsOptions": null,
                          "emitted": null,
                          "exposeProxy": null,
                          "exposed": null,
                          "inheritAttrs": undefined,
                          "isDeactivated": false,
                          "isMounted": true,
                          "isUnmounted": false,
                          "m": null,
                          "next": null,
                          "parent": [Circular],
                          "props": Object {
                            "tasks": Promise {},
                          },
                          "propsDefaults": Object {},
                          "propsOptions": Array [
                            Object {
                              "tasks": Object {
                                "0": false,
                                "1": true,
                                "requred": true,
                                "type": [Function],
                              },
                            },
                            Array [],
                          ],
                          "provides": Object {},
                          "proxy": Object {
                            "$store": Object {
                              "dispatch": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "fetchGoalTasks",
                                    Object {
                                      "goalId": "2",
                                    },
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getters": Object {
                                "activeCompletedGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      Promise {},
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "activeGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      [MockFunction],
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "activeInProgressGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      Promise {},
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "goal": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "2",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "goalTasks": [MockFunction],
                              },
                            },
                            "tasks": Promise {},
                          },
                          "refs": Object {},
                          "render": [Function],
                          "renderCache": Array [],
                          "root": [Circular],
                          "rtc": null,
                          "rtg": null,
                          "scope": EffectScope {
                            "active": true,
                            "cleanups": Array [],
                            "effects": Array [
                              ReactiveEffect {
                                "active": true,
                                "allowRecurse": true,
                                "deps": Array [
                                  Set {
                                    [Circular],
                                  },
                                  Set {
                                    [Circular],
                                  },
                                ],
                                "fn": [Function],
                                "onTrack": undefined,
                                "onTrigger": undefined,
                                "parent": undefined,
                                "scheduler": [Function],
                              },
                            ],
                          },
                          "setupContext": Object {
                            "attrs": Object {
                              "onSaveEditedTask": [Function],
                            },
                            "emit": [Function],
                            "expose": [Function],
                            "slots": Object {},
                          },
                          "setupState": Object {},
                          "slots": Object {},
                          "sp": null,
                          "subTree": Object {
                            "__v_isVNode": true,
                            "__v_skip": true,
                            "anchor": null,
                            "appContext": null,
                            "children": null,
                            "component": null,
                            "dirs": null,
                            "dynamicChildren": null,
                            "dynamicProps": null,
                            "el": <task-list-stub
                              tasks="[object Promise]"
                            />,
                            "key": null,
                            "patchFlag": 16,
                            "props": Object {
                              "onSaveEditedTask": [Function],
                              "tasks": Promise {},
                            },
                            "ref": null,
                            "scopeId": null,
                            "shapeFlag": 1,
                            "slotScopeIds": null,
                            "ssContent": null,
                            "ssFallback": null,
                            "staticCount": 0,
                            "suspense": null,
                            "target": null,
                            "targetAnchor": null,
                            "transition": null,
                            "type": "task-list-stub",
                          },
                          "suspense": null,
                          "suspenseId": 0,
                          "type": Object {
                            "name": "TaskList",
                            "props": Object {
                              "tasks": Object {
                                "0": false,
                                "1": true,
                                "requred": true,
                                "type": [Function],
                              },
                            },
                            "setup": [Function],
                          },
                          "u": null,
                          "uid": 5,
                          "um": null,
                          "update": [Function],
                          "vnode": [Circular],
                          "withProxy": null,
                        },
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": Array [
                          "tasks",
                          "onSaveEditedTask",
                        ],
                        "el": <task-list-stub
                          tasks="[object Promise]"
                        />,
                        "key": null,
                        "patchFlag": 8,
                        "props": Object {
                          "onSaveEditedTask": [Function],
                          "tasks": Promise {},
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 4,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": Object {
                          "name": "TaskList",
                          "props": Object {
                            "tasks": Object {
                              "0": false,
                              "1": true,
                              "requred": true,
                              "type": [Function],
                            },
                          },
                          "setup": [Function],
                        },
                      },
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": null,
                        "component": Object {
                          "a": null,
                          "accessCache": Object {},
                          "appContext": Object {
                            "app": [Circular],
                            "components": Object {
                              "transition": Object {
                                "name": "transition",
                              },
                              "transition-group": Object {
                                "name": "transition-group",
                              },
                            },
                            "config": Object {
                              "compilerOptions": Object {},
                              "errorHandler": undefined,
                              "globalProperties": Object {},
                              "isNativeTag": [Function],
                              "optionMergeStrategies": Object {},
                              "performance": false,
                              "warnHandler": undefined,
                            },
                            "directives": Object {},
                            "emitsCache": WeakMap {},
                            "mixins": Array [
                              Object {
                                "beforeCreate": [Function],
                              },
                            ],
                            "optionsCache": WeakMap {},
                            "propsCache": WeakMap {},
                            "provides": Object {},
                            "reload": [Function],
                          },
                          "asyncDep": null,
                          "asyncResolved": false,
                          "attrs": Object {
                            "onSaveEditedTask": [Function],
                          },
                          "bc": null,
                          "bm": null,
                          "bu": null,
                          "bum": null,
                          "c": null,
                          "components": null,
                          "ctx": Object {
                            "$store": Object {
                              "dispatch": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "fetchGoalTasks",
                                    Object {
                                      "goalId": "2",
                                    },
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getters": Object {
                                "activeCompletedGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      Promise {},
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "activeGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      [MockFunction],
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "activeInProgressGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      Promise {},
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "goal": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "2",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "goalTasks": [MockFunction],
                              },
                            },
                            "tasks": Promise {},
                          },
                          "da": null,
                          "data": Object {},
                          "directives": null,
                          "ec": null,
                          "effect": ReactiveEffect {
                            "active": true,
                            "allowRecurse": true,
                            "deps": Array [
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                            ],
                            "fn": [Function],
                            "onTrack": undefined,
                            "onTrigger": undefined,
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                          "emit": [Function],
                          "emitsOptions": null,
                          "emitted": null,
                          "exposeProxy": null,
                          "exposed": null,
                          "inheritAttrs": undefined,
                          "isDeactivated": false,
                          "isMounted": true,
                          "isUnmounted": false,
                          "m": null,
                          "next": null,
                          "parent": [Circular],
                          "props": Object {
                            "tasks": Promise {},
                          },
                          "propsDefaults": Object {},
                          "propsOptions": Array [
                            Object {
                              "tasks": Object {
                                "0": false,
                                "1": true,
                                "requred": true,
                                "type": [Function],
                              },
                            },
                            Array [],
                          ],
                          "provides": Object {},
                          "proxy": Object {
                            "$store": Object {
                              "dispatch": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "fetchGoalTasks",
                                    Object {
                                      "goalId": "2",
                                    },
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getters": Object {
                                "activeCompletedGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      Promise {},
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "activeGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      [MockFunction],
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "activeInProgressGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      Promise {},
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "goal": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "2",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "goalTasks": [MockFunction],
                              },
                            },
                            "tasks": Promise {},
                          },
                          "refs": Object {},
                          "render": [Function],
                          "renderCache": Array [],
                          "root": [Circular],
                          "rtc": null,
                          "rtg": null,
                          "scope": EffectScope {
                            "active": true,
                            "cleanups": Array [],
                            "effects": Array [
                              ReactiveEffect {
                                "active": true,
                                "allowRecurse": true,
                                "deps": Array [
                                  Set {
                                    [Circular],
                                  },
                                  Set {
                                    [Circular],
                                  },
                                ],
                                "fn": [Function],
                                "onTrack": undefined,
                                "onTrigger": undefined,
                                "parent": undefined,
                                "scheduler": [Function],
                              },
                            ],
                          },
                          "setupContext": Object {
                            "attrs": Object {
                              "onSaveEditedTask": [Function],
                            },
                            "emit": [Function],
                            "expose": [Function],
                            "slots": Object {},
                          },
                          "setupState": Object {},
                          "slots": Object {},
                          "sp": null,
                          "subTree": Object {
                            "__v_isVNode": true,
                            "__v_skip": true,
                            "anchor": null,
                            "appContext": null,
                            "children": null,
                            "component": null,
                            "dirs": null,
                            "dynamicChildren": null,
                            "dynamicProps": null,
                            "el": <task-list-stub
                              tasks="[object Promise]"
                            />,
                            "key": null,
                            "patchFlag": 16,
                            "props": Object {
                              "onSaveEditedTask": [Function],
                              "tasks": Promise {},
                            },
                            "ref": null,
                            "scopeId": null,
                            "shapeFlag": 1,
                            "slotScopeIds": null,
                            "ssContent": null,
                            "ssFallback": null,
                            "staticCount": 0,
                            "suspense": null,
                            "target": null,
                            "targetAnchor": null,
                            "transition": null,
                            "type": "task-list-stub",
                          },
                          "suspense": null,
                          "suspenseId": 0,
                          "type": Object {
                            "name": "TaskList",
                            "props": Object {
                              "tasks": Object {
                                "0": false,
                                "1": true,
                                "requred": true,
                                "type": [Function],
                              },
                            },
                            "setup": [Function],
                          },
                          "u": null,
                          "uid": 6,
                          "um": null,
                          "update": [Function],
                          "vnode": [Circular],
                          "withProxy": null,
                        },
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": Array [
                          "tasks",
                          "onSaveEditedTask",
                        ],
                        "el": <task-list-stub
                          tasks="[object Promise]"
                        />,
                        "key": null,
                        "patchFlag": 8,
                        "props": Object {
                          "onSaveEditedTask": [Function],
                          "tasks": Promise {},
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 4,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": Object {
                          "name": "TaskList",
                          "props": Object {
                            "tasks": Object {
                              "0": false,
                              "1": true,
                              "requred": true,
                              "type": [Function],
                            },
                          },
                          "setup": [Function],
                        },
                      },
                    ],
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": Array [
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": null,
                        "component": Object {
                          "a": null,
                          "accessCache": Object {
                            "$store": 4,
                            "@@__IMMUTABLE_ITERABLE__@@": 0,
                            "@@__IMMUTABLE_RECORD__@@": 0,
                            "_isMockFunction": 0,
                            "constructor": 0,
                            "isVueInstance": 0,
                            "tasks": 3,
                            "toJSON": 0,
                            Symbol(Symbol.toStringTag): 0,
                          },
                          "appContext": Object {
                            "app": [Circular],
                            "components": Object {
                              "transition": Object {
                                "name": "transition",
                              },
                              "transition-group": Object {
                                "name": "transition-group",
                              },
                            },
                            "config": Object {
                              "compilerOptions": Object {},
                              "errorHandler": undefined,
                              "globalProperties": Object {},
                              "isNativeTag": [Function],
                              "optionMergeStrategies": Object {},
                              "performance": false,
                              "warnHandler": undefined,
                            },
                            "directives": Object {},
                            "emitsCache": WeakMap {},
                            "mixins": Array [
                              Object {
                                "beforeCreate": [Function],
                              },
                            ],
                            "optionsCache": WeakMap {},
                            "propsCache": WeakMap {},
                            "provides": Object {},
                            "reload": [Function],
                          },
                          "asyncDep": null,
                          "asyncResolved": false,
                          "attrs": Object {
                            "onSaveEditedTask": [Function],
                          },
                          "bc": null,
                          "bm": null,
                          "bu": null,
                          "bum": null,
                          "c": null,
                          "components": null,
                          "ctx": Object {
                            "$store": Object {
                              "dispatch": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "fetchGoalTasks",
                                    Object {
                                      "goalId": "2",
                                    },
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getters": Object {
                                "activeCompletedGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      Promise {},
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "activeGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      [MockFunction],
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "activeInProgressGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      Promise {},
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "goal": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "2",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "goalTasks": [MockFunction],
                              },
                            },
                            "tasks": Promise {},
                          },
                          "da": null,
                          "data": Object {},
                          "directives": null,
                          "ec": null,
                          "effect": ReactiveEffect {
                            "active": true,
                            "allowRecurse": true,
                            "deps": Array [
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                            ],
                            "fn": [Function],
                            "onTrack": undefined,
                            "onTrigger": undefined,
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                          "emit": [Function],
                          "emitsOptions": null,
                          "emitted": null,
                          "exposeProxy": null,
                          "exposed": null,
                          "inheritAttrs": undefined,
                          "isDeactivated": false,
                          "isMounted": true,
                          "isUnmounted": false,
                          "m": null,
                          "next": null,
                          "parent": [Circular],
                          "props": Object {
                            "tasks": Promise {},
                          },
                          "propsDefaults": Object {},
                          "propsOptions": Array [
                            Object {
                              "tasks": Object {
                                "0": false,
                                "1": true,
                                "requred": true,
                                "type": [Function],
                              },
                            },
                            Array [],
                          ],
                          "provides": Object {},
                          "proxy": Object {
                            "$store": Object {
                              "dispatch": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "fetchGoalTasks",
                                    Object {
                                      "goalId": "2",
                                    },
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getters": Object {
                                "activeCompletedGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      Promise {},
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "activeGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      [MockFunction],
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "activeInProgressGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      Promise {},
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "goal": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "2",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "goalTasks": [MockFunction],
                              },
                            },
                            "tasks": Promise {},
                          },
                          "refs": Object {},
                          "render": [Function],
                          "renderCache": Array [],
                          "root": [Circular],
                          "rtc": null,
                          "rtg": null,
                          "scope": EffectScope {
                            "active": true,
                            "cleanups": Array [],
                            "effects": Array [
                              ReactiveEffect {
                                "active": true,
                                "allowRecurse": true,
                                "deps": Array [
                                  Set {
                                    [Circular],
                                  },
                                  Set {
                                    [Circular],
                                  },
                                ],
                                "fn": [Function],
                                "onTrack": undefined,
                                "onTrigger": undefined,
                                "parent": undefined,
                                "scheduler": [Function],
                              },
                            ],
                          },
                          "setupContext": Object {
                            "attrs": Object {
                              "onSaveEditedTask": [Function],
                            },
                            "emit": [Function],
                            "expose": [Function],
                            "slots": Object {},
                          },
                          "setupState": Object {},
                          "slots": Object {},
                          "sp": null,
                          "subTree": Object {
                            "__v_isVNode": true,
                            "__v_skip": true,
                            "anchor": null,
                            "appContext": null,
                            "children": null,
                            "component": null,
                            "dirs": null,
                            "dynamicChildren": null,
                            "dynamicProps": null,
                            "el": <task-list-stub
                              tasks="[object Promise]"
                            />,
                            "key": null,
                            "patchFlag": 16,
                            "props": Object {
                              "onSaveEditedTask": [Function],
                              "tasks": Promise {},
                            },
                            "ref": null,
                            "scopeId": null,
                            "shapeFlag": 1,
                            "slotScopeIds": null,
                            "ssContent": null,
                            "ssFallback": null,
                            "staticCount": 0,
                            "suspense": null,
                            "target": null,
                            "targetAnchor": null,
                            "transition": null,
                            "type": "task-list-stub",
                          },
                          "suspense": null,
                          "suspenseId": 0,
                          "type": Object {
                            "name": "TaskList",
                            "props": Object {
                              "tasks": Object {
                                "0": false,
                                "1": true,
                                "requred": true,
                                "type": [Function],
                              },
                            },
                            "setup": [Function],
                          },
                          "u": null,
                          "uid": 5,
                          "um": null,
                          "update": [Function],
                          "vnode": [Circular],
                          "withProxy": null,
                        },
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": Array [
                          "tasks",
                          "onSaveEditedTask",
                        ],
                        "el": <task-list-stub
                          tasks="[object Promise]"
                        />,
                        "key": null,
                        "patchFlag": 8,
                        "props": Object {
                          "onSaveEditedTask": [Function],
                          "tasks": Promise {},
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 4,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": Object {
                          "name": "TaskList",
                          "props": Object {
                            "tasks": Object {
                              "0": false,
                              "1": true,
                              "requred": true,
                              "type": [Function],
                            },
                          },
                          "setup": [Function],
                        },
                      },
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": null,
                        "component": Object {
                          "a": null,
                          "accessCache": Object {
                            "$store": 4,
                            "@@__IMMUTABLE_ITERABLE__@@": 0,
                            "@@__IMMUTABLE_RECORD__@@": 0,
                            "_isMockFunction": 0,
                            "constructor": 0,
                            "isVueInstance": 0,
                            "tasks": 3,
                            "toJSON": 0,
                            Symbol(Symbol.toStringTag): 0,
                          },
                          "appContext": Object {
                            "app": [Circular],
                            "components": Object {
                              "transition": Object {
                                "name": "transition",
                              },
                              "transition-group": Object {
                                "name": "transition-group",
                              },
                            },
                            "config": Object {
                              "compilerOptions": Object {},
                              "errorHandler": undefined,
                              "globalProperties": Object {},
                              "isNativeTag": [Function],
                              "optionMergeStrategies": Object {},
                              "performance": false,
                              "warnHandler": undefined,
                            },
                            "directives": Object {},
                            "emitsCache": WeakMap {},
                            "mixins": Array [
                              Object {
                                "beforeCreate": [Function],
                              },
                            ],
                            "optionsCache": WeakMap {},
                            "propsCache": WeakMap {},
                            "provides": Object {},
                            "reload": [Function],
                          },
                          "asyncDep": null,
                          "asyncResolved": false,
                          "attrs": Object {
                            "onSaveEditedTask": [Function],
                          },
                          "bc": null,
                          "bm": null,
                          "bu": null,
                          "bum": null,
                          "c": null,
                          "components": null,
                          "ctx": Object {
                            "$store": Object {
                              "dispatch": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "fetchGoalTasks",
                                    Object {
                                      "goalId": "2",
                                    },
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getters": Object {
                                "activeCompletedGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      Promise {},
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "activeGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      [MockFunction],
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "activeInProgressGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      Promise {},
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "goal": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "2",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "goalTasks": [MockFunction],
                              },
                            },
                            "tasks": Promise {},
                          },
                          "da": null,
                          "data": Object {},
                          "directives": null,
                          "ec": null,
                          "effect": ReactiveEffect {
                            "active": true,
                            "allowRecurse": true,
                            "deps": Array [
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                            ],
                            "fn": [Function],
                            "onTrack": undefined,
                            "onTrigger": undefined,
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                          "emit": [Function],
                          "emitsOptions": null,
                          "emitted": null,
                          "exposeProxy": null,
                          "exposed": null,
                          "inheritAttrs": undefined,
                          "isDeactivated": false,
                          "isMounted": true,
                          "isUnmounted": false,
                          "m": null,
                          "next": null,
                          "parent": [Circular],
                          "props": Object {
                            "tasks": Promise {},
                          },
                          "propsDefaults": Object {},
                          "propsOptions": Array [
                            Object {
                              "tasks": Object {
                                "0": false,
                                "1": true,
                                "requred": true,
                                "type": [Function],
                              },
                            },
                            Array [],
                          ],
                          "provides": Object {},
                          "proxy": Object {
                            "$store": Object {
                              "dispatch": [MockFunction] {
                                "calls": Array [
                                  Array [
                                    "fetchGoalTasks",
                                    Object {
                                      "goalId": "2",
                                    },
                                  ],
                                ],
                                "results": Array [
                                  Object {
                                    "type": "return",
                                    "value": undefined,
                                  },
                                ],
                              },
                              "getters": Object {
                                "activeCompletedGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      Promise {},
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "activeGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      [MockFunction],
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "activeInProgressGoalTasks": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      Promise {},
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "goal": [MockFunction] {
                                  "calls": Array [
                                    Array [
                                      "2",
                                    ],
                                  ],
                                  "results": Array [
                                    Object {
                                      "type": "return",
                                      "value": Promise {},
                                    },
                                  ],
                                },
                                "goalTasks": [MockFunction],
                              },
                            },
                            "tasks": Promise {},
                          },
                          "refs": Object {},
                          "render": [Function],
                          "renderCache": Array [],
                          "root": [Circular],
                          "rtc": null,
                          "rtg": null,
                          "scope": EffectScope {
                            "active": true,
                            "cleanups": Array [],
                            "effects": Array [
                              ReactiveEffect {
                                "active": true,
                                "allowRecurse": true,
                                "deps": Array [
                                  Set {
                                    [Circular],
                                  },
                                  Set {
                                    [Circular],
                                  },
                                ],
                                "fn": [Function],
                                "onTrack": undefined,
                                "onTrigger": undefined,
                                "parent": undefined,
                                "scheduler": [Function],
                              },
                            ],
                          },
                          "setupContext": Object {
                            "attrs": Object {
                              "onSaveEditedTask": [Function],
                            },
                            "emit": [Function],
                            "expose": [Function],
                            "slots": Object {},
                          },
                          "setupState": Object {},
                          "slots": Object {},
                          "sp": null,
                          "subTree": Object {
                            "__v_isVNode": true,
                            "__v_skip": true,
                            "anchor": null,
                            "appContext": null,
                            "children": null,
                            "component": null,
                            "dirs": null,
                            "dynamicChildren": null,
                            "dynamicProps": null,
                            "el": <task-list-stub
                              tasks="[object Promise]"
                            />,
                            "key": null,
                            "patchFlag": 16,
                            "props": Object {
                              "onSaveEditedTask": [Function],
                              "tasks": Promise {},
                            },
                            "ref": null,
                            "scopeId": null,
                            "shapeFlag": 1,
                            "slotScopeIds": null,
                            "ssContent": null,
                            "ssFallback": null,
                            "staticCount": 0,
                            "suspense": null,
                            "target": null,
                            "targetAnchor": null,
                            "transition": null,
                            "type": "task-list-stub",
                          },
                          "suspense": null,
                          "suspenseId": 0,
                          "type": Object {
                            "name": "TaskList",
                            "props": Object {
                              "tasks": Object {
                                "0": false,
                                "1": true,
                                "requred": true,
                                "type": [Function],
                              },
                            },
                            "setup": [Function],
                          },
                          "u": null,
                          "uid": 6,
                          "um": null,
                          "update": [Function],
                          "vnode": [Circular],
                          "withProxy": null,
                        },
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": Array [
                          "tasks",
                          "onSaveEditedTask",
                        ],
                        "el": <task-list-stub
                          tasks="[object Promise]"
                        />,
                        "key": null,
                        "patchFlag": 8,
                        "props": Object {
                          "onSaveEditedTask": [Function],
                          "tasks": Promise {},
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 4,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": Object {
                          "name": "TaskList",
                          "props": Object {
                            "tasks": Object {
                              "0": false,
                              "1": true,
                              "requred": true,
                              "type": [Function],
                            },
                          },
                          "setup": [Function],
                        },
                      },
                    ],
                    "dynamicProps": null,
                    "el": <div>
                      <h3
                        class="text-muted"
                        id="tasks-header"
                      >
                        Tasks
                      </h3>
                      <task-list-stub
                        tasks="[object Promise]"
                      />
                      <task-list-stub
                        tasks="[object Promise]"
                      />
                    </div>,
                    "key": 0,
                    "patchFlag": 0,
                    "props": Object {
                      "key": 0,
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 17,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "div",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": null,
                    "component": Object {
                      "a": null,
                      "accessCache": Object {},
                      "appContext": Object {
                        "app": [Circular],
                        "components": Object {
                          "transition": Object {
                            "name": "transition",
                          },
                          "transition-group": Object {
                            "name": "transition-group",
                          },
                        },
                        "config": Object {
                          "compilerOptions": Object {},
                          "errorHandler": undefined,
                          "globalProperties": Object {},
                          "isNativeTag": [Function],
                          "optionMergeStrategies": Object {},
                          "performance": false,
                          "warnHandler": undefined,
                        },
                        "directives": Object {},
                        "emitsCache": WeakMap {},
                        "mixins": Array [
                          Object {
                            "beforeCreate": [Function],
                          },
                        ],
                        "optionsCache": WeakMap {},
                        "propsCache": WeakMap {},
                        "provides": Object {},
                        "reload": [Function],
                      },
                      "asyncDep": null,
                      "asyncResolved": false,
                      "attrs": Object {
                        "onAddTask": [Function],
                      },
                      "bc": null,
                      "bm": null,
                      "bu": null,
                      "bum": null,
                      "c": null,
                      "components": null,
                      "ctx": Object {
                        "$store": Object {
                          "dispatch": [MockFunction] {
                            "calls": Array [
                              Array [
                                "fetchGoalTasks",
                                Object {
                                  "goalId": "2",
                                },
                              ],
                            ],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "getters": Object {
                            "activeCompletedGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Promise {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [MockFunction],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeInProgressGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Promise {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goal": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "2",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goalTasks": [MockFunction],
                          },
                        },
                      },
                      "da": null,
                      "data": Object {},
                      "directives": null,
                      "ec": null,
                      "effect": ReactiveEffect {
                        "active": true,
                        "allowRecurse": true,
                        "deps": Array [
                          Set {
                            [Circular],
                          },
                        ],
                        "fn": [Function],
                        "onTrack": undefined,
                        "onTrigger": undefined,
                        "parent": undefined,
                        "scheduler": [Function],
                      },
                      "emit": [Function],
                      "emitsOptions": null,
                      "emitted": null,
                      "exposeProxy": null,
                      "exposed": null,
                      "inheritAttrs": undefined,
                      "isDeactivated": false,
                      "isMounted": true,
                      "isUnmounted": false,
                      "m": null,
                      "next": null,
                      "parent": [Circular],
                      "props": Object {},
                      "propsDefaults": Object {},
                      "propsOptions": Array [
                        Object {},
                        Array [],
                      ],
                      "provides": Object {},
                      "proxy": Object {
                        "$store": Object {
                          "dispatch": [MockFunction] {
                            "calls": Array [
                              Array [
                                "fetchGoalTasks",
                                Object {
                                  "goalId": "2",
                                },
                              ],
                            ],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "getters": Object {
                            "activeCompletedGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Promise {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [MockFunction],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeInProgressGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Promise {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goal": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "2",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goalTasks": [MockFunction],
                          },
                        },
                      },
                      "refs": Object {},
                      "render": [Function],
                      "renderCache": Array [],
                      "root": [Circular],
                      "rtc": null,
                      "rtg": null,
                      "scope": EffectScope {
                        "active": true,
                        "cleanups": Array [],
                        "effects": Array [
                          ReactiveEffect {
                            "active": true,
                            "allowRecurse": true,
                            "deps": Array [
                              Set {
                                [Circular],
                              },
                            ],
                            "fn": [Function],
                            "onTrack": undefined,
                            "onTrigger": undefined,
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                        ],
                      },
                      "setupContext": Object {
                        "attrs": Object {
                          "onAddTask": [Function],
                        },
                        "emit": [Function],
                        "expose": [Function],
                        "slots": Object {},
                      },
                      "setupState": Object {},
                      "slots": Object {},
                      "sp": null,
                      "subTree": Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": null,
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <task-add-stub />,
                        "key": null,
                        "patchFlag": 16,
                        "props": Object {
                          "onAddTask": [Function],
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 1,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "task-add-stub",
                      },
                      "suspense": null,
                      "suspenseId": 0,
                      "type": Object {
                        "name": "TaskAdd",
                        "props": Object {},
                        "setup": [Function],
                      },
                      "u": null,
                      "uid": 7,
                      "um": null,
                      "update": [Function],
                      "vnode": [Circular],
                      "withProxy": null,
                    },
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": Array [
                      "onAddTask",
                    ],
                    "el": <task-add-stub />,
                    "key": null,
                    "patchFlag": 8,
                    "props": Object {
                      "onAddTask": [Function],
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 4,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": Object {
                      "name": "TaskAdd",
                      "props": Object {},
                      "setup": [Function],
                    },
                  },
                ],
                "component": null,
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <div
                  class="pt-3 container list-group"
                >
                  <div>
                    <h3
                      class="text-muted"
                      id="tasks-header"
                    >
                      Tasks
                    </h3>
                    <task-list-stub
                      tasks="[object Promise]"
                    />
                    <task-list-stub
                      tasks="[object Promise]"
                    />
                  </div>
                  <task-add-stub />
                </div>,
                "key": null,
                "patchFlag": 0,
                "props": Object {
                  "class": "pt-3 container list-group",
                },
                "ref": null,
                "scopeId": null,
                "shapeFlag": 17,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": "div",
              },
            ],
            "component": null,
            "dirs": null,
            "dynamicChildren": Array [
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": Array [
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": Array [
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": "Goal #2",
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <h2
                          class="mb-1 mr-auto p-2"
                          id="goal-name"
                        >
                          Goal #2
                        </h2>,
                        "key": null,
                        "patchFlag": 3,
                        "props": Object {
                          "class": "mb-1 mr-auto p-2",
                          "id": "goal-name",
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 9,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "h2",
                      },
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": Array [
                          Object {
                            "__v_isVNode": true,
                            "__v_skip": true,
                            "anchor": null,
                            "appContext": null,
                            "children": Array [
                              Object {
                                "__v_isVNode": true,
                                "__v_skip": true,
                                "anchor": null,
                                "appContext": null,
                                "children": Array [
                                  Object {
                                    "__v_isVNode": true,
                                    "__v_skip": true,
                                    "anchor": null,
                                    "appContext": null,
                                    "children": null,
                                    "component": null,
                                    "dirs": null,
                                    "dynamicChildren": null,
                                    "dynamicProps": null,
                                    "el": <font-awesome-icon
                                      icon="user-pen"
                                    />,
                                    "key": null,
                                    "patchFlag": 0,
                                    "props": Object {
                                      "icon": "user-pen",
                                    },
                                    "ref": null,
                                    "scopeId": null,
                                    "shapeFlag": 1,
                                    "slotScopeIds": null,
                                    "ssContent": null,
                                    "ssFallback": null,
                                    "staticCount": 0,
                                    "suspense": null,
                                    "target": null,
                                    "targetAnchor": null,
                                    "transition": null,
                                    "type": "font-awesome-icon",
                                  },
                                ],
                                "component": null,
                                "dirs": null,
                                "dynamicChildren": null,
                                "dynamicProps": null,
                                "el": <button
                                  class="badge badge-pill"
                                  id="edit-goal"
                                >
                                  <font-awesome-icon
                                    icon="user-pen"
                                  />
                                </button>,
                                "key": null,
                                "patchFlag": 0,
                                "props": Object {
                                  "class": "badge badge-pill",
                                  "id": "edit-goal",
                                  "onClick": [Function],
                                },
                                "ref": null,
                                "scopeId": null,
                                "shapeFlag": 17,
                                "slotScopeIds": null,
                                "ssContent": null,
                                "ssFallback": null,
                                "staticCount": 0,
                                "suspense": null,
                                "target": null,
                                "targetAnchor": null,
                                "transition": null,
                                "type": "button",
                              },
                              Object {
                                "__v_isVNode": true,
                                "__v_skip": true,
                                "anchor": null,
                                "appContext": null,
                                "children": Array [
                                  Object {
                                    "__v_isVNode": true,
                                    "__v_skip": true,
                                    "anchor": null,
                                    "appContext": null,
                                    "children": null,
                                    "component": null,
                                    "dirs": null,
                                    "dynamicChildren": null,
                                    "dynamicProps": null,
                                    "el": <font-awesome-icon
                                      icon="trash"
                                    />,
                                    "key": null,
                                    "patchFlag": 0,
                                    "props": Object {
                                      "icon": "trash",
                                    },
                                    "ref": null,
                                    "scopeId": null,
                                    "shapeFlag": 1,
                                    "slotScopeIds": null,
                                    "ssContent": null,
                                    "ssFallback": null,
                                    "staticCount": 0,
                                    "suspense": null,
                                    "target": null,
                                    "targetAnchor": null,
                                    "transition": null,
                                    "type": "font-awesome-icon",
                                  },
                                ],
                                "component": null,
                                "dirs": null,
                                "dynamicChildren": null,
                                "dynamicProps": null,
                                "el": <button
                                  class="badge badge-pill text-danger"
                                  id="remove-goal"
                                >
                                  <font-awesome-icon
                                    icon="trash"
                                  />
                                </button>,
                                "key": null,
                                "patchFlag": 0,
                                "props": Object {
                                  "class": "badge badge-pill text-danger",
                                  "id": "remove-goal",
                                  "onClick": [Function],
                                },
                                "ref": null,
                                "scopeId": null,
                                "shapeFlag": 17,
                                "slotScopeIds": null,
                                "ssContent": null,
                                "ssFallback": null,
                                "staticCount": 0,
                                "suspense": null,
                                "target": null,
                                "targetAnchor": null,
                                "transition": null,
                                "type": "button",
                              },
                            ],
                            "component": null,
                            "dirs": null,
                            "dynamicChildren": null,
                            "dynamicProps": null,
                            "el": <div>
                              <button
                                class="badge badge-pill"
                                id="edit-goal"
                              >
                                <font-awesome-icon
                                  icon="user-pen"
                                />
                              </button>
                              <button
                                class="badge badge-pill text-danger"
                                id="remove-goal"
                              >
                                <font-awesome-icon
                                  icon="trash"
                                />
                              </button>
                            </div>,
                            "key": null,
                            "patchFlag": 0,
                            "props": null,
                            "ref": null,
                            "scopeId": null,
                            "shapeFlag": 17,
                            "slotScopeIds": null,
                            "ssContent": null,
                            "ssFallback": null,
                            "staticCount": 0,
                            "suspense": null,
                            "target": null,
                            "targetAnchor": null,
                            "transition": null,
                            "type": "div",
                          },
                          Object {
                            "__v_isVNode": true,
                            "__v_skip": true,
                            "anchor": null,
                            "appContext": null,
                            "children": " In Progress ",
                            "component": null,
                            "dirs": null,
                            "dynamicChildren": Array [],
                            "dynamicProps": null,
                            "el": <button
                              class="badge badge-warning badge-pill"
                              id="toggle-goal-completion-in-progress"
                            >
                               In Progress 
                            </button>,
                            "key": 1,
                            "patchFlag": 0,
                            "props": Object {
                              "class": "badge badge-warning badge-pill",
                              "id": "toggle-goal-completion-in-progress",
                              "key": 1,
                              "onClick": [Function],
                            },
                            "ref": null,
                            "scopeId": null,
                            "shapeFlag": 9,
                            "slotScopeIds": null,
                            "ssContent": null,
                            "ssFallback": null,
                            "staticCount": 0,
                            "suspense": null,
                            "target": null,
                            "targetAnchor": null,
                            "transition": null,
                            "type": "button",
                          },
                        ],
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <div
                          class="flex-column text-right"
                        >
                          <div>
                            <button
                              class="badge badge-pill"
                              id="edit-goal"
                            >
                              <font-awesome-icon
                                icon="user-pen"
                              />
                            </button>
                            <button
                              class="badge badge-pill text-danger"
                              id="remove-goal"
                            >
                              <font-awesome-icon
                                icon="trash"
                              />
                            </button>
                          </div>
                          <button
                            class="badge badge-warning badge-pill"
                            id="toggle-goal-completion-in-progress"
                          >
                             In Progress 
                          </button>
                        </div>,
                        "key": null,
                        "patchFlag": 0,
                        "props": Object {
                          "class": "flex-column text-right",
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 17,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "div",
                      },
                    ],
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <div
                      class="d-flex w-100 justify-content-between align-items-center"
                    >
                      <h2
                        class="mb-1 mr-auto p-2"
                        id="goal-name"
                      >
                        Goal #2
                      </h2>
                      <div
                        class="flex-column text-right"
                      >
                        <div>
                          <button
                            class="badge badge-pill"
                            id="edit-goal"
                          >
                            <font-awesome-icon
                              icon="user-pen"
                            />
                          </button>
                          <button
                            class="badge badge-pill text-danger"
                            id="remove-goal"
                          >
                            <font-awesome-icon
                              icon="trash"
                            />
                          </button>
                        </div>
                        <button
                          class="badge badge-warning badge-pill"
                          id="toggle-goal-completion-in-progress"
                        >
                           In Progress 
                        </button>
                      </div>
                    </div>,
                    "key": null,
                    "patchFlag": 0,
                    "props": Object {
                      "class": "d-flex w-100 justify-content-between align-items-center",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 17,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "div",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": Array [
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": "Description #2",
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <p
                          class="p-2 my-2 list-group-item-light list-group-item-secondary"
                          id="goal-description"
                        >
                          Description #2
                        </p>,
                        "key": null,
                        "patchFlag": 1,
                        "props": Object {
                          "class": "p-2 my-2 list-group-item-light list-group-item-secondary",
                          "id": "goal-description",
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 9,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "p",
                      },
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": null,
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": Array [
                          "timestamp",
                        ],
                        "el": <appdate
                          class="badge badge-light badge-pill pull-right"
                          timestamp="2022-04-15T07:25:23.269770Z"
                        />,
                        "key": null,
                        "patchFlag": 8,
                        "props": Object {
                          "class": "badge badge-light badge-pill pull-right",
                          "timestamp": "2022-04-15T07:25:23.269770Z",
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 1,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "AppDate",
                      },
                    ],
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <div
                      class="align-items-end d-flex w-100 justify-content-between"
                    >
                      <p
                        class="p-2 my-2 list-group-item-light list-group-item-secondary"
                        id="goal-description"
                      >
                        Description #2
                      </p>
                      <appdate
                        class="badge badge-light badge-pill pull-right"
                        timestamp="2022-04-15T07:25:23.269770Z"
                      />
                    </div>,
                    "key": null,
                    "patchFlag": 0,
                    "props": Object {
                      "class": "align-items-end d-flex w-100 justify-content-between",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 17,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "div",
                  },
                ],
                "component": null,
                "dirs": null,
                "dynamicChildren": Array [
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": "Goal #2",
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <h2
                      class="mb-1 mr-auto p-2"
                      id="goal-name"
                    >
                      Goal #2
                    </h2>,
                    "key": null,
                    "patchFlag": 3,
                    "props": Object {
                      "class": "mb-1 mr-auto p-2",
                      "id": "goal-name",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 9,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "h2",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": " In Progress ",
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": Array [],
                    "dynamicProps": null,
                    "el": <button
                      class="badge badge-warning badge-pill"
                      id="toggle-goal-completion-in-progress"
                    >
                       In Progress 
                    </button>,
                    "key": 1,
                    "patchFlag": 0,
                    "props": Object {
                      "class": "badge badge-warning badge-pill",
                      "id": "toggle-goal-completion-in-progress",
                      "key": 1,
                      "onClick": [Function],
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 9,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "button",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": "Description #2",
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <p
                      class="p-2 my-2 list-group-item-light list-group-item-secondary"
                      id="goal-description"
                    >
                      Description #2
                    </p>,
                    "key": null,
                    "patchFlag": 1,
                    "props": Object {
                      "class": "p-2 my-2 list-group-item-light list-group-item-secondary",
                      "id": "goal-description",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 9,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "p",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": null,
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": Array [
                      "timestamp",
                    ],
                    "el": <appdate
                      class="badge badge-light badge-pill pull-right"
                      timestamp="2022-04-15T07:25:23.269770Z"
                    />,
                    "key": null,
                    "patchFlag": 8,
                    "props": Object {
                      "class": "badge badge-light badge-pill pull-right",
                      "timestamp": "2022-04-15T07:25:23.269770Z",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 1,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "AppDate",
                  },
                ],
                "dynamicProps": null,
                "el": <div
                  class="list-group-item-heading"
                >
                  <div
                    class="d-flex w-100 justify-content-between align-items-center"
                  >
                    <h2
                      class="mb-1 mr-auto p-2"
                      id="goal-name"
                    >
                      Goal #2
                    </h2>
                    <div
                      class="flex-column text-right"
                    >
                      <div>
                        <button
                          class="badge badge-pill"
                          id="edit-goal"
                        >
                          <font-awesome-icon
                            icon="user-pen"
                          />
                        </button>
                        <button
                          class="badge badge-pill text-danger"
                          id="remove-goal"
                        >
                          <font-awesome-icon
                            icon="trash"
                          />
                        </button>
                      </div>
                      <button
                        class="badge badge-warning badge-pill"
                        id="toggle-goal-completion-in-progress"
                      >
                         In Progress 
                      </button>
                    </div>
                  </div>
                  <div
                    class="align-items-end d-flex w-100 justify-content-between"
                  >
                    <p
                      class="p-2 my-2 list-group-item-light list-group-item-secondary"
                      id="goal-description"
                    >
                      Description #2
                    </p>
                    <appdate
                      class="badge badge-light badge-pill pull-right"
                      timestamp="2022-04-15T07:25:23.269770Z"
                    />
                  </div>
                </div>,
                "key": 0,
                "patchFlag": 0,
                "props": Object {
                  "class": "list-group-item-heading",
                  "key": 0,
                },
                "ref": null,
                "scopeId": null,
                "shapeFlag": 17,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": "div",
              },
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": Array [
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": "Tasks",
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <h3
                      class="text-muted"
                      id="tasks-header"
                    >
                      Tasks
                    </h3>,
                    "key": null,
                    "patchFlag": -1,
                    "props": Object {
                      "class": "text-muted",
                      "id": "tasks-header",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 9,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "h3",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": null,
                    "component": Object {
                      "a": null,
                      "accessCache": Object {
                        "$store": 4,
                        "@@__IMMUTABLE_ITERABLE__@@": 0,
                        "@@__IMMUTABLE_RECORD__@@": 0,
                        "_isMockFunction": 0,
                        "constructor": 0,
                        "isVueInstance": 0,
                        "tasks": 3,
                        "toJSON": 0,
                        Symbol(Symbol.toStringTag): 0,
                      },
                      "appContext": Object {
                        "app": [Circular],
                        "components": Object {
                          "transition": Object {
                            "name": "transition",
                          },
                          "transition-group": Object {
                            "name": "transition-group",
                          },
                        },
                        "config": Object {
                          "compilerOptions": Object {},
                          "errorHandler": undefined,
                          "globalProperties": Object {},
                          "isNativeTag": [Function],
                          "optionMergeStrategies": Object {},
                          "performance": false,
                          "warnHandler": undefined,
                        },
                        "directives": Object {},
                        "emitsCache": WeakMap {},
                        "mixins": Array [
                          Object {
                            "beforeCreate": [Function],
                          },
                        ],
                        "optionsCache": WeakMap {},
                        "propsCache": WeakMap {},
                        "provides": Object {},
                        "reload": [Function],
                      },
                      "asyncDep": null,
                      "asyncResolved": false,
                      "attrs": Object {
                        "onSaveEditedTask": [Function],
                      },
                      "bc": null,
                      "bm": null,
                      "bu": null,
                      "bum": null,
                      "c": null,
                      "components": null,
                      "ctx": Object {
                        "$store": Object {
                          "dispatch": [MockFunction] {
                            "calls": Array [
                              Array [
                                "fetchGoalTasks",
                                Object {
                                  "goalId": "2",
                                },
                              ],
                            ],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "getters": Object {
                            "activeCompletedGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Promise {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [MockFunction],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeInProgressGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Promise {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goal": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "2",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goalTasks": [MockFunction],
                          },
                        },
                        "tasks": Promise {},
                      },
                      "da": null,
                      "data": Object {},
                      "directives": null,
                      "ec": null,
                      "effect": ReactiveEffect {
                        "active": true,
                        "allowRecurse": true,
                        "deps": Array [
                          Set {
                            [Circular],
                          },
                          Set {
                            [Circular],
                          },
                        ],
                        "fn": [Function],
                        "onTrack": undefined,
                        "onTrigger": undefined,
                        "parent": undefined,
                        "scheduler": [Function],
                      },
                      "emit": [Function],
                      "emitsOptions": null,
                      "emitted": null,
                      "exposeProxy": null,
                      "exposed": null,
                      "inheritAttrs": undefined,
                      "isDeactivated": false,
                      "isMounted": true,
                      "isUnmounted": false,
                      "m": null,
                      "next": null,
                      "parent": [Circular],
                      "props": Object {
                        "tasks": Promise {},
                      },
                      "propsDefaults": Object {},
                      "propsOptions": Array [
                        Object {
                          "tasks": Object {
                            "0": false,
                            "1": true,
                            "requred": true,
                            "type": [Function],
                          },
                        },
                        Array [],
                      ],
                      "provides": Object {},
                      "proxy": Object {
                        "$store": Object {
                          "dispatch": [MockFunction] {
                            "calls": Array [
                              Array [
                                "fetchGoalTasks",
                                Object {
                                  "goalId": "2",
                                },
                              ],
                            ],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "getters": Object {
                            "activeCompletedGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Promise {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [MockFunction],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeInProgressGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Promise {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goal": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "2",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goalTasks": [MockFunction],
                          },
                        },
                        "tasks": Promise {},
                      },
                      "refs": Object {},
                      "render": [Function],
                      "renderCache": Array [],
                      "root": [Circular],
                      "rtc": null,
                      "rtg": null,
                      "scope": EffectScope {
                        "active": true,
                        "cleanups": Array [],
                        "effects": Array [
                          ReactiveEffect {
                            "active": true,
                            "allowRecurse": true,
                            "deps": Array [
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                            ],
                            "fn": [Function],
                            "onTrack": undefined,
                            "onTrigger": undefined,
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                        ],
                      },
                      "setupContext": Object {
                        "attrs": Object {
                          "onSaveEditedTask": [Function],
                        },
                        "emit": [Function],
                        "expose": [Function],
                        "slots": Object {},
                      },
                      "setupState": Object {},
                      "slots": Object {},
                      "sp": null,
                      "subTree": Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": null,
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <task-list-stub
                          tasks="[object Promise]"
                        />,
                        "key": null,
                        "patchFlag": 16,
                        "props": Object {
                          "onSaveEditedTask": [Function],
                          "tasks": Promise {},
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 1,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "task-list-stub",
                      },
                      "suspense": null,
                      "suspenseId": 0,
                      "type": Object {
                        "name": "TaskList",
                        "props": Object {
                          "tasks": Object {
                            "0": false,
                            "1": true,
                            "requred": true,
                            "type": [Function],
                          },
                        },
                        "setup": [Function],
                      },
                      "u": null,
                      "uid": 5,
                      "um": null,
                      "update": [Function],
                      "vnode": [Circular],
                      "withProxy": null,
                    },
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": Array [
                      "tasks",
                      "onSaveEditedTask",
                    ],
                    "el": <task-list-stub
                      tasks="[object Promise]"
                    />,
                    "key": null,
                    "patchFlag": 8,
                    "props": Object {
                      "onSaveEditedTask": [Function],
                      "tasks": Promise {},
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 4,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": Object {
                      "name": "TaskList",
                      "props": Object {
                        "tasks": Object {
                          "0": false,
                          "1": true,
                          "requred": true,
                          "type": [Function],
                        },
                      },
                      "setup": [Function],
                    },
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": null,
                    "component": Object {
                      "a": null,
                      "accessCache": Object {
                        "$store": 4,
                        "@@__IMMUTABLE_ITERABLE__@@": 0,
                        "@@__IMMUTABLE_RECORD__@@": 0,
                        "_isMockFunction": 0,
                        "constructor": 0,
                        "isVueInstance": 0,
                        "tasks": 3,
                        "toJSON": 0,
                        Symbol(Symbol.toStringTag): 0,
                      },
                      "appContext": Object {
                        "app": [Circular],
                        "components": Object {
                          "transition": Object {
                            "name": "transition",
                          },
                          "transition-group": Object {
                            "name": "transition-group",
                          },
                        },
                        "config": Object {
                          "compilerOptions": Object {},
                          "errorHandler": undefined,
                          "globalProperties": Object {},
                          "isNativeTag": [Function],
                          "optionMergeStrategies": Object {},
                          "performance": false,
                          "warnHandler": undefined,
                        },
                        "directives": Object {},
                        "emitsCache": WeakMap {},
                        "mixins": Array [
                          Object {
                            "beforeCreate": [Function],
                          },
                        ],
                        "optionsCache": WeakMap {},
                        "propsCache": WeakMap {},
                        "provides": Object {},
                        "reload": [Function],
                      },
                      "asyncDep": null,
                      "asyncResolved": false,
                      "attrs": Object {
                        "onSaveEditedTask": [Function],
                      },
                      "bc": null,
                      "bm": null,
                      "bu": null,
                      "bum": null,
                      "c": null,
                      "components": null,
                      "ctx": Object {
                        "$store": Object {
                          "dispatch": [MockFunction] {
                            "calls": Array [
                              Array [
                                "fetchGoalTasks",
                                Object {
                                  "goalId": "2",
                                },
                              ],
                            ],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "getters": Object {
                            "activeCompletedGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Promise {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [MockFunction],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeInProgressGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Promise {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goal": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "2",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goalTasks": [MockFunction],
                          },
                        },
                        "tasks": Promise {},
                      },
                      "da": null,
                      "data": Object {},
                      "directives": null,
                      "ec": null,
                      "effect": ReactiveEffect {
                        "active": true,
                        "allowRecurse": true,
                        "deps": Array [
                          Set {
                            [Circular],
                          },
                          Set {
                            [Circular],
                          },
                        ],
                        "fn": [Function],
                        "onTrack": undefined,
                        "onTrigger": undefined,
                        "parent": undefined,
                        "scheduler": [Function],
                      },
                      "emit": [Function],
                      "emitsOptions": null,
                      "emitted": null,
                      "exposeProxy": null,
                      "exposed": null,
                      "inheritAttrs": undefined,
                      "isDeactivated": false,
                      "isMounted": true,
                      "isUnmounted": false,
                      "m": null,
                      "next": null,
                      "parent": [Circular],
                      "props": Object {
                        "tasks": Promise {},
                      },
                      "propsDefaults": Object {},
                      "propsOptions": Array [
                        Object {
                          "tasks": Object {
                            "0": false,
                            "1": true,
                            "requred": true,
                            "type": [Function],
                          },
                        },
                        Array [],
                      ],
                      "provides": Object {},
                      "proxy": Object {
                        "$store": Object {
                          "dispatch": [MockFunction] {
                            "calls": Array [
                              Array [
                                "fetchGoalTasks",
                                Object {
                                  "goalId": "2",
                                },
                              ],
                            ],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "getters": Object {
                            "activeCompletedGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Promise {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [MockFunction],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeInProgressGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Promise {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goal": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "2",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goalTasks": [MockFunction],
                          },
                        },
                        "tasks": Promise {},
                      },
                      "refs": Object {},
                      "render": [Function],
                      "renderCache": Array [],
                      "root": [Circular],
                      "rtc": null,
                      "rtg": null,
                      "scope": EffectScope {
                        "active": true,
                        "cleanups": Array [],
                        "effects": Array [
                          ReactiveEffect {
                            "active": true,
                            "allowRecurse": true,
                            "deps": Array [
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                            ],
                            "fn": [Function],
                            "onTrack": undefined,
                            "onTrigger": undefined,
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                        ],
                      },
                      "setupContext": Object {
                        "attrs": Object {
                          "onSaveEditedTask": [Function],
                        },
                        "emit": [Function],
                        "expose": [Function],
                        "slots": Object {},
                      },
                      "setupState": Object {},
                      "slots": Object {},
                      "sp": null,
                      "subTree": Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": null,
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <task-list-stub
                          tasks="[object Promise]"
                        />,
                        "key": null,
                        "patchFlag": 16,
                        "props": Object {
                          "onSaveEditedTask": [Function],
                          "tasks": Promise {},
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 1,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "task-list-stub",
                      },
                      "suspense": null,
                      "suspenseId": 0,
                      "type": Object {
                        "name": "TaskList",
                        "props": Object {
                          "tasks": Object {
                            "0": false,
                            "1": true,
                            "requred": true,
                            "type": [Function],
                          },
                        },
                        "setup": [Function],
                      },
                      "u": null,
                      "uid": 6,
                      "um": null,
                      "update": [Function],
                      "vnode": [Circular],
                      "withProxy": null,
                    },
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": Array [
                      "tasks",
                      "onSaveEditedTask",
                    ],
                    "el": <task-list-stub
                      tasks="[object Promise]"
                    />,
                    "key": null,
                    "patchFlag": 8,
                    "props": Object {
                      "onSaveEditedTask": [Function],
                      "tasks": Promise {},
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 4,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": Object {
                      "name": "TaskList",
                      "props": Object {
                        "tasks": Object {
                          "0": false,
                          "1": true,
                          "requred": true,
                          "type": [Function],
                        },
                      },
                      "setup": [Function],
                    },
                  },
                ],
                "component": null,
                "dirs": null,
                "dynamicChildren": Array [
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": null,
                    "component": Object {
                      "a": null,
                      "accessCache": Object {
                        "$store": 4,
                        "@@__IMMUTABLE_ITERABLE__@@": 0,
                        "@@__IMMUTABLE_RECORD__@@": 0,
                        "_isMockFunction": 0,
                        "constructor": 0,
                        "isVueInstance": 0,
                        "tasks": 3,
                        "toJSON": 0,
                        Symbol(Symbol.toStringTag): 0,
                      },
                      "appContext": Object {
                        "app": [Circular],
                        "components": Object {
                          "transition": Object {
                            "name": "transition",
                          },
                          "transition-group": Object {
                            "name": "transition-group",
                          },
                        },
                        "config": Object {
                          "compilerOptions": Object {},
                          "errorHandler": undefined,
                          "globalProperties": Object {},
                          "isNativeTag": [Function],
                          "optionMergeStrategies": Object {},
                          "performance": false,
                          "warnHandler": undefined,
                        },
                        "directives": Object {},
                        "emitsCache": WeakMap {},
                        "mixins": Array [
                          Object {
                            "beforeCreate": [Function],
                          },
                        ],
                        "optionsCache": WeakMap {},
                        "propsCache": WeakMap {},
                        "provides": Object {},
                        "reload": [Function],
                      },
                      "asyncDep": null,
                      "asyncResolved": false,
                      "attrs": Object {
                        "onSaveEditedTask": [Function],
                      },
                      "bc": null,
                      "bm": null,
                      "bu": null,
                      "bum": null,
                      "c": null,
                      "components": null,
                      "ctx": Object {
                        "$store": Object {
                          "dispatch": [MockFunction] {
                            "calls": Array [
                              Array [
                                "fetchGoalTasks",
                                Object {
                                  "goalId": "2",
                                },
                              ],
                            ],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "getters": Object {
                            "activeCompletedGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Promise {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [MockFunction],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeInProgressGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Promise {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goal": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "2",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goalTasks": [MockFunction],
                          },
                        },
                        "tasks": Promise {},
                      },
                      "da": null,
                      "data": Object {},
                      "directives": null,
                      "ec": null,
                      "effect": ReactiveEffect {
                        "active": true,
                        "allowRecurse": true,
                        "deps": Array [
                          Set {
                            [Circular],
                          },
                          Set {
                            [Circular],
                          },
                        ],
                        "fn": [Function],
                        "onTrack": undefined,
                        "onTrigger": undefined,
                        "parent": undefined,
                        "scheduler": [Function],
                      },
                      "emit": [Function],
                      "emitsOptions": null,
                      "emitted": null,
                      "exposeProxy": null,
                      "exposed": null,
                      "inheritAttrs": undefined,
                      "isDeactivated": false,
                      "isMounted": true,
                      "isUnmounted": false,
                      "m": null,
                      "next": null,
                      "parent": [Circular],
                      "props": Object {
                        "tasks": Promise {},
                      },
                      "propsDefaults": Object {},
                      "propsOptions": Array [
                        Object {
                          "tasks": Object {
                            "0": false,
                            "1": true,
                            "requred": true,
                            "type": [Function],
                          },
                        },
                        Array [],
                      ],
                      "provides": Object {},
                      "proxy": Object {
                        "$store": Object {
                          "dispatch": [MockFunction] {
                            "calls": Array [
                              Array [
                                "fetchGoalTasks",
                                Object {
                                  "goalId": "2",
                                },
                              ],
                            ],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "getters": Object {
                            "activeCompletedGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Promise {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [MockFunction],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeInProgressGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Promise {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goal": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "2",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goalTasks": [MockFunction],
                          },
                        },
                        "tasks": Promise {},
                      },
                      "refs": Object {},
                      "render": [Function],
                      "renderCache": Array [],
                      "root": [Circular],
                      "rtc": null,
                      "rtg": null,
                      "scope": EffectScope {
                        "active": true,
                        "cleanups": Array [],
                        "effects": Array [
                          ReactiveEffect {
                            "active": true,
                            "allowRecurse": true,
                            "deps": Array [
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                            ],
                            "fn": [Function],
                            "onTrack": undefined,
                            "onTrigger": undefined,
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                        ],
                      },
                      "setupContext": Object {
                        "attrs": Object {
                          "onSaveEditedTask": [Function],
                        },
                        "emit": [Function],
                        "expose": [Function],
                        "slots": Object {},
                      },
                      "setupState": Object {},
                      "slots": Object {},
                      "sp": null,
                      "subTree": Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": null,
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <task-list-stub
                          tasks="[object Promise]"
                        />,
                        "key": null,
                        "patchFlag": 16,
                        "props": Object {
                          "onSaveEditedTask": [Function],
                          "tasks": Promise {},
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 1,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "task-list-stub",
                      },
                      "suspense": null,
                      "suspenseId": 0,
                      "type": Object {
                        "name": "TaskList",
                        "props": Object {
                          "tasks": Object {
                            "0": false,
                            "1": true,
                            "requred": true,
                            "type": [Function],
                          },
                        },
                        "setup": [Function],
                      },
                      "u": null,
                      "uid": 5,
                      "um": null,
                      "update": [Function],
                      "vnode": [Circular],
                      "withProxy": null,
                    },
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": Array [
                      "tasks",
                      "onSaveEditedTask",
                    ],
                    "el": <task-list-stub
                      tasks="[object Promise]"
                    />,
                    "key": null,
                    "patchFlag": 8,
                    "props": Object {
                      "onSaveEditedTask": [Function],
                      "tasks": Promise {},
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 4,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": Object {
                      "name": "TaskList",
                      "props": Object {
                        "tasks": Object {
                          "0": false,
                          "1": true,
                          "requred": true,
                          "type": [Function],
                        },
                      },
                      "setup": [Function],
                    },
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": null,
                    "component": Object {
                      "a": null,
                      "accessCache": Object {
                        "$store": 4,
                        "@@__IMMUTABLE_ITERABLE__@@": 0,
                        "@@__IMMUTABLE_RECORD__@@": 0,
                        "_isMockFunction": 0,
                        "constructor": 0,
                        "isVueInstance": 0,
                        "tasks": 3,
                        "toJSON": 0,
                        Symbol(Symbol.toStringTag): 0,
                      },
                      "appContext": Object {
                        "app": [Circular],
                        "components": Object {
                          "transition": Object {
                            "name": "transition",
                          },
                          "transition-group": Object {
                            "name": "transition-group",
                          },
                        },
                        "config": Object {
                          "compilerOptions": Object {},
                          "errorHandler": undefined,
                          "globalProperties": Object {},
                          "isNativeTag": [Function],
                          "optionMergeStrategies": Object {},
                          "performance": false,
                          "warnHandler": undefined,
                        },
                        "directives": Object {},
                        "emitsCache": WeakMap {},
                        "mixins": Array [
                          Object {
                            "beforeCreate": [Function],
                          },
                        ],
                        "optionsCache": WeakMap {},
                        "propsCache": WeakMap {},
                        "provides": Object {},
                        "reload": [Function],
                      },
                      "asyncDep": null,
                      "asyncResolved": false,
                      "attrs": Object {
                        "onSaveEditedTask": [Function],
                      },
                      "bc": null,
                      "bm": null,
                      "bu": null,
                      "bum": null,
                      "c": null,
                      "components": null,
                      "ctx": Object {
                        "$store": Object {
                          "dispatch": [MockFunction] {
                            "calls": Array [
                              Array [
                                "fetchGoalTasks",
                                Object {
                                  "goalId": "2",
                                },
                              ],
                            ],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "getters": Object {
                            "activeCompletedGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Promise {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [MockFunction],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeInProgressGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Promise {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goal": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "2",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goalTasks": [MockFunction],
                          },
                        },
                        "tasks": Promise {},
                      },
                      "da": null,
                      "data": Object {},
                      "directives": null,
                      "ec": null,
                      "effect": ReactiveEffect {
                        "active": true,
                        "allowRecurse": true,
                        "deps": Array [
                          Set {
                            [Circular],
                          },
                          Set {
                            [Circular],
                          },
                        ],
                        "fn": [Function],
                        "onTrack": undefined,
                        "onTrigger": undefined,
                        "parent": undefined,
                        "scheduler": [Function],
                      },
                      "emit": [Function],
                      "emitsOptions": null,
                      "emitted": null,
                      "exposeProxy": null,
                      "exposed": null,
                      "inheritAttrs": undefined,
                      "isDeactivated": false,
                      "isMounted": true,
                      "isUnmounted": false,
                      "m": null,
                      "next": null,
                      "parent": [Circular],
                      "props": Object {
                        "tasks": Promise {},
                      },
                      "propsDefaults": Object {},
                      "propsOptions": Array [
                        Object {
                          "tasks": Object {
                            "0": false,
                            "1": true,
                            "requred": true,
                            "type": [Function],
                          },
                        },
                        Array [],
                      ],
                      "provides": Object {},
                      "proxy": Object {
                        "$store": Object {
                          "dispatch": [MockFunction] {
                            "calls": Array [
                              Array [
                                "fetchGoalTasks",
                                Object {
                                  "goalId": "2",
                                },
                              ],
                            ],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "getters": Object {
                            "activeCompletedGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Promise {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [MockFunction],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeInProgressGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Promise {},
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goal": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "2",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goalTasks": [MockFunction],
                          },
                        },
                        "tasks": Promise {},
                      },
                      "refs": Object {},
                      "render": [Function],
                      "renderCache": Array [],
                      "root": [Circular],
                      "rtc": null,
                      "rtg": null,
                      "scope": EffectScope {
                        "active": true,
                        "cleanups": Array [],
                        "effects": Array [
                          ReactiveEffect {
                            "active": true,
                            "allowRecurse": true,
                            "deps": Array [
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                            ],
                            "fn": [Function],
                            "onTrack": undefined,
                            "onTrigger": undefined,
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                        ],
                      },
                      "setupContext": Object {
                        "attrs": Object {
                          "onSaveEditedTask": [Function],
                        },
                        "emit": [Function],
                        "expose": [Function],
                        "slots": Object {},
                      },
                      "setupState": Object {},
                      "slots": Object {},
                      "sp": null,
                      "subTree": Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": null,
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <task-list-stub
                          tasks="[object Promise]"
                        />,
                        "key": null,
                        "patchFlag": 16,
                        "props": Object {
                          "onSaveEditedTask": [Function],
                          "tasks": Promise {},
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 1,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "task-list-stub",
                      },
                      "suspense": null,
                      "suspenseId": 0,
                      "type": Object {
                        "name": "TaskList",
                        "props": Object {
                          "tasks": Object {
                            "0": false,
                            "1": true,
                            "requred": true,
                            "type": [Function],
                          },
                        },
                        "setup": [Function],
                      },
                      "u": null,
                      "uid": 6,
                      "um": null,
                      "update": [Function],
                      "vnode": [Circular],
                      "withProxy": null,
                    },
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": Array [
                      "tasks",
                      "onSaveEditedTask",
                    ],
                    "el": <task-list-stub
                      tasks="[object Promise]"
                    />,
                    "key": null,
                    "patchFlag": 8,
                    "props": Object {
                      "onSaveEditedTask": [Function],
                      "tasks": Promise {},
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 4,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": Object {
                      "name": "TaskList",
                      "props": Object {
                        "tasks": Object {
                          "0": false,
                          "1": true,
                          "requred": true,
                          "type": [Function],
                        },
                      },
                      "setup": [Function],
                    },
                  },
                ],
                "dynamicProps": null,
                "el": <div>
                  <h3
                    class="text-muted"
                    id="tasks-header"
                  >
                    Tasks
                  </h3>
                  <task-list-stub
                    tasks="[object Promise]"
                  />
                  <task-list-stub
                    tasks="[object Promise]"
                  />
                </div>,
                "key": 0,
                "patchFlag": 0,
                "props": Object {
                  "key": 0,
                },
                "ref": null,
                "scopeId": null,
                "shapeFlag": 17,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": "div",
              },
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": null,
                "component": Object {
                  "a": null,
                  "accessCache": Object {
                    "$store": 4,
                    "@@__IMMUTABLE_ITERABLE__@@": 0,
                    "@@__IMMUTABLE_RECORD__@@": 0,
                    "_isMockFunction": 0,
                    "constructor": 0,
                    "isVueInstance": 0,
                    "toJSON": 0,
                    Symbol(Symbol.toStringTag): 0,
                  },
                  "appContext": Object {
                    "app": [Circular],
                    "components": Object {
                      "transition": Object {
                        "name": "transition",
                      },
                      "transition-group": Object {
                        "name": "transition-group",
                      },
                    },
                    "config": Object {
                      "compilerOptions": Object {},
                      "errorHandler": undefined,
                      "globalProperties": Object {},
                      "isNativeTag": [Function],
                      "optionMergeStrategies": Object {},
                      "performance": false,
                      "warnHandler": undefined,
                    },
                    "directives": Object {},
                    "emitsCache": WeakMap {},
                    "mixins": Array [
                      Object {
                        "beforeCreate": [Function],
                      },
                    ],
                    "optionsCache": WeakMap {},
                    "propsCache": WeakMap {},
                    "provides": Object {},
                    "reload": [Function],
                  },
                  "asyncDep": null,
                  "asyncResolved": false,
                  "attrs": Object {
                    "onAddTask": [Function],
                  },
                  "bc": null,
                  "bm": null,
                  "bu": null,
                  "bum": null,
                  "c": null,
                  "components": null,
                  "ctx": Object {
                    "$store": Object {
                      "dispatch": [MockFunction] {
                        "calls": Array [
                          Array [
                            "fetchGoalTasks",
                            Object {
                              "goalId": "2",
                            },
                          ],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "getters": Object {
                        "activeCompletedGoalTasks": [MockFunction] {
                          "calls": Array [
                            Array [
                              Promise {},
                            ],
                          ],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": Promise {},
                            },
                          ],
                        },
                        "activeGoalTasks": [MockFunction] {
                          "calls": Array [
                            Array [
                              [MockFunction],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": Promise {},
                            },
                          ],
                        },
                        "activeInProgressGoalTasks": [MockFunction] {
                          "calls": Array [
                            Array [
                              Promise {},
                            ],
                          ],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": Promise {},
                            },
                          ],
                        },
                        "goal": [MockFunction] {
                          "calls": Array [
                            Array [
                              "2",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": Promise {},
                            },
                          ],
                        },
                        "goalTasks": [MockFunction],
                      },
                    },
                  },
                  "da": null,
                  "data": Object {},
                  "directives": null,
                  "ec": null,
                  "effect": ReactiveEffect {
                    "active": true,
                    "allowRecurse": true,
                    "deps": Array [
                      Set {
                        [Circular],
                      },
                    ],
                    "fn": [Function],
                    "onTrack": undefined,
                    "onTrigger": undefined,
                    "parent": undefined,
                    "scheduler": [Function],
                  },
                  "emit": [Function],
                  "emitsOptions": null,
                  "emitted": null,
                  "exposeProxy": null,
                  "exposed": null,
                  "inheritAttrs": undefined,
                  "isDeactivated": false,
                  "isMounted": true,
                  "isUnmounted": false,
                  "m": null,
                  "next": null,
                  "parent": [Circular],
                  "props": Object {},
                  "propsDefaults": Object {},
                  "propsOptions": Array [
                    Object {},
                    Array [],
                  ],
                  "provides": Object {},
                  "proxy": Object {
                    "$store": Object {
                      "dispatch": [MockFunction] {
                        "calls": Array [
                          Array [
                            "fetchGoalTasks",
                            Object {
                              "goalId": "2",
                            },
                          ],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "getters": Object {
                        "activeCompletedGoalTasks": [MockFunction] {
                          "calls": Array [
                            Array [
                              Promise {},
                            ],
                          ],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": Promise {},
                            },
                          ],
                        },
                        "activeGoalTasks": [MockFunction] {
                          "calls": Array [
                            Array [
                              [MockFunction],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": Promise {},
                            },
                          ],
                        },
                        "activeInProgressGoalTasks": [MockFunction] {
                          "calls": Array [
                            Array [
                              Promise {},
                            ],
                          ],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": Promise {},
                            },
                          ],
                        },
                        "goal": [MockFunction] {
                          "calls": Array [
                            Array [
                              "2",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": Promise {},
                            },
                          ],
                        },
                        "goalTasks": [MockFunction],
                      },
                    },
                  },
                  "refs": Object {},
                  "render": [Function],
                  "renderCache": Array [],
                  "root": [Circular],
                  "rtc": null,
                  "rtg": null,
                  "scope": EffectScope {
                    "active": true,
                    "cleanups": Array [],
                    "effects": Array [
                      ReactiveEffect {
                        "active": true,
                        "allowRecurse": true,
                        "deps": Array [
                          Set {
                            [Circular],
                          },
                        ],
                        "fn": [Function],
                        "onTrack": undefined,
                        "onTrigger": undefined,
                        "parent": undefined,
                        "scheduler": [Function],
                      },
                    ],
                  },
                  "setupContext": Object {
                    "attrs": Object {
                      "onAddTask": [Function],
                    },
                    "emit": [Function],
                    "expose": [Function],
                    "slots": Object {},
                  },
                  "setupState": Object {},
                  "slots": Object {},
                  "sp": null,
                  "subTree": Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": null,
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <task-add-stub />,
                    "key": null,
                    "patchFlag": 16,
                    "props": Object {
                      "onAddTask": [Function],
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 1,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "task-add-stub",
                  },
                  "suspense": null,
                  "suspenseId": 0,
                  "type": Object {
                    "name": "TaskAdd",
                    "props": Object {},
                    "setup": [Function],
                  },
                  "u": null,
                  "uid": 7,
                  "um": null,
                  "update": [Function],
                  "vnode": [Circular],
                  "withProxy": null,
                },
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": Array [
                  "onAddTask",
                ],
                "el": <task-add-stub />,
                "key": null,
                "patchFlag": 8,
                "props": Object {
                  "onAddTask": [Function],
                },
                "ref": null,
                "scopeId": null,
                "shapeFlag": 4,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Object {
                  "name": "TaskAdd",
                  "props": Object {},
                  "setup": [Function],
                },
              },
            ],
            "dynamicProps": null,
            "el": <div
              class="list-group-item"
            >
              <div
                class="list-group-item-heading"
              >
                <div
                  class="d-flex w-100 justify-content-between align-items-center"
                >
                  <h2
                    class="mb-1 mr-auto p-2"
                    id="goal-name"
                  >
                    Goal #2
                  </h2>
                  <div
                    class="flex-column text-right"
                  >
                    <div>
                      <button
                        class="badge badge-pill"
                        id="edit-goal"
                      >
                        <font-awesome-icon
                          icon="user-pen"
                        />
                      </button>
                      <button
                        class="badge badge-pill text-danger"
                        id="remove-goal"
                      >
                        <font-awesome-icon
                          icon="trash"
                        />
                      </button>
                    </div>
                    <button
                      class="badge badge-warning badge-pill"
                      id="toggle-goal-completion-in-progress"
                    >
                       In Progress 
                    </button>
                  </div>
                </div>
                <div
                  class="align-items-end d-flex w-100 justify-content-between"
                >
                  <p
                    class="p-2 my-2 list-group-item-light list-group-item-secondary"
                    id="goal-description"
                  >
                    Description #2
                  </p>
                  <appdate
                    class="badge badge-light badge-pill pull-right"
                    timestamp="2022-04-15T07:25:23.269770Z"
                  />
                </div>
              </div>
              <div
                class="pt-3 container list-group"
              >
                <div>
                  <h3
                    class="text-muted"
                    id="tasks-header"
                  >
                    Tasks
                  </h3>
                  <task-list-stub
                    tasks="[object Promise]"
                  />
                  <task-list-stub
                    tasks="[object Promise]"
                  />
                </div>
                <task-add-stub />
              </div>
            </div>,
            "key": null,
            "patchFlag": 0,
            "props": Object {
              "class": "list-group-item",
            },
            "ref": null,
            "scopeId": null,
            "shapeFlag": 17,
            "slotScopeIds": null,
            "ssContent": null,
            "ssFallback": null,
            "staticCount": 0,
            "suspense": null,
            "target": null,
            "targetAnchor": null,
            "transition": null,
            "type": "div",
          },
          "suspense": null,
          "suspenseId": 0,
          "type": Object {
            "components": Object {
              "GoalEditor": Object {
                "data": [Function],
                "emits": Array [
                  "saveEditedGoal",
                  "finishEditingGoal",
                ],
                "methods": Object {
                  "cancelEdit": [Function],
                  "saveGoal": [Function],
                },
                "props": Object {
                  "goal": Object {
                    "required": true,
                    "type": [Function],
                  },
                },
                "render": [Function],
              },
              "TaskAdd": Object {
                "data": [Function],
                "methods": Object {
                  "saveTask": [Function],
                },
                "render": [Function],
              },
              "TaskList": Object {
                "components": Object {
                  "TaskCompleted": Object {
                    "emits": Array [
                      "editTask",
                      "removeTask",
                      "toggleTaskCompletion",
                    ],
                    "methods": Object {
                      "editTask": [Function],
                      "removeTask": [Function],
                      "toggleTaskCompletion": [Function],
                    },
                    "props": Object {
                      "task": Object {
                        "required": true,
                        "type": [Function],
                      },
                    },
                    "render": [Function],
                  },
                  "TaskEditor": Object {
                    "data": [Function],
                    "emits": Array [
                      "saveEditedTask",
                      "finishEditingTask",
                    ],
                    "methods": Object {
                      "cancelEdit": [Function],
                      "saveTask": [Function],
                    },
                    "props": Object {
                      "task": Object {
                        "required": true,
                        "type": [Function],
                      },
                    },
                    "render": [Function],
                  },
                  "TaskInProgress": Object {
                    "emits": Array [
                      "editTask",
                      "removeTask",
                      "toggleTaskCompletion",
                    ],
                    "methods": Object {
                      "editTask": [Function],
                      "removeTask": [Function],
                      "toggleTaskCompletion": [Function],
                    },
                    "props": Object {
                      "task": Object {
                        "required": true,
                        "type": [Function],
                      },
                    },
                    "render": [Function],
                  },
                },
                "data": [Function],
                "emits": Array [
                  "saveEditedTask",
                ],
                "methods": Object {
                  "editTask": [Function],
                  "editingThisTask": [Function],
                  "finishEditingTask": [Function],
                  "removeTask": [Function],
                  "saveEditedTask": [Function],
                  "toggleTaskCompletion": [Function],
                },
                "props": Object {
                  "tasks": Object {
                    "0": false,
                    "1": true,
                    "requred": true,
                    "type": [Function],
                  },
                },
                "render": [Function],
              },
            },
            "computed": Object {
              "activeCompletedGoalTasks": [Function],
              "activeGoalTasks": [Function],
              "activeInProgressGoalTasks": [Function],
              "goal": [Function],
              "goalTasks": [Function],
            },
            "created": [Function],
            "data": [Function],
            "methods": Object {
              "addTask": [Function],
              "editGoal": [Function],
              "finishEditingGoal": [Function],
              "removeGoal": [Function],
              "saveEditedGoal": [Function],
              "saveEditedTask": [Function],
              "toggleGoalCompletion": [Function],
            },
            "props": Object {
              "goalId": Object {
                "0": false,
                "1": true,
                "required": true,
                "type": [Function],
              },
            },
            "propsData": Object {
              "goalId": "2",
            },
            "render": [Function],
          },
          "u": null,
          "uid": 4,
          "um": null,
          "update": [Function],
          "vnode": [Circular],
          "withProxy": null,
        },
        "dirs": null,
        "dynamicChildren": null,
        "dynamicProps": null,
        "el": <div
          class="list-group-item"
        >
          <div
            class="list-group-item-heading"
          >
            <div
              class="d-flex w-100 justify-content-between align-items-center"
            >
              <h2
                class="mb-1 mr-auto p-2"
                id="goal-name"
              >
                Goal #2
              </h2>
              <div
                class="flex-column text-right"
              >
                <div>
                  <button
                    class="badge badge-pill"
                    id="edit-goal"
                  >
                    <font-awesome-icon
                      icon="user-pen"
                    />
                  </button>
                  <button
                    class="badge badge-pill text-danger"
                    id="remove-goal"
                  >
                    <font-awesome-icon
                      icon="trash"
                    />
                  </button>
                </div>
                <button
                  class="badge badge-warning badge-pill"
                  id="toggle-goal-completion-in-progress"
                >
                   In Progress 
                </button>
              </div>
            </div>
            <div
              class="align-items-end d-flex w-100 justify-content-between"
            >
              <p
                class="p-2 my-2 list-group-item-light list-group-item-secondary"
                id="goal-description"
              >
                Description #2
              </p>
              <appdate
                class="badge badge-light badge-pill pull-right"
                timestamp="2022-04-15T07:25:23.269770Z"
              />
            </div>
          </div>
          <div
            class="pt-3 container list-group"
          >
            <div>
              <h3
                class="text-muted"
                id="tasks-header"
              >
                Tasks
              </h3>
              <task-list-stub
                tasks="[object Promise]"
              />
              <task-list-stub
                tasks="[object Promise]"
              />
            </div>
            <task-add-stub />
          </div>
        </div>,
        "key": null,
        "patchFlag": 0,
        "props": Object {
          "goalId": "2",
          "ref": "VTU_COMPONENT",
        },
        "ref": Object {
          "f": false,
          "i": [Circular],
          "k": undefined,
          "r": "VTU_COMPONENT",
        },
        "scopeId": null,
        "shapeFlag": 4,
        "slotScopeIds": null,
        "ssContent": null,
        "ssFallback": null,
        "staticCount": 0,
        "suspense": null,
        "target": null,
        "targetAnchor": null,
        "transition": null,
        "type": Object {
          "components": Object {
            "GoalEditor": Object {
              "data": [Function],
              "emits": Array [
                "saveEditedGoal",
                "finishEditingGoal",
              ],
              "methods": Object {
                "cancelEdit": [Function],
                "saveGoal": [Function],
              },
              "props": Object {
                "goal": Object {
                  "required": true,
                  "type": [Function],
                },
              },
              "render": [Function],
            },
            "TaskAdd": Object {
              "data": [Function],
              "methods": Object {
                "saveTask": [Function],
              },
              "render": [Function],
            },
            "TaskList": Object {
              "components": Object {
                "TaskCompleted": Object {
                  "emits": Array [
                    "editTask",
                    "removeTask",
                    "toggleTaskCompletion",
                  ],
                  "methods": Object {
                    "editTask": [Function],
                    "removeTask": [Function],
                    "toggleTaskCompletion": [Function],
                  },
                  "props": Object {
                    "task": Object {
                      "required": true,
                      "type": [Function],
                    },
                  },
                  "render": [Function],
                },
                "TaskEditor": Object {
                  "data": [Function],
                  "emits": Array [
                    "saveEditedTask",
                    "finishEditingTask",
                  ],
                  "methods": Object {
                    "cancelEdit": [Function],
                    "saveTask": [Function],
                  },
                  "props": Object {
                    "task": Object {
                      "required": true,
                      "type": [Function],
                    },
                  },
                  "render": [Function],
                },
                "TaskInProgress": Object {
                  "emits": Array [
                    "editTask",
                    "removeTask",
                    "toggleTaskCompletion",
                  ],
                  "methods": Object {
                    "editTask": [Function],
                    "removeTask": [Function],
                    "toggleTaskCompletion": [Function],
                  },
                  "props": Object {
                    "task": Object {
                      "required": true,
                      "type": [Function],
                    },
                  },
                  "render": [Function],
                },
              },
              "data": [Function],
              "emits": Array [
                "saveEditedTask",
              ],
              "methods": Object {
                "editTask": [Function],
                "editingThisTask": [Function],
                "finishEditingTask": [Function],
                "removeTask": [Function],
                "saveEditedTask": [Function],
                "toggleTaskCompletion": [Function],
              },
              "props": Object {
                "tasks": Object {
                  "0": false,
                  "1": true,
                  "requred": true,
                  "type": [Function],
                },
              },
              "render": [Function],
            },
          },
          "computed": Object {
            "activeCompletedGoalTasks": [Function],
            "activeGoalTasks": [Function],
            "activeInProgressGoalTasks": [Function],
            "goal": [Function],
            "goalTasks": [Function],
          },
          "created": [Function],
          "data": [Function],
          "methods": Object {
            "addTask": [Function],
            "editGoal": [Function],
            "finishEditingGoal": [Function],
            "removeGoal": [Function],
            "saveEditedGoal": [Function],
            "saveEditedTask": [Function],
            "toggleGoalCompletion": [Function],
          },
          "props": Object {
            "goalId": Object {
              "0": false,
              "1": true,
              "required": true,
              "type": [Function],
            },
          },
          "propsData": Object {
            "goalId": "2",
          },
          "render": [Function],
        },
      },
      "suspense": null,
      "suspenseId": 0,
      "type": Object {
        "name": "VTU_ROOT",
        "render": [Function],
      },
      "u": null,
      "uid": 3,
      "um": null,
      "update": [Function],
      "vnode": Object {
        "__v_isVNode": true,
        "__v_skip": true,
        "anchor": null,
        "appContext": Object {
          "app": [Circular],
          "components": Object {
            "transition": Object {
              "name": "transition",
            },
            "transition-group": Object {
              "name": "transition-group",
            },
          },
          "config": Object {
            "compilerOptions": Object {},
            "errorHandler": undefined,
            "globalProperties": Object {},
            "isNativeTag": [Function],
            "optionMergeStrategies": Object {},
            "performance": false,
            "warnHandler": undefined,
          },
          "directives": Object {},
          "emitsCache": WeakMap {},
          "mixins": Array [
            Object {
              "beforeCreate": [Function],
            },
          ],
          "optionsCache": WeakMap {},
          "propsCache": WeakMap {},
          "provides": Object {},
          "reload": [Function],
        },
        "children": null,
        "component": [Circular],
        "dirs": null,
        "dynamicChildren": null,
        "dynamicProps": null,
        "el": <div
          class="list-group-item"
        >
          <div
            class="list-group-item-heading"
          >
            <div
              class="d-flex w-100 justify-content-between align-items-center"
            >
              <h2
                class="mb-1 mr-auto p-2"
                id="goal-name"
              >
                Goal #2
              </h2>
              <div
                class="flex-column text-right"
              >
                <div>
                  <button
                    class="badge badge-pill"
                    id="edit-goal"
                  >
                    <font-awesome-icon
                      icon="user-pen"
                    />
                  </button>
                  <button
                    class="badge badge-pill text-danger"
                    id="remove-goal"
                  >
                    <font-awesome-icon
                      icon="trash"
                    />
                  </button>
                </div>
                <button
                  class="badge badge-warning badge-pill"
                  id="toggle-goal-completion-in-progress"
                >
                   In Progress 
                </button>
              </div>
            </div>
            <div
              class="align-items-end d-flex w-100 justify-content-between"
            >
              <p
                class="p-2 my-2 list-group-item-light list-group-item-secondary"
                id="goal-description"
              >
                Description #2
              </p>
              <appdate
                class="badge badge-light badge-pill pull-right"
                timestamp="2022-04-15T07:25:23.269770Z"
              />
            </div>
          </div>
          <div
            class="pt-3 container list-group"
          >
            <div>
              <h3
                class="text-muted"
                id="tasks-header"
              >
                Tasks
              </h3>
              <task-list-stub
                tasks="[object Promise]"
              />
              <task-list-stub
                tasks="[object Promise]"
              />
            </div>
            <task-add-stub />
          </div>
        </div>,
        "key": null,
        "patchFlag": 0,
        "props": null,
        "ref": null,
        "scopeId": null,
        "shapeFlag": 4,
        "slotScopeIds": null,
        "ssContent": null,
        "ssFallback": null,
        "staticCount": 0,
        "suspense": null,
        "target": null,
        "targetAnchor": null,
        "transition": null,
        "type": Object {
          "name": "VTU_ROOT",
          "render": [Function],
        },
      },
      "withProxy": null,
    },
    "_props": null,
    "_uid": 1,
    "component": [Function],
    "config": Object {
      "compilerOptions": Object {},
      "errorHandler": undefined,
      "globalProperties": Object {},
      "isNativeTag": [Function],
      "optionMergeStrategies": Object {},
      "performance": false,
      "warnHandler": undefined,
    },
    "directive": [Function],
    "mixin": [Function],
    "mount": [Function],
    "provide": [Function],
    "unmount": [Function],
    "use": [Function],
    "version": "3.2.33",
  },
  "__setProps": [Function],
  "componentVM": Object {
    "$store": Object {
      "dispatch": [MockFunction] {
        "calls": Array [
          Array [
            "fetchGoalTasks",
            Object {
              "goalId": "2",
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "getters": Object {
        "activeCompletedGoalTasks": [MockFunction] {
          "calls": Array [
            Array [
              Promise {},
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        },
        "activeGoalTasks": [MockFunction] {
          "calls": Array [
            Array [
              [MockFunction],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        },
        "activeInProgressGoalTasks": [MockFunction] {
          "calls": Array [
            Array [
              Promise {},
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        },
        "goal": [MockFunction] {
          "calls": Array [
            Array [
              "2",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        },
        "goalTasks": [MockFunction],
      },
    },
    "activeCompletedGoalTasks": Promise {},
    "activeGoalTasks": Promise {},
    "activeInProgressGoalTasks": Promise {},
    "addTask": [Function],
    "editGoal": [Function],
    "editingGoal": false,
    "finishEditingGoal": [Function],
    "goal": Object {
      "completed": false,
      "description": "Description #2",
      "id": 2,
      "name": "Goal #2",
      "removed": false,
      "timestamp": "2022-04-15T06:58:03.382281Z",
      "updated": "2022-04-15T07:25:23.269770Z",
      "user": 6,
    },
    "goalId": "2",
    "goalTasks": [MockFunction],
    "hasOwnProperty": [Function],
    "removeGoal": [Function],
    "saveEditedGoal": [Function],
    "saveEditedTask": [Function],
    "toggleGoalCompletion": [Function],
  },
  "isDisabled": [Function],
  "rootVM": Object {
    "$store": Object {
      "dispatch": [MockFunction] {
        "calls": Array [
          Array [
            "fetchGoalTasks",
            Object {
              "goalId": "2",
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "getters": Object {
        "activeCompletedGoalTasks": [MockFunction] {
          "calls": Array [
            Array [
              Promise {},
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        },
        "activeGoalTasks": [MockFunction] {
          "calls": Array [
            Array [
              [MockFunction],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        },
        "activeInProgressGoalTasks": [MockFunction] {
          "calls": Array [
            Array [
              Promise {},
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        },
        "goal": [MockFunction] {
          "calls": Array [
            Array [
              "2",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        },
        "goalTasks": [MockFunction],
      },
    },
  },
  "wrapperElement": <div
    class="list-group-item"
  >
    <div
      class="list-group-item-heading"
    >
      <div
        class="d-flex w-100 justify-content-between align-items-center"
      >
        <h2
          class="mb-1 mr-auto p-2"
          id="goal-name"
        >
          Goal #2
        </h2>
        <div
          class="flex-column text-right"
        >
          <div>
            <button
              class="badge badge-pill"
              id="edit-goal"
            >
              <font-awesome-icon
                icon="user-pen"
              />
            </button>
            <button
              class="badge badge-pill text-danger"
              id="remove-goal"
            >
              <font-awesome-icon
                icon="trash"
              />
            </button>
          </div>
          <button
            class="badge badge-warning badge-pill"
            id="toggle-goal-completion-in-progress"
          >
             In Progress 
          </button>
        </div>
      </div>
      <div
        class="align-items-end d-flex w-100 justify-content-between"
      >
        <p
          class="p-2 my-2 list-group-item-light list-group-item-secondary"
          id="goal-description"
        >
          Description #2
        </p>
        <appdate
          class="badge badge-light badge-pill pull-right"
          timestamp="2022-04-15T07:25:23.269770Z"
        />
      </div>
    </div>
    <div
      class="pt-3 container list-group"
    >
      <div>
        <h3
          class="text-muted"
          id="tasks-header"
        >
          Tasks
        </h3>
        <task-list-stub
          tasks="[object Promise]"
        />
        <task-list-stub
          tasks="[object Promise]"
        />
      </div>
      <task-add-stub />
    </div>
  </div>,
}
`;

exports[`PageGoalShow.vue matches previous html snapshots when there is a goal with no tasks 1`] = `
VueWrapper {
  "__app": Object {
    "_component": Object {
      "name": "VTU_ROOT",
      "render": [Function],
    },
    "_container": <div
      data-v-app=""
    >
      <div
        class="list-group-item"
      >
        <div
          class="list-group-item-heading"
        >
          <div
            class="d-flex w-100 justify-content-between align-items-center"
          >
            <h2
              class="mb-1 mr-auto p-2"
              id="goal-name"
            >
              Goal #2
            </h2>
            <div
              class="flex-column text-right"
            >
              <div>
                <button
                  class="badge badge-pill"
                  id="edit-goal"
                >
                  <font-awesome-icon
                    icon="user-pen"
                  />
                </button>
                <button
                  class="badge badge-pill text-danger"
                  id="remove-goal"
                >
                  <font-awesome-icon
                    icon="trash"
                  />
                </button>
              </div>
              <button
                class="badge badge-warning badge-pill"
                id="toggle-goal-completion-in-progress"
              >
                 In Progress 
              </button>
            </div>
          </div>
          <div
            class="align-items-end d-flex w-100 justify-content-between"
          >
            <p
              class="p-2 my-2 list-group-item-light list-group-item-secondary"
              id="goal-description"
            >
              Description #2
            </p>
            <appdate
              class="badge badge-light badge-pill pull-right"
              timestamp="2022-04-15T07:25:23.269770Z"
            />
          </div>
        </div>
        <div
          class="pt-3 container list-group"
        >
          <!--v-if-->
          <task-add-stub />
        </div>
      </div>
    </div>,
    "_context": Object {
      "app": [Circular],
      "components": Object {
        "transition": Object {
          "name": "transition",
        },
        "transition-group": Object {
          "name": "transition-group",
        },
      },
      "config": Object {
        "compilerOptions": Object {},
        "errorHandler": undefined,
        "globalProperties": Object {},
        "isNativeTag": [Function],
        "optionMergeStrategies": Object {},
        "performance": false,
        "warnHandler": undefined,
      },
      "directives": Object {},
      "emitsCache": WeakMap {},
      "mixins": Array [
        Object {
          "beforeCreate": [Function],
        },
      ],
      "optionsCache": WeakMap {},
      "propsCache": WeakMap {},
      "provides": Object {},
      "reload": [Function],
    },
    "_instance": Object {
      "a": null,
      "accessCache": Object {},
      "appContext": Object {
        "app": [Circular],
        "components": Object {
          "transition": Object {
            "name": "transition",
          },
          "transition-group": Object {
            "name": "transition-group",
          },
        },
        "config": Object {
          "compilerOptions": Object {},
          "errorHandler": undefined,
          "globalProperties": Object {},
          "isNativeTag": [Function],
          "optionMergeStrategies": Object {},
          "performance": false,
          "warnHandler": undefined,
        },
        "directives": Object {},
        "emitsCache": WeakMap {},
        "mixins": Array [
          Object {
            "beforeCreate": [Function],
          },
        ],
        "optionsCache": WeakMap {},
        "propsCache": WeakMap {},
        "provides": Object {},
        "reload": [Function],
      },
      "asyncDep": null,
      "asyncResolved": false,
      "attrs": Object {},
      "bc": null,
      "bm": null,
      "bu": null,
      "bum": null,
      "c": null,
      "components": null,
      "ctx": Object {
        "$store": Object {
          "dispatch": [MockFunction] {
            "calls": Array [
              Array [
                "fetchGoalTasks",
                Object {
                  "goalId": "1",
                },
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "getters": Object {
            "activeCompletedGoalTasks": [MockFunction],
            "activeGoalTasks": [MockFunction] {
              "calls": Array [
                Array [
                  [MockFunction],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Array [],
                },
              ],
            },
            "activeInProgressGoalTasks": [MockFunction],
            "goal": [MockFunction],
            "goalTasks": [MockFunction],
          },
        },
      },
      "da": null,
      "data": Object {},
      "directives": null,
      "ec": null,
      "effect": ReactiveEffect {
        "active": true,
        "allowRecurse": true,
        "deps": Array [
          Set {
            [Circular],
          },
          Set {
            [Circular],
          },
          Set {
            [Circular],
          },
        ],
        "fn": [Function],
        "onTrack": undefined,
        "onTrigger": undefined,
        "parent": undefined,
        "scheduler": [Function],
      },
      "emit": [Function],
      "emitsOptions": null,
      "emitted": null,
      "exposeProxy": null,
      "exposed": null,
      "inheritAttrs": undefined,
      "isDeactivated": false,
      "isMounted": true,
      "isUnmounted": false,
      "m": null,
      "next": null,
      "parent": null,
      "props": Object {},
      "propsDefaults": Object {},
      "propsOptions": Array [
        Object {},
        Array [],
      ],
      "provides": Object {},
      "proxy": Object {
        "$store": Object {
          "dispatch": [MockFunction] {
            "calls": Array [
              Array [
                "fetchGoalTasks",
                Object {
                  "goalId": "1",
                },
              ],
            ],
            "results": Array [
              Object {
                "type": "return",
                "value": undefined,
              },
            ],
          },
          "getters": Object {
            "activeCompletedGoalTasks": [MockFunction],
            "activeGoalTasks": [MockFunction] {
              "calls": Array [
                Array [
                  [MockFunction],
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": Array [],
                },
              ],
            },
            "activeInProgressGoalTasks": [MockFunction],
            "goal": [MockFunction],
            "goalTasks": [MockFunction],
          },
        },
      },
      "refs": Object {
        "VTU_COMPONENT": Object {
          "$store": Object {
            "dispatch": [MockFunction] {
              "calls": Array [
                Array [
                  "fetchGoalTasks",
                  Object {
                    "goalId": "1",
                  },
                ],
              ],
              "results": Array [
                Object {
                  "type": "return",
                  "value": undefined,
                },
              ],
            },
            "getters": Object {
              "activeCompletedGoalTasks": [MockFunction],
              "activeGoalTasks": [MockFunction] {
                "calls": Array [
                  Array [
                    [MockFunction],
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": Array [],
                  },
                ],
              },
              "activeInProgressGoalTasks": [MockFunction],
              "goal": [MockFunction],
              "goalTasks": [MockFunction],
            },
          },
          "activeCompletedGoalTasks": Promise {},
          "activeGoalTasks": Array [],
          "activeInProgressGoalTasks": Promise {},
          "addTask": [Function],
          "editGoal": [Function],
          "editingGoal": false,
          "finishEditingGoal": [Function],
          "goal": Object {
            "completed": false,
            "description": "Description #2",
            "id": 2,
            "name": "Goal #2",
            "removed": false,
            "timestamp": "2022-04-15T06:58:03.382281Z",
            "updated": "2022-04-15T07:25:23.269770Z",
            "user": 6,
          },
          "goalId": "1",
          "goalTasks": [MockFunction],
          "hasOwnProperty": [Function],
          "removeGoal": [Function],
          "saveEditedGoal": [Function],
          "saveEditedTask": [Function],
          "toggleGoalCompletion": [Function],
        },
      },
      "render": [Function],
      "renderCache": Array [],
      "root": [Circular],
      "rtc": null,
      "rtg": null,
      "scope": EffectScope {
        "active": true,
        "cleanups": Array [],
        "effects": Array [
          ReactiveEffect {
            "active": true,
            "allowRecurse": true,
            "deps": Array [
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
            ],
            "fn": [Function],
            "onTrack": undefined,
            "onTrigger": undefined,
            "parent": undefined,
            "scheduler": [Function],
          },
        ],
      },
      "setupContext": null,
      "setupState": Object {},
      "slots": Object {},
      "sp": null,
      "subTree": Object {
        "__v_isVNode": true,
        "__v_skip": true,
        "anchor": null,
        "appContext": null,
        "children": null,
        "component": Object {
          "a": null,
          "accessCache": Object {
            "$store": 4,
            "@@__IMMUTABLE_ITERABLE__@@": 0,
            "@@__IMMUTABLE_RECORD__@@": 0,
            "_isMockFunction": 0,
            "activeCompletedGoalTasks": 4,
            "activeGoalTasks": 4,
            "activeInProgressGoalTasks": 4,
            "addTask": 4,
            "constructor": 0,
            "editGoal": 4,
            "editingGoal": 2,
            "finishEditingGoal": 4,
            "goal": 2,
            "goalId": 3,
            "goalTasks": 4,
            "hasOwnProperty": 4,
            "isVueInstance": 0,
            "removeGoal": 4,
            "saveEditedGoal": 4,
            "saveEditedTask": 4,
            "toJSON": 0,
            "toggleGoalCompletion": 4,
            Symbol(Symbol.toStringTag): 0,
          },
          "appContext": Object {
            "app": [Circular],
            "components": Object {
              "transition": Object {
                "name": "transition",
              },
              "transition-group": Object {
                "name": "transition-group",
              },
            },
            "config": Object {
              "compilerOptions": Object {},
              "errorHandler": undefined,
              "globalProperties": Object {},
              "isNativeTag": [Function],
              "optionMergeStrategies": Object {},
              "performance": false,
              "warnHandler": undefined,
            },
            "directives": Object {},
            "emitsCache": WeakMap {},
            "mixins": Array [
              Object {
                "beforeCreate": [Function],
              },
            ],
            "optionsCache": WeakMap {},
            "propsCache": WeakMap {},
            "provides": Object {},
            "reload": [Function],
          },
          "asyncDep": null,
          "asyncResolved": false,
          "attrs": Object {},
          "bc": null,
          "bm": null,
          "bu": null,
          "bum": null,
          "c": null,
          "components": Object {
            "GoalEditor": Object {
              "data": [Function],
              "emits": Array [
                "saveEditedGoal",
                "finishEditingGoal",
              ],
              "methods": Object {
                "cancelEdit": [Function],
                "saveGoal": [Function],
              },
              "props": Object {
                "goal": Object {
                  "required": true,
                  "type": [Function],
                },
              },
              "render": [Function],
            },
            "TaskAdd": Object {
              "data": [Function],
              "methods": Object {
                "saveTask": [Function],
              },
              "render": [Function],
            },
            "TaskList": Object {
              "components": Object {
                "TaskCompleted": Object {
                  "emits": Array [
                    "editTask",
                    "removeTask",
                    "toggleTaskCompletion",
                  ],
                  "methods": Object {
                    "editTask": [Function],
                    "removeTask": [Function],
                    "toggleTaskCompletion": [Function],
                  },
                  "props": Object {
                    "task": Object {
                      "required": true,
                      "type": [Function],
                    },
                  },
                  "render": [Function],
                },
                "TaskEditor": Object {
                  "data": [Function],
                  "emits": Array [
                    "saveEditedTask",
                    "finishEditingTask",
                  ],
                  "methods": Object {
                    "cancelEdit": [Function],
                    "saveTask": [Function],
                  },
                  "props": Object {
                    "task": Object {
                      "required": true,
                      "type": [Function],
                    },
                  },
                  "render": [Function],
                },
                "TaskInProgress": Object {
                  "emits": Array [
                    "editTask",
                    "removeTask",
                    "toggleTaskCompletion",
                  ],
                  "methods": Object {
                    "editTask": [Function],
                    "removeTask": [Function],
                    "toggleTaskCompletion": [Function],
                  },
                  "props": Object {
                    "task": Object {
                      "required": true,
                      "type": [Function],
                    },
                  },
                  "render": [Function],
                },
              },
              "data": [Function],
              "emits": Array [
                "saveEditedTask",
              ],
              "methods": Object {
                "editTask": [Function],
                "editingThisTask": [Function],
                "finishEditingTask": [Function],
                "removeTask": [Function],
                "saveEditedTask": [Function],
                "toggleTaskCompletion": [Function],
              },
              "props": Object {
                "tasks": Object {
                  "requred": true,
                  "type": [Function],
                },
              },
              "render": [Function],
            },
          },
          "ctx": Object {
            "$store": Object {
              "dispatch": [MockFunction] {
                "calls": Array [
                  Array [
                    "fetchGoalTasks",
                    Object {
                      "goalId": "1",
                    },
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
              "getters": Object {
                "activeCompletedGoalTasks": [MockFunction] {
                  "calls": Array [
                    Array [
                      Array [],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": Promise {},
                    },
                  ],
                },
                "activeGoalTasks": [MockFunction] {
                  "calls": Array [
                    Array [
                      [MockFunction],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": Array [],
                    },
                  ],
                },
                "activeInProgressGoalTasks": [MockFunction] {
                  "calls": Array [
                    Array [
                      Array [],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": Promise {},
                    },
                  ],
                },
                "goal": [MockFunction],
                "goalTasks": [MockFunction],
              },
            },
            "activeCompletedGoalTasks": Promise {},
            "activeGoalTasks": Array [],
            "activeInProgressGoalTasks": Promise {},
            "addTask": [Function],
            "editGoal": [Function],
            "editingGoal": false,
            "finishEditingGoal": [Function],
            "goal": Promise {},
            "goalId": "1",
            "goalTasks": [MockFunction],
            "hasOwnProperty": [Function],
            "removeGoal": [Function],
            "saveEditedGoal": [Function],
            "saveEditedTask": [Function],
            "toggleGoalCompletion": [Function],
          },
          "da": null,
          "data": Object {
            "editingGoal": false,
            "goal": Object {
              "completed": false,
              "description": "Description #2",
              "id": 2,
              "name": "Goal #2",
              "removed": false,
              "timestamp": "2022-04-15T06:58:03.382281Z",
              "updated": "2022-04-15T07:25:23.269770Z",
              "user": 6,
            },
          },
          "directives": null,
          "ec": null,
          "effect": ReactiveEffect {
            "active": true,
            "allowRecurse": true,
            "deps": Array [
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
              Set {
                [Circular],
              },
              Set {
                [Circular],
                ReactiveEffect {
                  "active": true,
                  "computed": ComputedRefImpl {
                    "__v_isReadonly": false,
                    "__v_isRef": true,
                    "_cacheable": true,
                    "_dirty": false,
                    "_setter": [Function],
                    "_value": Promise {},
                    "dep": undefined,
                    "effect": [Circular],
                  },
                  "deps": Array [
                    [Circular],
                  ],
                  "fn": [Function],
                  "parent": undefined,
                  "scheduler": [Function],
                },
                ReactiveEffect {
                  "active": true,
                  "computed": ComputedRefImpl {
                    "__v_isReadonly": false,
                    "__v_isRef": true,
                    "_cacheable": true,
                    "_dirty": false,
                    "_setter": [Function],
                    "_value": Promise {},
                    "dep": undefined,
                    "effect": [Circular],
                  },
                  "deps": Array [
                    [Circular],
                  ],
                  "fn": [Function],
                  "parent": undefined,
                  "scheduler": [Function],
                },
              },
            ],
            "fn": [Function],
            "onTrack": undefined,
            "onTrigger": undefined,
            "parent": undefined,
            "scheduler": [Function],
          },
          "emit": [Function],
          "emitsOptions": null,
          "emitted": null,
          "exposeProxy": null,
          "exposed": null,
          "inheritAttrs": undefined,
          "isDeactivated": false,
          "isMounted": true,
          "isUnmounted": false,
          "m": null,
          "next": null,
          "parent": [Circular],
          "props": Object {
            "goalId": "1",
          },
          "propsDefaults": Object {},
          "propsOptions": Array [
            Object {
              "goalId": Object {
                "0": false,
                "1": true,
                "required": true,
                "type": [Function],
              },
            },
            Array [],
          ],
          "provides": Object {},
          "proxy": Object {
            "$store": Object {
              "dispatch": [MockFunction] {
                "calls": Array [
                  Array [
                    "fetchGoalTasks",
                    Object {
                      "goalId": "1",
                    },
                  ],
                ],
                "results": Array [
                  Object {
                    "type": "return",
                    "value": undefined,
                  },
                ],
              },
              "getters": Object {
                "activeCompletedGoalTasks": [MockFunction] {
                  "calls": Array [
                    Array [
                      Array [],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": Promise {},
                    },
                  ],
                },
                "activeGoalTasks": [MockFunction] {
                  "calls": Array [
                    Array [
                      [MockFunction],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": Array [],
                    },
                  ],
                },
                "activeInProgressGoalTasks": [MockFunction] {
                  "calls": Array [
                    Array [
                      Array [],
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": Promise {},
                    },
                  ],
                },
                "goal": [MockFunction] {
                  "calls": Array [
                    Array [
                      "1",
                    ],
                  ],
                  "results": Array [
                    Object {
                      "type": "return",
                      "value": Promise {},
                    },
                  ],
                },
                "goalTasks": [MockFunction],
              },
            },
            "activeCompletedGoalTasks": Promise {},
            "activeGoalTasks": Array [],
            "activeInProgressGoalTasks": Promise {},
            "addTask": [Function],
            "editGoal": [Function],
            "editingGoal": false,
            "finishEditingGoal": [Function],
            "goal": Object {
              "completed": false,
              "description": "Description #2",
              "id": 2,
              "name": "Goal #2",
              "removed": false,
              "timestamp": "2022-04-15T06:58:03.382281Z",
              "updated": "2022-04-15T07:25:23.269770Z",
              "user": 6,
            },
            "goalId": "1",
            "goalTasks": [MockFunction],
            "hasOwnProperty": [Function],
            "removeGoal": [Function],
            "saveEditedGoal": [Function],
            "saveEditedTask": [Function],
            "toggleGoalCompletion": [Function],
          },
          "refs": Object {},
          "render": [Function],
          "renderCache": Array [
            [Function],
            [Function],
            ,
            [Function],
          ],
          "root": [Circular],
          "rtc": null,
          "rtg": null,
          "scope": EffectScope {
            "active": true,
            "cleanups": Array [],
            "effects": Array [
              ReactiveEffect {
                "active": true,
                "computed": ComputedRefImpl {
                  "__v_isReadonly": false,
                  "__v_isRef": true,
                  "_cacheable": true,
                  "_dirty": false,
                  "_setter": [Function],
                  "_value": Promise {},
                  "dep": undefined,
                  "effect": [Circular],
                },
                "deps": Array [
                  Set {
                    [Circular],
                  },
                ],
                "fn": [Function],
                "parent": undefined,
                "scheduler": [Function],
              },
              ReactiveEffect {
                "active": true,
                "computed": ComputedRefImpl {
                  "__v_isReadonly": false,
                  "__v_isRef": true,
                  "_cacheable": true,
                  "_dirty": false,
                  "_setter": [Function],
                  "_value": [MockFunction],
                  "dep": Set {
                    ReactiveEffect {
                      "active": true,
                      "computed": ComputedRefImpl {
                        "__v_isReadonly": false,
                        "__v_isRef": true,
                        "_cacheable": true,
                        "_dirty": false,
                        "_setter": [Function],
                        "_value": Array [],
                        "dep": Set {
                          ReactiveEffect {
                            "active": true,
                            "allowRecurse": true,
                            "deps": Array [
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              Set {
                                [Circular],
                              },
                              [Circular],
                            ],
                            "fn": [Function],
                            "onTrack": undefined,
                            "onTrigger": undefined,
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                          ReactiveEffect {
                            "active": true,
                            "computed": ComputedRefImpl {
                              "__v_isReadonly": false,
                              "__v_isRef": true,
                              "_cacheable": true,
                              "_dirty": false,
                              "_setter": [Function],
                              "_value": Promise {},
                              "dep": undefined,
                              "effect": [Circular],
                            },
                            "deps": Array [
                              [Circular],
                            ],
                            "fn": [Function],
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                          ReactiveEffect {
                            "active": true,
                            "computed": ComputedRefImpl {
                              "__v_isReadonly": false,
                              "__v_isRef": true,
                              "_cacheable": true,
                              "_dirty": false,
                              "_setter": [Function],
                              "_value": Promise {},
                              "dep": undefined,
                              "effect": [Circular],
                            },
                            "deps": Array [
                              [Circular],
                            ],
                            "fn": [Function],
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                        },
                        "effect": [Circular],
                      },
                      "deps": Array [
                        [Circular],
                      ],
                      "fn": [Function],
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                  },
                  "effect": [Circular],
                },
                "deps": Array [],
                "fn": [Function],
                "parent": undefined,
                "scheduler": [Function],
              },
              ReactiveEffect {
                "active": true,
                "computed": ComputedRefImpl {
                  "__v_isReadonly": false,
                  "__v_isRef": true,
                  "_cacheable": true,
                  "_dirty": false,
                  "_setter": [Function],
                  "_value": Array [],
                  "dep": Set {
                    ReactiveEffect {
                      "active": true,
                      "allowRecurse": true,
                      "deps": Array [
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        [Circular],
                      ],
                      "fn": [Function],
                      "onTrack": undefined,
                      "onTrigger": undefined,
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                    ReactiveEffect {
                      "active": true,
                      "computed": ComputedRefImpl {
                        "__v_isReadonly": false,
                        "__v_isRef": true,
                        "_cacheable": true,
                        "_dirty": false,
                        "_setter": [Function],
                        "_value": Promise {},
                        "dep": undefined,
                        "effect": [Circular],
                      },
                      "deps": Array [
                        [Circular],
                      ],
                      "fn": [Function],
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                    ReactiveEffect {
                      "active": true,
                      "computed": ComputedRefImpl {
                        "__v_isReadonly": false,
                        "__v_isRef": true,
                        "_cacheable": true,
                        "_dirty": false,
                        "_setter": [Function],
                        "_value": Promise {},
                        "dep": undefined,
                        "effect": [Circular],
                      },
                      "deps": Array [
                        [Circular],
                      ],
                      "fn": [Function],
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                  },
                  "effect": [Circular],
                },
                "deps": Array [
                  Set {
                    [Circular],
                  },
                ],
                "fn": [Function],
                "parent": undefined,
                "scheduler": [Function],
              },
              ReactiveEffect {
                "active": true,
                "computed": ComputedRefImpl {
                  "__v_isReadonly": false,
                  "__v_isRef": true,
                  "_cacheable": true,
                  "_dirty": false,
                  "_setter": [Function],
                  "_value": Promise {},
                  "dep": undefined,
                  "effect": [Circular],
                },
                "deps": Array [
                  Set {
                    ReactiveEffect {
                      "active": true,
                      "allowRecurse": true,
                      "deps": Array [
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        [Circular],
                      ],
                      "fn": [Function],
                      "onTrack": undefined,
                      "onTrigger": undefined,
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                    [Circular],
                    ReactiveEffect {
                      "active": true,
                      "computed": ComputedRefImpl {
                        "__v_isReadonly": false,
                        "__v_isRef": true,
                        "_cacheable": true,
                        "_dirty": false,
                        "_setter": [Function],
                        "_value": Promise {},
                        "dep": undefined,
                        "effect": [Circular],
                      },
                      "deps": Array [
                        [Circular],
                      ],
                      "fn": [Function],
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                  },
                ],
                "fn": [Function],
                "parent": undefined,
                "scheduler": [Function],
              },
              ReactiveEffect {
                "active": true,
                "computed": ComputedRefImpl {
                  "__v_isReadonly": false,
                  "__v_isRef": true,
                  "_cacheable": true,
                  "_dirty": false,
                  "_setter": [Function],
                  "_value": Promise {},
                  "dep": undefined,
                  "effect": [Circular],
                },
                "deps": Array [
                  Set {
                    ReactiveEffect {
                      "active": true,
                      "allowRecurse": true,
                      "deps": Array [
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        Set {
                          [Circular],
                        },
                        [Circular],
                      ],
                      "fn": [Function],
                      "onTrack": undefined,
                      "onTrigger": undefined,
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                    ReactiveEffect {
                      "active": true,
                      "computed": ComputedRefImpl {
                        "__v_isReadonly": false,
                        "__v_isRef": true,
                        "_cacheable": true,
                        "_dirty": false,
                        "_setter": [Function],
                        "_value": Promise {},
                        "dep": undefined,
                        "effect": [Circular],
                      },
                      "deps": Array [
                        [Circular],
                      ],
                      "fn": [Function],
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                    [Circular],
                  },
                ],
                "fn": [Function],
                "parent": undefined,
                "scheduler": [Function],
              },
              ReactiveEffect {
                "active": true,
                "allowRecurse": true,
                "deps": Array [
                  Set {
                    [Circular],
                  },
                  Set {
                    [Circular],
                  },
                  Set {
                    [Circular],
                  },
                  Set {
                    [Circular],
                  },
                  Set {
                    [Circular],
                  },
                  Set {
                    [Circular],
                  },
                  Set {
                    [Circular],
                    ReactiveEffect {
                      "active": true,
                      "computed": ComputedRefImpl {
                        "__v_isReadonly": false,
                        "__v_isRef": true,
                        "_cacheable": true,
                        "_dirty": false,
                        "_setter": [Function],
                        "_value": Promise {},
                        "dep": undefined,
                        "effect": [Circular],
                      },
                      "deps": Array [
                        [Circular],
                      ],
                      "fn": [Function],
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                    ReactiveEffect {
                      "active": true,
                      "computed": ComputedRefImpl {
                        "__v_isReadonly": false,
                        "__v_isRef": true,
                        "_cacheable": true,
                        "_dirty": false,
                        "_setter": [Function],
                        "_value": Promise {},
                        "dep": undefined,
                        "effect": [Circular],
                      },
                      "deps": Array [
                        [Circular],
                      ],
                      "fn": [Function],
                      "parent": undefined,
                      "scheduler": [Function],
                    },
                  },
                ],
                "fn": [Function],
                "onTrack": undefined,
                "onTrigger": undefined,
                "parent": undefined,
                "scheduler": [Function],
              },
            ],
          },
          "setupContext": null,
          "setupState": Object {},
          "slots": Object {},
          "sp": null,
          "subTree": Object {
            "__v_isVNode": true,
            "__v_skip": true,
            "anchor": null,
            "appContext": null,
            "children": Array [
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": Array [
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": Array [
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": "Goal #2",
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <h2
                          class="mb-1 mr-auto p-2"
                          id="goal-name"
                        >
                          Goal #2
                        </h2>,
                        "key": null,
                        "patchFlag": 3,
                        "props": Object {
                          "class": "mb-1 mr-auto p-2",
                          "id": "goal-name",
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 9,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "h2",
                      },
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": Array [
                          Object {
                            "__v_isVNode": true,
                            "__v_skip": true,
                            "anchor": null,
                            "appContext": null,
                            "children": Array [
                              Object {
                                "__v_isVNode": true,
                                "__v_skip": true,
                                "anchor": null,
                                "appContext": null,
                                "children": Array [
                                  Object {
                                    "__v_isVNode": true,
                                    "__v_skip": true,
                                    "anchor": null,
                                    "appContext": null,
                                    "children": null,
                                    "component": null,
                                    "dirs": null,
                                    "dynamicChildren": null,
                                    "dynamicProps": null,
                                    "el": <font-awesome-icon
                                      icon="user-pen"
                                    />,
                                    "key": null,
                                    "patchFlag": 0,
                                    "props": Object {
                                      "icon": "user-pen",
                                    },
                                    "ref": null,
                                    "scopeId": null,
                                    "shapeFlag": 1,
                                    "slotScopeIds": null,
                                    "ssContent": null,
                                    "ssFallback": null,
                                    "staticCount": 0,
                                    "suspense": null,
                                    "target": null,
                                    "targetAnchor": null,
                                    "transition": null,
                                    "type": "font-awesome-icon",
                                  },
                                ],
                                "component": null,
                                "dirs": null,
                                "dynamicChildren": null,
                                "dynamicProps": null,
                                "el": <button
                                  class="badge badge-pill"
                                  id="edit-goal"
                                >
                                  <font-awesome-icon
                                    icon="user-pen"
                                  />
                                </button>,
                                "key": null,
                                "patchFlag": 0,
                                "props": Object {
                                  "class": "badge badge-pill",
                                  "id": "edit-goal",
                                  "onClick": [Function],
                                },
                                "ref": null,
                                "scopeId": null,
                                "shapeFlag": 17,
                                "slotScopeIds": null,
                                "ssContent": null,
                                "ssFallback": null,
                                "staticCount": 0,
                                "suspense": null,
                                "target": null,
                                "targetAnchor": null,
                                "transition": null,
                                "type": "button",
                              },
                              Object {
                                "__v_isVNode": true,
                                "__v_skip": true,
                                "anchor": null,
                                "appContext": null,
                                "children": Array [
                                  Object {
                                    "__v_isVNode": true,
                                    "__v_skip": true,
                                    "anchor": null,
                                    "appContext": null,
                                    "children": null,
                                    "component": null,
                                    "dirs": null,
                                    "dynamicChildren": null,
                                    "dynamicProps": null,
                                    "el": <font-awesome-icon
                                      icon="trash"
                                    />,
                                    "key": null,
                                    "patchFlag": 0,
                                    "props": Object {
                                      "icon": "trash",
                                    },
                                    "ref": null,
                                    "scopeId": null,
                                    "shapeFlag": 1,
                                    "slotScopeIds": null,
                                    "ssContent": null,
                                    "ssFallback": null,
                                    "staticCount": 0,
                                    "suspense": null,
                                    "target": null,
                                    "targetAnchor": null,
                                    "transition": null,
                                    "type": "font-awesome-icon",
                                  },
                                ],
                                "component": null,
                                "dirs": null,
                                "dynamicChildren": null,
                                "dynamicProps": null,
                                "el": <button
                                  class="badge badge-pill text-danger"
                                  id="remove-goal"
                                >
                                  <font-awesome-icon
                                    icon="trash"
                                  />
                                </button>,
                                "key": null,
                                "patchFlag": 0,
                                "props": Object {
                                  "class": "badge badge-pill text-danger",
                                  "id": "remove-goal",
                                  "onClick": [Function],
                                },
                                "ref": null,
                                "scopeId": null,
                                "shapeFlag": 17,
                                "slotScopeIds": null,
                                "ssContent": null,
                                "ssFallback": null,
                                "staticCount": 0,
                                "suspense": null,
                                "target": null,
                                "targetAnchor": null,
                                "transition": null,
                                "type": "button",
                              },
                            ],
                            "component": null,
                            "dirs": null,
                            "dynamicChildren": null,
                            "dynamicProps": null,
                            "el": <div>
                              <button
                                class="badge badge-pill"
                                id="edit-goal"
                              >
                                <font-awesome-icon
                                  icon="user-pen"
                                />
                              </button>
                              <button
                                class="badge badge-pill text-danger"
                                id="remove-goal"
                              >
                                <font-awesome-icon
                                  icon="trash"
                                />
                              </button>
                            </div>,
                            "key": null,
                            "patchFlag": 0,
                            "props": null,
                            "ref": null,
                            "scopeId": null,
                            "shapeFlag": 17,
                            "slotScopeIds": null,
                            "ssContent": null,
                            "ssFallback": null,
                            "staticCount": 0,
                            "suspense": null,
                            "target": null,
                            "targetAnchor": null,
                            "transition": null,
                            "type": "div",
                          },
                          Object {
                            "__v_isVNode": true,
                            "__v_skip": true,
                            "anchor": null,
                            "appContext": null,
                            "children": " In Progress ",
                            "component": null,
                            "dirs": null,
                            "dynamicChildren": Array [],
                            "dynamicProps": null,
                            "el": <button
                              class="badge badge-warning badge-pill"
                              id="toggle-goal-completion-in-progress"
                            >
                               In Progress 
                            </button>,
                            "key": 1,
                            "patchFlag": 0,
                            "props": Object {
                              "class": "badge badge-warning badge-pill",
                              "id": "toggle-goal-completion-in-progress",
                              "key": 1,
                              "onClick": [Function],
                            },
                            "ref": null,
                            "scopeId": null,
                            "shapeFlag": 9,
                            "slotScopeIds": null,
                            "ssContent": null,
                            "ssFallback": null,
                            "staticCount": 0,
                            "suspense": null,
                            "target": null,
                            "targetAnchor": null,
                            "transition": null,
                            "type": "button",
                          },
                        ],
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <div
                          class="flex-column text-right"
                        >
                          <div>
                            <button
                              class="badge badge-pill"
                              id="edit-goal"
                            >
                              <font-awesome-icon
                                icon="user-pen"
                              />
                            </button>
                            <button
                              class="badge badge-pill text-danger"
                              id="remove-goal"
                            >
                              <font-awesome-icon
                                icon="trash"
                              />
                            </button>
                          </div>
                          <button
                            class="badge badge-warning badge-pill"
                            id="toggle-goal-completion-in-progress"
                          >
                             In Progress 
                          </button>
                        </div>,
                        "key": null,
                        "patchFlag": 0,
                        "props": Object {
                          "class": "flex-column text-right",
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 17,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "div",
                      },
                    ],
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <div
                      class="d-flex w-100 justify-content-between align-items-center"
                    >
                      <h2
                        class="mb-1 mr-auto p-2"
                        id="goal-name"
                      >
                        Goal #2
                      </h2>
                      <div
                        class="flex-column text-right"
                      >
                        <div>
                          <button
                            class="badge badge-pill"
                            id="edit-goal"
                          >
                            <font-awesome-icon
                              icon="user-pen"
                            />
                          </button>
                          <button
                            class="badge badge-pill text-danger"
                            id="remove-goal"
                          >
                            <font-awesome-icon
                              icon="trash"
                            />
                          </button>
                        </div>
                        <button
                          class="badge badge-warning badge-pill"
                          id="toggle-goal-completion-in-progress"
                        >
                           In Progress 
                        </button>
                      </div>
                    </div>,
                    "key": null,
                    "patchFlag": 0,
                    "props": Object {
                      "class": "d-flex w-100 justify-content-between align-items-center",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 17,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "div",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": Array [
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": "Description #2",
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <p
                          class="p-2 my-2 list-group-item-light list-group-item-secondary"
                          id="goal-description"
                        >
                          Description #2
                        </p>,
                        "key": null,
                        "patchFlag": 1,
                        "props": Object {
                          "class": "p-2 my-2 list-group-item-light list-group-item-secondary",
                          "id": "goal-description",
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 9,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "p",
                      },
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": null,
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": Array [
                          "timestamp",
                        ],
                        "el": <appdate
                          class="badge badge-light badge-pill pull-right"
                          timestamp="2022-04-15T07:25:23.269770Z"
                        />,
                        "key": null,
                        "patchFlag": 8,
                        "props": Object {
                          "class": "badge badge-light badge-pill pull-right",
                          "timestamp": "2022-04-15T07:25:23.269770Z",
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 1,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "AppDate",
                      },
                    ],
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <div
                      class="align-items-end d-flex w-100 justify-content-between"
                    >
                      <p
                        class="p-2 my-2 list-group-item-light list-group-item-secondary"
                        id="goal-description"
                      >
                        Description #2
                      </p>
                      <appdate
                        class="badge badge-light badge-pill pull-right"
                        timestamp="2022-04-15T07:25:23.269770Z"
                      />
                    </div>,
                    "key": null,
                    "patchFlag": 0,
                    "props": Object {
                      "class": "align-items-end d-flex w-100 justify-content-between",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 17,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "div",
                  },
                ],
                "component": null,
                "dirs": null,
                "dynamicChildren": Array [
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": "Goal #2",
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <h2
                      class="mb-1 mr-auto p-2"
                      id="goal-name"
                    >
                      Goal #2
                    </h2>,
                    "key": null,
                    "patchFlag": 3,
                    "props": Object {
                      "class": "mb-1 mr-auto p-2",
                      "id": "goal-name",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 9,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "h2",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": " In Progress ",
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": Array [],
                    "dynamicProps": null,
                    "el": <button
                      class="badge badge-warning badge-pill"
                      id="toggle-goal-completion-in-progress"
                    >
                       In Progress 
                    </button>,
                    "key": 1,
                    "patchFlag": 0,
                    "props": Object {
                      "class": "badge badge-warning badge-pill",
                      "id": "toggle-goal-completion-in-progress",
                      "key": 1,
                      "onClick": [Function],
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 9,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "button",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": "Description #2",
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <p
                      class="p-2 my-2 list-group-item-light list-group-item-secondary"
                      id="goal-description"
                    >
                      Description #2
                    </p>,
                    "key": null,
                    "patchFlag": 1,
                    "props": Object {
                      "class": "p-2 my-2 list-group-item-light list-group-item-secondary",
                      "id": "goal-description",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 9,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "p",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": null,
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": Array [
                      "timestamp",
                    ],
                    "el": <appdate
                      class="badge badge-light badge-pill pull-right"
                      timestamp="2022-04-15T07:25:23.269770Z"
                    />,
                    "key": null,
                    "patchFlag": 8,
                    "props": Object {
                      "class": "badge badge-light badge-pill pull-right",
                      "timestamp": "2022-04-15T07:25:23.269770Z",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 1,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "AppDate",
                  },
                ],
                "dynamicProps": null,
                "el": <div
                  class="list-group-item-heading"
                >
                  <div
                    class="d-flex w-100 justify-content-between align-items-center"
                  >
                    <h2
                      class="mb-1 mr-auto p-2"
                      id="goal-name"
                    >
                      Goal #2
                    </h2>
                    <div
                      class="flex-column text-right"
                    >
                      <div>
                        <button
                          class="badge badge-pill"
                          id="edit-goal"
                        >
                          <font-awesome-icon
                            icon="user-pen"
                          />
                        </button>
                        <button
                          class="badge badge-pill text-danger"
                          id="remove-goal"
                        >
                          <font-awesome-icon
                            icon="trash"
                          />
                        </button>
                      </div>
                      <button
                        class="badge badge-warning badge-pill"
                        id="toggle-goal-completion-in-progress"
                      >
                         In Progress 
                      </button>
                    </div>
                  </div>
                  <div
                    class="align-items-end d-flex w-100 justify-content-between"
                  >
                    <p
                      class="p-2 my-2 list-group-item-light list-group-item-secondary"
                      id="goal-description"
                    >
                      Description #2
                    </p>
                    <appdate
                      class="badge badge-light badge-pill pull-right"
                      timestamp="2022-04-15T07:25:23.269770Z"
                    />
                  </div>
                </div>,
                "key": 0,
                "patchFlag": 0,
                "props": Object {
                  "class": "list-group-item-heading",
                  "key": 0,
                },
                "ref": null,
                "scopeId": null,
                "shapeFlag": 17,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": "div",
              },
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": Array [
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": "v-if",
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": Array [],
                    "dynamicProps": null,
                    "el": <!--v-if-->,
                    "key": null,
                    "patchFlag": 0,
                    "props": null,
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 8,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": Symbol(Comment),
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": null,
                    "component": Object {
                      "a": null,
                      "accessCache": Object {},
                      "appContext": Object {
                        "app": [Circular],
                        "components": Object {
                          "transition": Object {
                            "name": "transition",
                          },
                          "transition-group": Object {
                            "name": "transition-group",
                          },
                        },
                        "config": Object {
                          "compilerOptions": Object {},
                          "errorHandler": undefined,
                          "globalProperties": Object {},
                          "isNativeTag": [Function],
                          "optionMergeStrategies": Object {},
                          "performance": false,
                          "warnHandler": undefined,
                        },
                        "directives": Object {},
                        "emitsCache": WeakMap {},
                        "mixins": Array [
                          Object {
                            "beforeCreate": [Function],
                          },
                        ],
                        "optionsCache": WeakMap {},
                        "propsCache": WeakMap {},
                        "provides": Object {},
                        "reload": [Function],
                      },
                      "asyncDep": null,
                      "asyncResolved": false,
                      "attrs": Object {
                        "onAddTask": [Function],
                      },
                      "bc": null,
                      "bm": null,
                      "bu": null,
                      "bum": null,
                      "c": null,
                      "components": null,
                      "ctx": Object {
                        "$store": Object {
                          "dispatch": [MockFunction] {
                            "calls": Array [
                              Array [
                                "fetchGoalTasks",
                                Object {
                                  "goalId": "1",
                                },
                              ],
                            ],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "getters": Object {
                            "activeCompletedGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Array [],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [MockFunction],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Array [],
                                },
                              ],
                            },
                            "activeInProgressGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Array [],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goal": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "1",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goalTasks": [MockFunction],
                          },
                        },
                      },
                      "da": null,
                      "data": Object {},
                      "directives": null,
                      "ec": null,
                      "effect": ReactiveEffect {
                        "active": true,
                        "allowRecurse": true,
                        "deps": Array [
                          Set {
                            [Circular],
                          },
                        ],
                        "fn": [Function],
                        "onTrack": undefined,
                        "onTrigger": undefined,
                        "parent": undefined,
                        "scheduler": [Function],
                      },
                      "emit": [Function],
                      "emitsOptions": null,
                      "emitted": null,
                      "exposeProxy": null,
                      "exposed": null,
                      "inheritAttrs": undefined,
                      "isDeactivated": false,
                      "isMounted": true,
                      "isUnmounted": false,
                      "m": null,
                      "next": null,
                      "parent": [Circular],
                      "props": Object {},
                      "propsDefaults": Object {},
                      "propsOptions": Array [
                        Object {},
                        Array [],
                      ],
                      "provides": Object {},
                      "proxy": Object {
                        "$store": Object {
                          "dispatch": [MockFunction] {
                            "calls": Array [
                              Array [
                                "fetchGoalTasks",
                                Object {
                                  "goalId": "1",
                                },
                              ],
                            ],
                            "results": Array [
                              Object {
                                "type": "return",
                                "value": undefined,
                              },
                            ],
                          },
                          "getters": Object {
                            "activeCompletedGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Array [],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "activeGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  [MockFunction],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Array [],
                                },
                              ],
                            },
                            "activeInProgressGoalTasks": [MockFunction] {
                              "calls": Array [
                                Array [
                                  Array [],
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goal": [MockFunction] {
                              "calls": Array [
                                Array [
                                  "1",
                                ],
                              ],
                              "results": Array [
                                Object {
                                  "type": "return",
                                  "value": Promise {},
                                },
                              ],
                            },
                            "goalTasks": [MockFunction],
                          },
                        },
                      },
                      "refs": Object {},
                      "render": [Function],
                      "renderCache": Array [],
                      "root": [Circular],
                      "rtc": null,
                      "rtg": null,
                      "scope": EffectScope {
                        "active": true,
                        "cleanups": Array [],
                        "effects": Array [
                          ReactiveEffect {
                            "active": true,
                            "allowRecurse": true,
                            "deps": Array [
                              Set {
                                [Circular],
                              },
                            ],
                            "fn": [Function],
                            "onTrack": undefined,
                            "onTrigger": undefined,
                            "parent": undefined,
                            "scheduler": [Function],
                          },
                        ],
                      },
                      "setupContext": Object {
                        "attrs": Object {
                          "onAddTask": [Function],
                        },
                        "emit": [Function],
                        "expose": [Function],
                        "slots": Object {},
                      },
                      "setupState": Object {},
                      "slots": Object {},
                      "sp": null,
                      "subTree": Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": null,
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <task-add-stub />,
                        "key": null,
                        "patchFlag": 16,
                        "props": Object {
                          "onAddTask": [Function],
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 1,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "task-add-stub",
                      },
                      "suspense": null,
                      "suspenseId": 0,
                      "type": Object {
                        "name": "TaskAdd",
                        "props": Object {},
                        "setup": [Function],
                      },
                      "u": null,
                      "uid": 2,
                      "um": null,
                      "update": [Function],
                      "vnode": [Circular],
                      "withProxy": null,
                    },
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": Array [
                      "onAddTask",
                    ],
                    "el": <task-add-stub />,
                    "key": null,
                    "patchFlag": 8,
                    "props": Object {
                      "onAddTask": [Function],
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 4,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": Object {
                      "name": "TaskAdd",
                      "props": Object {},
                      "setup": [Function],
                    },
                  },
                ],
                "component": null,
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": null,
                "el": <div
                  class="pt-3 container list-group"
                >
                  <!--v-if-->
                  <task-add-stub />
                </div>,
                "key": null,
                "patchFlag": 0,
                "props": Object {
                  "class": "pt-3 container list-group",
                },
                "ref": null,
                "scopeId": null,
                "shapeFlag": 17,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": "div",
              },
            ],
            "component": null,
            "dirs": null,
            "dynamicChildren": Array [
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": Array [
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": Array [
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": "Goal #2",
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <h2
                          class="mb-1 mr-auto p-2"
                          id="goal-name"
                        >
                          Goal #2
                        </h2>,
                        "key": null,
                        "patchFlag": 3,
                        "props": Object {
                          "class": "mb-1 mr-auto p-2",
                          "id": "goal-name",
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 9,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "h2",
                      },
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": Array [
                          Object {
                            "__v_isVNode": true,
                            "__v_skip": true,
                            "anchor": null,
                            "appContext": null,
                            "children": Array [
                              Object {
                                "__v_isVNode": true,
                                "__v_skip": true,
                                "anchor": null,
                                "appContext": null,
                                "children": Array [
                                  Object {
                                    "__v_isVNode": true,
                                    "__v_skip": true,
                                    "anchor": null,
                                    "appContext": null,
                                    "children": null,
                                    "component": null,
                                    "dirs": null,
                                    "dynamicChildren": null,
                                    "dynamicProps": null,
                                    "el": <font-awesome-icon
                                      icon="user-pen"
                                    />,
                                    "key": null,
                                    "patchFlag": 0,
                                    "props": Object {
                                      "icon": "user-pen",
                                    },
                                    "ref": null,
                                    "scopeId": null,
                                    "shapeFlag": 1,
                                    "slotScopeIds": null,
                                    "ssContent": null,
                                    "ssFallback": null,
                                    "staticCount": 0,
                                    "suspense": null,
                                    "target": null,
                                    "targetAnchor": null,
                                    "transition": null,
                                    "type": "font-awesome-icon",
                                  },
                                ],
                                "component": null,
                                "dirs": null,
                                "dynamicChildren": null,
                                "dynamicProps": null,
                                "el": <button
                                  class="badge badge-pill"
                                  id="edit-goal"
                                >
                                  <font-awesome-icon
                                    icon="user-pen"
                                  />
                                </button>,
                                "key": null,
                                "patchFlag": 0,
                                "props": Object {
                                  "class": "badge badge-pill",
                                  "id": "edit-goal",
                                  "onClick": [Function],
                                },
                                "ref": null,
                                "scopeId": null,
                                "shapeFlag": 17,
                                "slotScopeIds": null,
                                "ssContent": null,
                                "ssFallback": null,
                                "staticCount": 0,
                                "suspense": null,
                                "target": null,
                                "targetAnchor": null,
                                "transition": null,
                                "type": "button",
                              },
                              Object {
                                "__v_isVNode": true,
                                "__v_skip": true,
                                "anchor": null,
                                "appContext": null,
                                "children": Array [
                                  Object {
                                    "__v_isVNode": true,
                                    "__v_skip": true,
                                    "anchor": null,
                                    "appContext": null,
                                    "children": null,
                                    "component": null,
                                    "dirs": null,
                                    "dynamicChildren": null,
                                    "dynamicProps": null,
                                    "el": <font-awesome-icon
                                      icon="trash"
                                    />,
                                    "key": null,
                                    "patchFlag": 0,
                                    "props": Object {
                                      "icon": "trash",
                                    },
                                    "ref": null,
                                    "scopeId": null,
                                    "shapeFlag": 1,
                                    "slotScopeIds": null,
                                    "ssContent": null,
                                    "ssFallback": null,
                                    "staticCount": 0,
                                    "suspense": null,
                                    "target": null,
                                    "targetAnchor": null,
                                    "transition": null,
                                    "type": "font-awesome-icon",
                                  },
                                ],
                                "component": null,
                                "dirs": null,
                                "dynamicChildren": null,
                                "dynamicProps": null,
                                "el": <button
                                  class="badge badge-pill text-danger"
                                  id="remove-goal"
                                >
                                  <font-awesome-icon
                                    icon="trash"
                                  />
                                </button>,
                                "key": null,
                                "patchFlag": 0,
                                "props": Object {
                                  "class": "badge badge-pill text-danger",
                                  "id": "remove-goal",
                                  "onClick": [Function],
                                },
                                "ref": null,
                                "scopeId": null,
                                "shapeFlag": 17,
                                "slotScopeIds": null,
                                "ssContent": null,
                                "ssFallback": null,
                                "staticCount": 0,
                                "suspense": null,
                                "target": null,
                                "targetAnchor": null,
                                "transition": null,
                                "type": "button",
                              },
                            ],
                            "component": null,
                            "dirs": null,
                            "dynamicChildren": null,
                            "dynamicProps": null,
                            "el": <div>
                              <button
                                class="badge badge-pill"
                                id="edit-goal"
                              >
                                <font-awesome-icon
                                  icon="user-pen"
                                />
                              </button>
                              <button
                                class="badge badge-pill text-danger"
                                id="remove-goal"
                              >
                                <font-awesome-icon
                                  icon="trash"
                                />
                              </button>
                            </div>,
                            "key": null,
                            "patchFlag": 0,
                            "props": null,
                            "ref": null,
                            "scopeId": null,
                            "shapeFlag": 17,
                            "slotScopeIds": null,
                            "ssContent": null,
                            "ssFallback": null,
                            "staticCount": 0,
                            "suspense": null,
                            "target": null,
                            "targetAnchor": null,
                            "transition": null,
                            "type": "div",
                          },
                          Object {
                            "__v_isVNode": true,
                            "__v_skip": true,
                            "anchor": null,
                            "appContext": null,
                            "children": " In Progress ",
                            "component": null,
                            "dirs": null,
                            "dynamicChildren": Array [],
                            "dynamicProps": null,
                            "el": <button
                              class="badge badge-warning badge-pill"
                              id="toggle-goal-completion-in-progress"
                            >
                               In Progress 
                            </button>,
                            "key": 1,
                            "patchFlag": 0,
                            "props": Object {
                              "class": "badge badge-warning badge-pill",
                              "id": "toggle-goal-completion-in-progress",
                              "key": 1,
                              "onClick": [Function],
                            },
                            "ref": null,
                            "scopeId": null,
                            "shapeFlag": 9,
                            "slotScopeIds": null,
                            "ssContent": null,
                            "ssFallback": null,
                            "staticCount": 0,
                            "suspense": null,
                            "target": null,
                            "targetAnchor": null,
                            "transition": null,
                            "type": "button",
                          },
                        ],
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <div
                          class="flex-column text-right"
                        >
                          <div>
                            <button
                              class="badge badge-pill"
                              id="edit-goal"
                            >
                              <font-awesome-icon
                                icon="user-pen"
                              />
                            </button>
                            <button
                              class="badge badge-pill text-danger"
                              id="remove-goal"
                            >
                              <font-awesome-icon
                                icon="trash"
                              />
                            </button>
                          </div>
                          <button
                            class="badge badge-warning badge-pill"
                            id="toggle-goal-completion-in-progress"
                          >
                             In Progress 
                          </button>
                        </div>,
                        "key": null,
                        "patchFlag": 0,
                        "props": Object {
                          "class": "flex-column text-right",
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 17,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "div",
                      },
                    ],
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <div
                      class="d-flex w-100 justify-content-between align-items-center"
                    >
                      <h2
                        class="mb-1 mr-auto p-2"
                        id="goal-name"
                      >
                        Goal #2
                      </h2>
                      <div
                        class="flex-column text-right"
                      >
                        <div>
                          <button
                            class="badge badge-pill"
                            id="edit-goal"
                          >
                            <font-awesome-icon
                              icon="user-pen"
                            />
                          </button>
                          <button
                            class="badge badge-pill text-danger"
                            id="remove-goal"
                          >
                            <font-awesome-icon
                              icon="trash"
                            />
                          </button>
                        </div>
                        <button
                          class="badge badge-warning badge-pill"
                          id="toggle-goal-completion-in-progress"
                        >
                           In Progress 
                        </button>
                      </div>
                    </div>,
                    "key": null,
                    "patchFlag": 0,
                    "props": Object {
                      "class": "d-flex w-100 justify-content-between align-items-center",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 17,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "div",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": Array [
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": "Description #2",
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": null,
                        "el": <p
                          class="p-2 my-2 list-group-item-light list-group-item-secondary"
                          id="goal-description"
                        >
                          Description #2
                        </p>,
                        "key": null,
                        "patchFlag": 1,
                        "props": Object {
                          "class": "p-2 my-2 list-group-item-light list-group-item-secondary",
                          "id": "goal-description",
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 9,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "p",
                      },
                      Object {
                        "__v_isVNode": true,
                        "__v_skip": true,
                        "anchor": null,
                        "appContext": null,
                        "children": null,
                        "component": null,
                        "dirs": null,
                        "dynamicChildren": null,
                        "dynamicProps": Array [
                          "timestamp",
                        ],
                        "el": <appdate
                          class="badge badge-light badge-pill pull-right"
                          timestamp="2022-04-15T07:25:23.269770Z"
                        />,
                        "key": null,
                        "patchFlag": 8,
                        "props": Object {
                          "class": "badge badge-light badge-pill pull-right",
                          "timestamp": "2022-04-15T07:25:23.269770Z",
                        },
                        "ref": null,
                        "scopeId": null,
                        "shapeFlag": 1,
                        "slotScopeIds": null,
                        "ssContent": null,
                        "ssFallback": null,
                        "staticCount": 0,
                        "suspense": null,
                        "target": null,
                        "targetAnchor": null,
                        "transition": null,
                        "type": "AppDate",
                      },
                    ],
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <div
                      class="align-items-end d-flex w-100 justify-content-between"
                    >
                      <p
                        class="p-2 my-2 list-group-item-light list-group-item-secondary"
                        id="goal-description"
                      >
                        Description #2
                      </p>
                      <appdate
                        class="badge badge-light badge-pill pull-right"
                        timestamp="2022-04-15T07:25:23.269770Z"
                      />
                    </div>,
                    "key": null,
                    "patchFlag": 0,
                    "props": Object {
                      "class": "align-items-end d-flex w-100 justify-content-between",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 17,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "div",
                  },
                ],
                "component": null,
                "dirs": null,
                "dynamicChildren": Array [
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": "Goal #2",
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <h2
                      class="mb-1 mr-auto p-2"
                      id="goal-name"
                    >
                      Goal #2
                    </h2>,
                    "key": null,
                    "patchFlag": 3,
                    "props": Object {
                      "class": "mb-1 mr-auto p-2",
                      "id": "goal-name",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 9,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "h2",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": " In Progress ",
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": Array [],
                    "dynamicProps": null,
                    "el": <button
                      class="badge badge-warning badge-pill"
                      id="toggle-goal-completion-in-progress"
                    >
                       In Progress 
                    </button>,
                    "key": 1,
                    "patchFlag": 0,
                    "props": Object {
                      "class": "badge badge-warning badge-pill",
                      "id": "toggle-goal-completion-in-progress",
                      "key": 1,
                      "onClick": [Function],
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 9,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "button",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": "Description #2",
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <p
                      class="p-2 my-2 list-group-item-light list-group-item-secondary"
                      id="goal-description"
                    >
                      Description #2
                    </p>,
                    "key": null,
                    "patchFlag": 1,
                    "props": Object {
                      "class": "p-2 my-2 list-group-item-light list-group-item-secondary",
                      "id": "goal-description",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 9,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "p",
                  },
                  Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": null,
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": Array [
                      "timestamp",
                    ],
                    "el": <appdate
                      class="badge badge-light badge-pill pull-right"
                      timestamp="2022-04-15T07:25:23.269770Z"
                    />,
                    "key": null,
                    "patchFlag": 8,
                    "props": Object {
                      "class": "badge badge-light badge-pill pull-right",
                      "timestamp": "2022-04-15T07:25:23.269770Z",
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 1,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "AppDate",
                  },
                ],
                "dynamicProps": null,
                "el": <div
                  class="list-group-item-heading"
                >
                  <div
                    class="d-flex w-100 justify-content-between align-items-center"
                  >
                    <h2
                      class="mb-1 mr-auto p-2"
                      id="goal-name"
                    >
                      Goal #2
                    </h2>
                    <div
                      class="flex-column text-right"
                    >
                      <div>
                        <button
                          class="badge badge-pill"
                          id="edit-goal"
                        >
                          <font-awesome-icon
                            icon="user-pen"
                          />
                        </button>
                        <button
                          class="badge badge-pill text-danger"
                          id="remove-goal"
                        >
                          <font-awesome-icon
                            icon="trash"
                          />
                        </button>
                      </div>
                      <button
                        class="badge badge-warning badge-pill"
                        id="toggle-goal-completion-in-progress"
                      >
                         In Progress 
                      </button>
                    </div>
                  </div>
                  <div
                    class="align-items-end d-flex w-100 justify-content-between"
                  >
                    <p
                      class="p-2 my-2 list-group-item-light list-group-item-secondary"
                      id="goal-description"
                    >
                      Description #2
                    </p>
                    <appdate
                      class="badge badge-light badge-pill pull-right"
                      timestamp="2022-04-15T07:25:23.269770Z"
                    />
                  </div>
                </div>,
                "key": 0,
                "patchFlag": 0,
                "props": Object {
                  "class": "list-group-item-heading",
                  "key": 0,
                },
                "ref": null,
                "scopeId": null,
                "shapeFlag": 17,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": "div",
              },
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": "v-if",
                "component": null,
                "dirs": null,
                "dynamicChildren": Array [],
                "dynamicProps": null,
                "el": <!--v-if-->,
                "key": null,
                "patchFlag": 0,
                "props": null,
                "ref": null,
                "scopeId": null,
                "shapeFlag": 8,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Symbol(Comment),
              },
              Object {
                "__v_isVNode": true,
                "__v_skip": true,
                "anchor": null,
                "appContext": null,
                "children": null,
                "component": Object {
                  "a": null,
                  "accessCache": Object {
                    "$store": 4,
                    "@@__IMMUTABLE_ITERABLE__@@": 0,
                    "@@__IMMUTABLE_RECORD__@@": 0,
                    "_isMockFunction": 0,
                    "constructor": 0,
                    "isVueInstance": 0,
                    "toJSON": 0,
                    Symbol(Symbol.toStringTag): 0,
                  },
                  "appContext": Object {
                    "app": [Circular],
                    "components": Object {
                      "transition": Object {
                        "name": "transition",
                      },
                      "transition-group": Object {
                        "name": "transition-group",
                      },
                    },
                    "config": Object {
                      "compilerOptions": Object {},
                      "errorHandler": undefined,
                      "globalProperties": Object {},
                      "isNativeTag": [Function],
                      "optionMergeStrategies": Object {},
                      "performance": false,
                      "warnHandler": undefined,
                    },
                    "directives": Object {},
                    "emitsCache": WeakMap {},
                    "mixins": Array [
                      Object {
                        "beforeCreate": [Function],
                      },
                    ],
                    "optionsCache": WeakMap {},
                    "propsCache": WeakMap {},
                    "provides": Object {},
                    "reload": [Function],
                  },
                  "asyncDep": null,
                  "asyncResolved": false,
                  "attrs": Object {
                    "onAddTask": [Function],
                  },
                  "bc": null,
                  "bm": null,
                  "bu": null,
                  "bum": null,
                  "c": null,
                  "components": null,
                  "ctx": Object {
                    "$store": Object {
                      "dispatch": [MockFunction] {
                        "calls": Array [
                          Array [
                            "fetchGoalTasks",
                            Object {
                              "goalId": "1",
                            },
                          ],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "getters": Object {
                        "activeCompletedGoalTasks": [MockFunction] {
                          "calls": Array [
                            Array [
                              Array [],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": Promise {},
                            },
                          ],
                        },
                        "activeGoalTasks": [MockFunction] {
                          "calls": Array [
                            Array [
                              [MockFunction],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": Array [],
                            },
                          ],
                        },
                        "activeInProgressGoalTasks": [MockFunction] {
                          "calls": Array [
                            Array [
                              Array [],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": Promise {},
                            },
                          ],
                        },
                        "goal": [MockFunction] {
                          "calls": Array [
                            Array [
                              "1",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": Promise {},
                            },
                          ],
                        },
                        "goalTasks": [MockFunction],
                      },
                    },
                  },
                  "da": null,
                  "data": Object {},
                  "directives": null,
                  "ec": null,
                  "effect": ReactiveEffect {
                    "active": true,
                    "allowRecurse": true,
                    "deps": Array [
                      Set {
                        [Circular],
                      },
                    ],
                    "fn": [Function],
                    "onTrack": undefined,
                    "onTrigger": undefined,
                    "parent": undefined,
                    "scheduler": [Function],
                  },
                  "emit": [Function],
                  "emitsOptions": null,
                  "emitted": null,
                  "exposeProxy": null,
                  "exposed": null,
                  "inheritAttrs": undefined,
                  "isDeactivated": false,
                  "isMounted": true,
                  "isUnmounted": false,
                  "m": null,
                  "next": null,
                  "parent": [Circular],
                  "props": Object {},
                  "propsDefaults": Object {},
                  "propsOptions": Array [
                    Object {},
                    Array [],
                  ],
                  "provides": Object {},
                  "proxy": Object {
                    "$store": Object {
                      "dispatch": [MockFunction] {
                        "calls": Array [
                          Array [
                            "fetchGoalTasks",
                            Object {
                              "goalId": "1",
                            },
                          ],
                        ],
                        "results": Array [
                          Object {
                            "type": "return",
                            "value": undefined,
                          },
                        ],
                      },
                      "getters": Object {
                        "activeCompletedGoalTasks": [MockFunction] {
                          "calls": Array [
                            Array [
                              Array [],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": Promise {},
                            },
                          ],
                        },
                        "activeGoalTasks": [MockFunction] {
                          "calls": Array [
                            Array [
                              [MockFunction],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": Array [],
                            },
                          ],
                        },
                        "activeInProgressGoalTasks": [MockFunction] {
                          "calls": Array [
                            Array [
                              Array [],
                            ],
                          ],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": Promise {},
                            },
                          ],
                        },
                        "goal": [MockFunction] {
                          "calls": Array [
                            Array [
                              "1",
                            ],
                          ],
                          "results": Array [
                            Object {
                              "type": "return",
                              "value": Promise {},
                            },
                          ],
                        },
                        "goalTasks": [MockFunction],
                      },
                    },
                  },
                  "refs": Object {},
                  "render": [Function],
                  "renderCache": Array [],
                  "root": [Circular],
                  "rtc": null,
                  "rtg": null,
                  "scope": EffectScope {
                    "active": true,
                    "cleanups": Array [],
                    "effects": Array [
                      ReactiveEffect {
                        "active": true,
                        "allowRecurse": true,
                        "deps": Array [
                          Set {
                            [Circular],
                          },
                        ],
                        "fn": [Function],
                        "onTrack": undefined,
                        "onTrigger": undefined,
                        "parent": undefined,
                        "scheduler": [Function],
                      },
                    ],
                  },
                  "setupContext": Object {
                    "attrs": Object {
                      "onAddTask": [Function],
                    },
                    "emit": [Function],
                    "expose": [Function],
                    "slots": Object {},
                  },
                  "setupState": Object {},
                  "slots": Object {},
                  "sp": null,
                  "subTree": Object {
                    "__v_isVNode": true,
                    "__v_skip": true,
                    "anchor": null,
                    "appContext": null,
                    "children": null,
                    "component": null,
                    "dirs": null,
                    "dynamicChildren": null,
                    "dynamicProps": null,
                    "el": <task-add-stub />,
                    "key": null,
                    "patchFlag": 16,
                    "props": Object {
                      "onAddTask": [Function],
                    },
                    "ref": null,
                    "scopeId": null,
                    "shapeFlag": 1,
                    "slotScopeIds": null,
                    "ssContent": null,
                    "ssFallback": null,
                    "staticCount": 0,
                    "suspense": null,
                    "target": null,
                    "targetAnchor": null,
                    "transition": null,
                    "type": "task-add-stub",
                  },
                  "suspense": null,
                  "suspenseId": 0,
                  "type": Object {
                    "name": "TaskAdd",
                    "props": Object {},
                    "setup": [Function],
                  },
                  "u": null,
                  "uid": 2,
                  "um": null,
                  "update": [Function],
                  "vnode": [Circular],
                  "withProxy": null,
                },
                "dirs": null,
                "dynamicChildren": null,
                "dynamicProps": Array [
                  "onAddTask",
                ],
                "el": <task-add-stub />,
                "key": null,
                "patchFlag": 8,
                "props": Object {
                  "onAddTask": [Function],
                },
                "ref": null,
                "scopeId": null,
                "shapeFlag": 4,
                "slotScopeIds": null,
                "ssContent": null,
                "ssFallback": null,
                "staticCount": 0,
                "suspense": null,
                "target": null,
                "targetAnchor": null,
                "transition": null,
                "type": Object {
                  "name": "TaskAdd",
                  "props": Object {},
                  "setup": [Function],
                },
              },
            ],
            "dynamicProps": null,
            "el": <div
              class="list-group-item"
            >
              <div
                class="list-group-item-heading"
              >
                <div
                  class="d-flex w-100 justify-content-between align-items-center"
                >
                  <h2
                    class="mb-1 mr-auto p-2"
                    id="goal-name"
                  >
                    Goal #2
                  </h2>
                  <div
                    class="flex-column text-right"
                  >
                    <div>
                      <button
                        class="badge badge-pill"
                        id="edit-goal"
                      >
                        <font-awesome-icon
                          icon="user-pen"
                        />
                      </button>
                      <button
                        class="badge badge-pill text-danger"
                        id="remove-goal"
                      >
                        <font-awesome-icon
                          icon="trash"
                        />
                      </button>
                    </div>
                    <button
                      class="badge badge-warning badge-pill"
                      id="toggle-goal-completion-in-progress"
                    >
                       In Progress 
                    </button>
                  </div>
                </div>
                <div
                  class="align-items-end d-flex w-100 justify-content-between"
                >
                  <p
                    class="p-2 my-2 list-group-item-light list-group-item-secondary"
                    id="goal-description"
                  >
                    Description #2
                  </p>
                  <appdate
                    class="badge badge-light badge-pill pull-right"
                    timestamp="2022-04-15T07:25:23.269770Z"
                  />
                </div>
              </div>
              <div
                class="pt-3 container list-group"
              >
                <!--v-if-->
                <task-add-stub />
              </div>
            </div>,
            "key": null,
            "patchFlag": 0,
            "props": Object {
              "class": "list-group-item",
            },
            "ref": null,
            "scopeId": null,
            "shapeFlag": 17,
            "slotScopeIds": null,
            "ssContent": null,
            "ssFallback": null,
            "staticCount": 0,
            "suspense": null,
            "target": null,
            "targetAnchor": null,
            "transition": null,
            "type": "div",
          },
          "suspense": null,
          "suspenseId": 0,
          "type": Object {
            "components": Object {
              "GoalEditor": Object {
                "data": [Function],
                "emits": Array [
                  "saveEditedGoal",
                  "finishEditingGoal",
                ],
                "methods": Object {
                  "cancelEdit": [Function],
                  "saveGoal": [Function],
                },
                "props": Object {
                  "goal": Object {
                    "required": true,
                    "type": [Function],
                  },
                },
                "render": [Function],
              },
              "TaskAdd": Object {
                "data": [Function],
                "methods": Object {
                  "saveTask": [Function],
                },
                "render": [Function],
              },
              "TaskList": Object {
                "components": Object {
                  "TaskCompleted": Object {
                    "emits": Array [
                      "editTask",
                      "removeTask",
                      "toggleTaskCompletion",
                    ],
                    "methods": Object {
                      "editTask": [Function],
                      "removeTask": [Function],
                      "toggleTaskCompletion": [Function],
                    },
                    "props": Object {
                      "task": Object {
                        "required": true,
                        "type": [Function],
                      },
                    },
                    "render": [Function],
                  },
                  "TaskEditor": Object {
                    "data": [Function],
                    "emits": Array [
                      "saveEditedTask",
                      "finishEditingTask",
                    ],
                    "methods": Object {
                      "cancelEdit": [Function],
                      "saveTask": [Function],
                    },
                    "props": Object {
                      "task": Object {
                        "required": true,
                        "type": [Function],
                      },
                    },
                    "render": [Function],
                  },
                  "TaskInProgress": Object {
                    "emits": Array [
                      "editTask",
                      "removeTask",
                      "toggleTaskCompletion",
                    ],
                    "methods": Object {
                      "editTask": [Function],
                      "removeTask": [Function],
                      "toggleTaskCompletion": [Function],
                    },
                    "props": Object {
                      "task": Object {
                        "required": true,
                        "type": [Function],
                      },
                    },
                    "render": [Function],
                  },
                },
                "data": [Function],
                "emits": Array [
                  "saveEditedTask",
                ],
                "methods": Object {
                  "editTask": [Function],
                  "editingThisTask": [Function],
                  "finishEditingTask": [Function],
                  "removeTask": [Function],
                  "saveEditedTask": [Function],
                  "toggleTaskCompletion": [Function],
                },
                "props": Object {
                  "tasks": Object {
                    "requred": true,
                    "type": [Function],
                  },
                },
                "render": [Function],
              },
            },
            "computed": Object {
              "activeCompletedGoalTasks": [Function],
              "activeGoalTasks": [Function],
              "activeInProgressGoalTasks": [Function],
              "goal": [Function],
              "goalTasks": [Function],
            },
            "created": [Function],
            "data": [Function],
            "methods": Object {
              "addTask": [Function],
              "editGoal": [Function],
              "finishEditingGoal": [Function],
              "removeGoal": [Function],
              "saveEditedGoal": [Function],
              "saveEditedTask": [Function],
              "toggleGoalCompletion": [Function],
            },
            "props": Object {
              "goalId": Object {
                "0": false,
                "1": true,
                "required": true,
                "type": [Function],
              },
            },
            "propsData": Object {
              "goalId": "1",
            },
            "render": [Function],
          },
          "u": null,
          "uid": 1,
          "um": null,
          "update": [Function],
          "vnode": [Circular],
          "withProxy": null,
        },
        "dirs": null,
        "dynamicChildren": null,
        "dynamicProps": null,
        "el": <div
          class="list-group-item"
        >
          <div
            class="list-group-item-heading"
          >
            <div
              class="d-flex w-100 justify-content-between align-items-center"
            >
              <h2
                class="mb-1 mr-auto p-2"
                id="goal-name"
              >
                Goal #2
              </h2>
              <div
                class="flex-column text-right"
              >
                <div>
                  <button
                    class="badge badge-pill"
                    id="edit-goal"
                  >
                    <font-awesome-icon
                      icon="user-pen"
                    />
                  </button>
                  <button
                    class="badge badge-pill text-danger"
                    id="remove-goal"
                  >
                    <font-awesome-icon
                      icon="trash"
                    />
                  </button>
                </div>
                <button
                  class="badge badge-warning badge-pill"
                  id="toggle-goal-completion-in-progress"
                >
                   In Progress 
                </button>
              </div>
            </div>
            <div
              class="align-items-end d-flex w-100 justify-content-between"
            >
              <p
                class="p-2 my-2 list-group-item-light list-group-item-secondary"
                id="goal-description"
              >
                Description #2
              </p>
              <appdate
                class="badge badge-light badge-pill pull-right"
                timestamp="2022-04-15T07:25:23.269770Z"
              />
            </div>
          </div>
          <div
            class="pt-3 container list-group"
          >
            <!--v-if-->
            <task-add-stub />
          </div>
        </div>,
        "key": null,
        "patchFlag": 0,
        "props": Object {
          "goalId": "1",
          "ref": "VTU_COMPONENT",
        },
        "ref": Object {
          "f": false,
          "i": [Circular],
          "k": undefined,
          "r": "VTU_COMPONENT",
        },
        "scopeId": null,
        "shapeFlag": 4,
        "slotScopeIds": null,
        "ssContent": null,
        "ssFallback": null,
        "staticCount": 0,
        "suspense": null,
        "target": null,
        "targetAnchor": null,
        "transition": null,
        "type": Object {
          "components": Object {
            "GoalEditor": Object {
              "data": [Function],
              "emits": Array [
                "saveEditedGoal",
                "finishEditingGoal",
              ],
              "methods": Object {
                "cancelEdit": [Function],
                "saveGoal": [Function],
              },
              "props": Object {
                "goal": Object {
                  "required": true,
                  "type": [Function],
                },
              },
              "render": [Function],
            },
            "TaskAdd": Object {
              "data": [Function],
              "methods": Object {
                "saveTask": [Function],
              },
              "render": [Function],
            },
            "TaskList": Object {
              "components": Object {
                "TaskCompleted": Object {
                  "emits": Array [
                    "editTask",
                    "removeTask",
                    "toggleTaskCompletion",
                  ],
                  "methods": Object {
                    "editTask": [Function],
                    "removeTask": [Function],
                    "toggleTaskCompletion": [Function],
                  },
                  "props": Object {
                    "task": Object {
                      "required": true,
                      "type": [Function],
                    },
                  },
                  "render": [Function],
                },
                "TaskEditor": Object {
                  "data": [Function],
                  "emits": Array [
                    "saveEditedTask",
                    "finishEditingTask",
                  ],
                  "methods": Object {
                    "cancelEdit": [Function],
                    "saveTask": [Function],
                  },
                  "props": Object {
                    "task": Object {
                      "required": true,
                      "type": [Function],
                    },
                  },
                  "render": [Function],
                },
                "TaskInProgress": Object {
                  "emits": Array [
                    "editTask",
                    "removeTask",
                    "toggleTaskCompletion",
                  ],
                  "methods": Object {
                    "editTask": [Function],
                    "removeTask": [Function],
                    "toggleTaskCompletion": [Function],
                  },
                  "props": Object {
                    "task": Object {
                      "required": true,
                      "type": [Function],
                    },
                  },
                  "render": [Function],
                },
              },
              "data": [Function],
              "emits": Array [
                "saveEditedTask",
              ],
              "methods": Object {
                "editTask": [Function],
                "editingThisTask": [Function],
                "finishEditingTask": [Function],
                "removeTask": [Function],
                "saveEditedTask": [Function],
                "toggleTaskCompletion": [Function],
              },
              "props": Object {
                "tasks": Object {
                  "requred": true,
                  "type": [Function],
                },
              },
              "render": [Function],
            },
          },
          "computed": Object {
            "activeCompletedGoalTasks": [Function],
            "activeGoalTasks": [Function],
            "activeInProgressGoalTasks": [Function],
            "goal": [Function],
            "goalTasks": [Function],
          },
          "created": [Function],
          "data": [Function],
          "methods": Object {
            "addTask": [Function],
            "editGoal": [Function],
            "finishEditingGoal": [Function],
            "removeGoal": [Function],
            "saveEditedGoal": [Function],
            "saveEditedTask": [Function],
            "toggleGoalCompletion": [Function],
          },
          "props": Object {
            "goalId": Object {
              "0": false,
              "1": true,
              "required": true,
              "type": [Function],
            },
          },
          "propsData": Object {
            "goalId": "1",
          },
          "render": [Function],
        },
      },
      "suspense": null,
      "suspenseId": 0,
      "type": Object {
        "name": "VTU_ROOT",
        "render": [Function],
      },
      "u": null,
      "uid": 0,
      "um": null,
      "update": [Function],
      "vnode": Object {
        "__v_isVNode": true,
        "__v_skip": true,
        "anchor": null,
        "appContext": Object {
          "app": [Circular],
          "components": Object {
            "transition": Object {
              "name": "transition",
            },
            "transition-group": Object {
              "name": "transition-group",
            },
          },
          "config": Object {
            "compilerOptions": Object {},
            "errorHandler": undefined,
            "globalProperties": Object {},
            "isNativeTag": [Function],
            "optionMergeStrategies": Object {},
            "performance": false,
            "warnHandler": undefined,
          },
          "directives": Object {},
          "emitsCache": WeakMap {},
          "mixins": Array [
            Object {
              "beforeCreate": [Function],
            },
          ],
          "optionsCache": WeakMap {},
          "propsCache": WeakMap {},
          "provides": Object {},
          "reload": [Function],
        },
        "children": null,
        "component": [Circular],
        "dirs": null,
        "dynamicChildren": null,
        "dynamicProps": null,
        "el": <div
          class="list-group-item"
        >
          <div
            class="list-group-item-heading"
          >
            <div
              class="d-flex w-100 justify-content-between align-items-center"
            >
              <h2
                class="mb-1 mr-auto p-2"
                id="goal-name"
              >
                Goal #2
              </h2>
              <div
                class="flex-column text-right"
              >
                <div>
                  <button
                    class="badge badge-pill"
                    id="edit-goal"
                  >
                    <font-awesome-icon
                      icon="user-pen"
                    />
                  </button>
                  <button
                    class="badge badge-pill text-danger"
                    id="remove-goal"
                  >
                    <font-awesome-icon
                      icon="trash"
                    />
                  </button>
                </div>
                <button
                  class="badge badge-warning badge-pill"
                  id="toggle-goal-completion-in-progress"
                >
                   In Progress 
                </button>
              </div>
            </div>
            <div
              class="align-items-end d-flex w-100 justify-content-between"
            >
              <p
                class="p-2 my-2 list-group-item-light list-group-item-secondary"
                id="goal-description"
              >
                Description #2
              </p>
              <appdate
                class="badge badge-light badge-pill pull-right"
                timestamp="2022-04-15T07:25:23.269770Z"
              />
            </div>
          </div>
          <div
            class="pt-3 container list-group"
          >
            <!--v-if-->
            <task-add-stub />
          </div>
        </div>,
        "key": null,
        "patchFlag": 0,
        "props": null,
        "ref": null,
        "scopeId": null,
        "shapeFlag": 4,
        "slotScopeIds": null,
        "ssContent": null,
        "ssFallback": null,
        "staticCount": 0,
        "suspense": null,
        "target": null,
        "targetAnchor": null,
        "transition": null,
        "type": Object {
          "name": "VTU_ROOT",
          "render": [Function],
        },
      },
      "withProxy": null,
    },
    "_props": null,
    "_uid": 0,
    "component": [Function],
    "config": Object {
      "compilerOptions": Object {},
      "errorHandler": undefined,
      "globalProperties": Object {},
      "isNativeTag": [Function],
      "optionMergeStrategies": Object {},
      "performance": false,
      "warnHandler": undefined,
    },
    "directive": [Function],
    "mixin": [Function],
    "mount": [Function],
    "provide": [Function],
    "unmount": [Function],
    "use": [Function],
    "version": "3.2.33",
  },
  "__setProps": [Function],
  "componentVM": Object {
    "$store": Object {
      "dispatch": [MockFunction] {
        "calls": Array [
          Array [
            "fetchGoalTasks",
            Object {
              "goalId": "1",
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "getters": Object {
        "activeCompletedGoalTasks": [MockFunction] {
          "calls": Array [
            Array [
              Array [],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        },
        "activeGoalTasks": [MockFunction] {
          "calls": Array [
            Array [
              [MockFunction],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Array [],
            },
          ],
        },
        "activeInProgressGoalTasks": [MockFunction] {
          "calls": Array [
            Array [
              Array [],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        },
        "goal": [MockFunction] {
          "calls": Array [
            Array [
              "1",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        },
        "goalTasks": [MockFunction],
      },
    },
    "activeCompletedGoalTasks": Promise {},
    "activeGoalTasks": Array [],
    "activeInProgressGoalTasks": Promise {},
    "addTask": [Function],
    "editGoal": [Function],
    "editingGoal": false,
    "finishEditingGoal": [Function],
    "goal": Object {
      "completed": false,
      "description": "Description #2",
      "id": 2,
      "name": "Goal #2",
      "removed": false,
      "timestamp": "2022-04-15T06:58:03.382281Z",
      "updated": "2022-04-15T07:25:23.269770Z",
      "user": 6,
    },
    "goalId": "1",
    "goalTasks": [MockFunction],
    "hasOwnProperty": [Function],
    "removeGoal": [Function],
    "saveEditedGoal": [Function],
    "saveEditedTask": [Function],
    "toggleGoalCompletion": [Function],
  },
  "isDisabled": [Function],
  "rootVM": Object {
    "$store": Object {
      "dispatch": [MockFunction] {
        "calls": Array [
          Array [
            "fetchGoalTasks",
            Object {
              "goalId": "1",
            },
          ],
        ],
        "results": Array [
          Object {
            "type": "return",
            "value": undefined,
          },
        ],
      },
      "getters": Object {
        "activeCompletedGoalTasks": [MockFunction] {
          "calls": Array [
            Array [
              Array [],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        },
        "activeGoalTasks": [MockFunction] {
          "calls": Array [
            Array [
              [MockFunction],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Array [],
            },
          ],
        },
        "activeInProgressGoalTasks": [MockFunction] {
          "calls": Array [
            Array [
              Array [],
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        },
        "goal": [MockFunction] {
          "calls": Array [
            Array [
              "1",
            ],
          ],
          "results": Array [
            Object {
              "type": "return",
              "value": Promise {},
            },
          ],
        },
        "goalTasks": [MockFunction],
      },
    },
  },
  "wrapperElement": <div
    class="list-group-item"
  >
    <div
      class="list-group-item-heading"
    >
      <div
        class="d-flex w-100 justify-content-between align-items-center"
      >
        <h2
          class="mb-1 mr-auto p-2"
          id="goal-name"
        >
          Goal #2
        </h2>
        <div
          class="flex-column text-right"
        >
          <div>
            <button
              class="badge badge-pill"
              id="edit-goal"
            >
              <font-awesome-icon
                icon="user-pen"
              />
            </button>
            <button
              class="badge badge-pill text-danger"
              id="remove-goal"
            >
              <font-awesome-icon
                icon="trash"
              />
            </button>
          </div>
          <button
            class="badge badge-warning badge-pill"
            id="toggle-goal-completion-in-progress"
          >
             In Progress 
          </button>
        </div>
      </div>
      <div
        class="align-items-end d-flex w-100 justify-content-between"
      >
        <p
          class="p-2 my-2 list-group-item-light list-group-item-secondary"
          id="goal-description"
        >
          Description #2
        </p>
        <appdate
          class="badge badge-light badge-pill pull-right"
          timestamp="2022-04-15T07:25:23.269770Z"
        />
      </div>
    </div>
    <div
      class="pt-3 container list-group"
    >
      <!--v-if-->
      <task-add-stub />
    </div>
  </div>,
}
`;
